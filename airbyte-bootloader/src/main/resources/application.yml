micronaut:
  application:
    name: airbyte-bootloader
  caches:
    platform-compatibility-provider:
      expire-after-write: 15s
  env:
    cloud-deduction: true
  server:
    port: 9002

airbyte:
  bootloader:
    auto-upgrade-connectors: ${AUTO_UPGRADE_CONNECTORS_PROTOCOL:false}
    migration-baseline-version: ${BOOTLOADER_MIGRATION_BASELINE_VERSION:0.29.0.001}
    run-migration-on-startup: ${RUN_DATABASE_MIGRATION_ON_STARTUP:true}
  connector-registry:
    seed-provider: ${CONNECTOR_REGISTRY_SEED_PROVIDER:local}
    remote:
      base-url: ${CONNECTOR_REGISTRY_BASE_URL:}
      timeout-ms: ${CONNECTOR_REGISTRY_TIMEOUT_MS:30000}
  deployment-mode: ${DEPLOYMENT_MODE:OSS}
  feature-flag:
    client: ${FEATURE_FLAG_CLIENT:}
    path: ${FEATURE_FLAG_PATH:/flags}
    api-key: ${LAUNCHDARKLY_KEY:}
  flyway:
    configs:
      initialization-timeout-ms: ${CONFIGS_DATABASE_INITIALIZATION_TIMEOUT_MS:60000}
    jobs:
      initialization-timeout-ms: ${JOBS_DATABASE_INITIALIZATION_TIMEOUT_MS:60000}
  auth:
    default-realm: ${DEFAULT_REALM:airbyte}
    kubernetes-secret:
      creation-enabled: ${AB_AUTH_SECRET_CREATION_ENABLED:false}
      name: ${AB_KUBERNETES_SECRET_NAME:airbyte-auth-secrets}
      keys:
        instance-admin-password-secret-key: ${AB_INSTANCE_ADMIN_PASSWORD_SECRET_KEY:instance-admin-password}
        instance-admin-client-id-secret-key: ${AB_INSTANCE_ADMIN_CLIENT_ID_SECRET_KEY:instance-admin-client-id}
        instance-admin-client-secret-secret-key: ${AB_INSTANCE_ADMIN_CLIENT_SECRET_SECRET_KEY:instance-admin-client-secret}
        jwt-signature-secret-key: ${AB_JWT_SIGNATURE_SECRET_KEY:jwt-signature-secret}
      values:
        instance-admin-password: ${AB_INSTANCE_ADMIN_PASSWORD:}
        instance-admin-client-id: ${AB_INSTANCE_ADMIN_CLIENT_ID:}
        instance-admin-client-secret: ${AB_INSTANCE_ADMIN_CLIENT_SECRET:}
        jwt-signature-secret: ${AB_JWT_SIGNATURE_SECRET:}

  protocol:
    target:
      range:
        min-version: ${AIRBYTE_PROTOCOL_VERSION_MIN:0.0.0}
        max-version: ${AIRBYTE_PROTOCOL_VERSION_MAX:0.3.0}
  secret:
    persistence: ${SECRET_PERSISTENCE:NO_OP}
    store:
      aws:
        access-key: ${AWS_ACCESS_KEY:}
        secret-key: ${AWS_SECRET_ACCESS_KEY:}
        region: ${AWS_REGION:}
      gcp:
        credentials: ${SECRET_STORE_GCP_CREDENTIALS:}
        project-id: ${SECRET_STORE_GCP_PROJECT_ID:}
      vault:
        address: ${VAULT_ADDRESS:}
        prefix: ${VAULT_PREFIX:}
        token: ${VAULT_AUTH_TOKEN:}
  worker:
    version: ${AIRBYTE_VERSION}
  version: ${AIRBYTE_VERSION}

datasources:
  config:
    connection-test-query: SELECT 1
    connection-timeout: 30000
    idle-timeout: 600000
    initialization-fail-timeout: -1 # Disable fail fast checking to avoid issues due to other pods not being started in time
    maximum-pool-size: 5
    minimum-idle: 0
    url: ${DATABASE_URL}
    driverClassName: org.postgresql.Driver
    username: ${DATABASE_USER}
    password: ${DATABASE_PASSWORD}
  jobs:
    connection-test-query: SELECT 1
    connection-timeout: 30000
    idle-timeout: 600000
    initialization-fail-timeout: -1 # Disable fail fast checking to avoid issues due to other pods not being started in time
    maximum-pool-size: 5
    minimum-idle: 0
    url: ${DATABASE_URL}
    driverClassName: org.postgresql.Driver
    username: ${DATABASE_USER}
    password: ${DATABASE_PASSWORD}

endpoints:
  beans:
    enabled: true
    sensitive: false
  env:
    enabled: true
    sensitive: false
  health:
    enabled: true
    sensitive: false
  info:
    enabled: true
    sensitive: true
  loggers:
    enabled: true
    sensitive: true
  refresh:
    enabled: false
    sensitive: true
  routes:
    enabled: true
    sensitive: false
  threaddump:
    enabled: true
    sensitive: true

flyway:
  enabled: true
  datasources:
    config:
      enabled: false
      locations:
        - "classpath:io/airbyte/db/instance/configs/migrations"
    jobs:
      enabled: false
      locations:
        - "classpath:io/airbyte/db/instance/jobs/migrations"

jpa:
  default:
    properties:
      hibernate:
        show_sql: true

jooq:
  datasources:
    config:
      jackson-converter-enabled: true
      sql-dialect: POSTGRES
    jobs:
      jackson-converter-enabled: true
      sql-dialect: POSTGRES

logger:
  levels:
    com.zaxxer.hikari: ERROR
    com.zaxxer.hikari.pool: ERROR
    io.grpc: INFO
    io.fabric8.kubernetes.client: INFO
    io.netty: INFO
    io.temporal: INFO
#   Uncomment to help resolve issues with conditional beans
#      io.micronaut.context.condition: DEBUG
