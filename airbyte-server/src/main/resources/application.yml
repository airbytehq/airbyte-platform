micronaut:
  application:
    name: airbyte-server
  executors:
    health:
      type: fixed
      n-threads: ${HEALTH_TASK_EXECUTOR_THREADS:10} # Match the data source max pool size below
    io:
      type: fixed
      n-threads: ${IO_TASK_EXECUTOR_THREADS:10} # Match the data source max pool size below
    scheduler:
      type: fixed
      n-threads: ${SCHEDULER_TASK_EXECUTOR_THREADS:25}
  security:
    authentication-provider-strategy: ALL
    enabled: ${API_AUTHORIZATION_ENABLED:false}
  server:
    port: 8001
    cors:
      enabled: true
      configurations:
        web:
          allowed-origins-regex:
            - ^.*$
    netty:
      access-logger:
        enabled: ${HTTP_ACCESS_LOG_ENABLED:true}
    idle-timeout: ${HTTP_IDLE_TIMEOUT:5m}

airbyte:
  edition: ${AIRBYTE_EDITION:community}
  shutdown:
    delay_ms: 20000
  cloud:
    storage:
      logs:
        type: ${WORKER_LOGS_STORAGE_TYPE:}
        gcs:
          application-credentials: ${GOOGLE_APPLICATION_CREDENTIALS:}
          bucket: ${GCS_LOG_BUCKET:}
        minio:
          access-key: ${AWS_ACCESS_KEY_ID:}
          bucket: ${S3_LOG_BUCKET:}
          endpoint: ${S3_MINIO_ENDPOINT:}
          secret-access-key: ${AWS_SECRET_ACCESS_KEY:}
        s3:
          access-key: ${AWS_ACCESS_KEY_ID:}
          bucket: ${S3_LOG_BUCKET:}
          region: ${S3_LOG_BUCKET_REGION:}
          secret-access-key: ${AWS_SECRET_ACCESS_KEY:}
      state:
        type: ${WORKER_STATE_STORAGE_TYPE:}
        gcs:
          application-credentials: ${STATE_STORAGE_GCS_APPLICATION_CREDENTIALS:}
          bucket: ${STATE_STORAGE_GCS_BUCKET_NAME:}
        minio:
          access-key: ${STATE_STORAGE_MINIO_ACCESS_KEY:}
          bucket: ${STATE_STORAGE_MINIO_BUCKET_NAME:}
          endpoint: ${STATE_STORAGE_MINIO_ENDPOINT:}
          secret-access-key: ${STATE_STORAGE_MINIO_SECRET_ACCESS_KEY:}
        s3:
          access-key: ${STATE_STORAGE_S3_ACCESS_KEY:}
          bucket: ${STATE_STORAGE_S3_BUCKET_NAME:}
          region: ${STATE_STORAGE_S3_REGION:}
          secret-access-key: ${STATE_STORAGE_S3_SECRET_ACCESS_KEY:}
  connector-registry:
    remote:
      base-url: ${CONNECTOR_REGISTRY_BASE_URL:`https://connectors.airbyte.com/`}
      timeout-ms: ${CONNECTOR_REGISTRY_TIMEOUT_MS:30000}
  deployment-mode: ${DEPLOYMENT_MODE:OSS}
  feature-flag:
    client: ${FEATURE_FLAG_CLIENT:}
    path: ${FEATURE_FLAG_PATH:/flags}
    api-key: ${LAUNCHDARKLY_KEY:}
  flyway:
    configs:
      initialization-timeout-ms: ${CONFIGS_DATABASE_INITIALIZATION_TIMEOUT_MS:60000}
      minimum-migration-version: ${CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION}
    jobs:
      initialization-timeout-ms: ${JOBS_DATABASE_INITIALIZATION_TIMEOUT_MS:60000}
      minimum-migration-version: ${JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION}
  version: ${AIRBYTE_VERSION}
  secret:
    persistence: ${SECRET_PERSISTENCE:TESTING_CONFIG_DB_TABLE}
    store:
      aws:
        access-key: ${AWS_ACCESS_KEY:}
        secret-key: ${AWS_SECRET_ACCESS_KEY:}
      gcp:
        credentials: ${SECRET_STORE_GCP_CREDENTIALS:}
        project-id: ${SECRET_STORE_GCP_PROJECT_ID:}
      vault:
        address: ${VAULT_ADDRESS:}
        prefix: ${VAULT_PREFIX:}
        token: ${VAULT_AUTH_TOKEN:}
  role: ${AIRBYTE_ROLE:dev}
  tracking-strategy: ${TRACKING_STRATEGY:LOGGING}
  worker:
    kube-job-configs:
      default:
        annotations: ${JOB_KUBE_ANNOTATIONS:}
        node-selectors: ${JOB_KUBE_NODE_SELECTORS:}
        cpu-limit: ${JOB_MAIN_CONTAINER_CPU_LIMIT:}
        cpu-request: ${JOB_MAIN_CONTAINER_CPU_REQUEST:}
        memory-limit: ${JOB_MAIN_CONTAINER_MEMORY_LIMIT:}
        memory-request: ${JOB_MAIN_CONTAINER_MEMORY_REQUEST:}

      # Generally low resource containers
      destination-stderr:
        cpu-limit: 0.5
        cpu-request: 0.01
        memory-limit: 50Mi
        memory-request: 25Mi
      destination-stdout:
        cpu-limit: 0.5
        cpu-request: 0.01
        memory-limit: 50Mi
        memory-request: 25Mi
      heartbeat:
        cpu-limit: 0.2
        cpu-request: 0.05
        memory-limit: 50Mi
        memory-request: 25Mi
      source-stderr:
        cpu-limit: 0.5
        cpu-request: 0.01
        memory-limit: 50Mi
        memory-request: 25Mi
      # Default base sync values
      destination:
        cpu-limit: 1
        cpu-request: 0.5
        memory-limit: 2Gi
        memory-request: 1Gi
      destination-stdin:
        cpu-limit: 1
        cpu-request: 0.5
        memory-limit: 50Mi
        memory-request: 25Mi
      orchestrator:
        cpu-limit: 1
        cpu-request: 0.5
        memory-limit: 2Gi
        memory-request: 2Gi
      source:
        cpu-limit: 1
        cpu-request: 0.5
        memory-limit: 2Gi
        memory-request: 1Gi
      source-stdout:
        cpu-limit: 1
        cpu-request: 0.5
        memory-limit: 50Mi
        memory-request: 25Mi
      # Database syncs resource override
      source-database:
        cpu-limit: 2
        cpu-request: 1
        memory-limit: 2Gi
        memory-request: 1Gi
      source-stdout-database:
        cpu-limit: 1
        cpu-request: 0.5
        memory-limit: 50Mi
        memory-request: 25Mi
      orchestrator-database:
        cpu-limit: 2
        cpu-request: 1
        memory-limit: 2Gi
        memory-request: 2Gi
      destination-database:
        cpu-limit: 2
        cpu-request: 1
        memory-limit: 2Gi
        memory-request: 1Gi
      destination-stdin-database:
        cpu-limit: 2
        cpu-request: 0.5
        memory-limit: 50Mi
        memory-request: 25Mi

      # Currently in testing for APIs
      lowrss--destination-stderr:
        cpu-limit: 0.5
        cpu-request: 0.01
        memory-limit: 50Mi
        memory-request: 25Mi
      lowrss--destination-stdout:
        cpu-limit: 0.5
        cpu-request: 0.01
        memory-limit: 50Mi
        memory-request: 25Mi
      lowrss--heartbeat:
        cpu-limit: 0.2
        cpu-request: 0.05
        memory-limit: 50Mi
        memory-request: 25Mi
      lowrss--source-stderr:
        cpu-limit: 0.5
        cpu-request: 0.01
        memory-limit: 50Mi
        memory-request: 25Mi
      lowrss--source-api:
        cpu-limit: 1
        cpu-request: 0.2
        memory-limit: 2Gi
        memory-request: 1Gi
      lowrss--source-stdout-api:
        cpu-limit: 1
        cpu-request: 0.2
        memory-limit: 50Mi
        memory-request: 25Mi
      lowrss--orchestrator-api:
        cpu-limit: 1
        cpu-request: 0.3
        memory-limit: 2Gi
        memory-request: 2Gi
      lowrss--destination-api:
        cpu-limit: 1
        cpu-request: 0.2
        memory-limit: 2Gi
        memory-request: 1Gi
      lowrss--destination-stdin-api:
        cpu-limit: 1
        cpu-request: 0.1
        memory-limit: 50Mi
        memory-request: 25Mi

      # Previous version of lowrss
      lowrss2--source-api:
        cpu-limit: 1
        cpu-request: 0.2
        memory-limit: 2Gi
        memory-request: 1Gi
      lowrss2--source-stdout-api:
        cpu-limit: 1
        cpu-request: 0.2
        memory-limit: 50Mi
        memory-request: 25Mi
      lowrss2--orchestrator-api:
        cpu-limit: 1
        cpu-request: 0.3
        memory-limit: 2Gi
        memory-request: 2Gi
      lowrss2--destination-api:
        cpu-limit: 1
        cpu-request: 0.2
        memory-limit: 2Gi
        memory-request: 1Gi
      lowrss2--destination-stdin-api:
        cpu-limit: 1
        cpu-request: 0.2
        memory-limit: 50Mi
        memory-request: 25Mi
    job:
      error-reporting:
        sentry:
          dsn: ${JOB_ERROR_REPORTING_SENTRY_DSN}
        strategy: ${JOB_ERROR_REPORTING_STRATEGY:LOGGING}
      kube:
        images:
          busybox: ${JOB_KUBE_BUSYBOX_IMAGE:`busybox:1.28`}
          curl: ${JOB_KUBE_CURL_IMAGE:`curlimages/curl:7.83.1`}
          socat: ${JOB_KUBE_SOCAT_IMAGE:`alpine/socat:1.7.4.3-r0`}
        main:
          container:
            image-pull-policy: ${JOB_KUBE_MAIN_CONTAINER_IMAGE_PULL_POLICY:IfNotPresent}
            image-pull-secret: ${JOB_KUBE_MAIN_CONTAINER_IMAGE_PULL_SECRET:}
        sidecar:
          container:
            image-pull-policy: ${JOB_KUBE_SIDECAR_CONTAINER_IMAGE_PULL_POLICY:IfNotPresent}
        tolerations: ${JOB_KUBE_TOLERATIONS:}
    isolated:
      kube:
        use-custom-node-selector: ${USE_CUSTOM_NODE_SELECTOR:false}
        node-selectors: ${JOB_ISOLATED_KUBE_NODE_SELECTORS:}
  server:
    connection:
      disable:
        max-days: ${MAX_DAYS_OF_ONLY_FAILED_JOBS_BEFORE_CONNECTION_DISABLE:14}
        max-jobs: ${MAX_FAILED_JOBS_IN_A_ROW_BEFORE_CONNECTION_DISABLE:100}
  web-app:
    url: ${WEBAPP_URL:}
  workspace:
    root: ${WORKSPACE_ROOT}
  protocol:
    min-version: ${AIRBYTE_PROTOCOL_VERSION_MIN:0.0.0}
    max-version: ${AIRBYTE_PROTOCOL_VERSION_MAX:0.3.0}

  # specify the minimum necessary configurations for the server to authenticate with keycloak
  keycloak:
    host: ${KEYCLOAK_INTERNAL_HOST:}
    protocol: ${KEYCLOAK_PROTOCOL:http}
    base-path: ${KEYCLOAK_BASE_PATH:`/auth`}
    airbyte-realm: ${KEYCLOAK_AIRBYTE_REALM:airbyte}
    web-client-id: ${KEYCLOAK_WEB_CLIENT_ID:airbyte-webapp}

temporal:
  cloud:
    client:
      cert: ${TEMPORAL_CLOUD_CLIENT_CERT:}
      key: ${TEMPORAL_CLOUD_CLIENT_KEY:}
    enabled: ${TEMPORAL_CLOUD_ENABLED:false}
    host: ${TEMPORAL_CLOUD_HOST:}
    namespace: ${TEMPORAL_CLOUD_NAMESPACE:}
  host: ${TEMPORAL_HOST:`airbyte-temporal:7233`}
  retention: ${TEMPORAL_HISTORY_RETENTION_IN_DAYS:30}
  sdk:
    timeouts:
      rpc-timeout: ${TEMPORAL_SDK_RPC_TIMEOUT:60s}
      rpc-long-poll-timeout: ${TEMPORAL_SDK_RPC_LONG_POLL_TIMEOUT:70s}
      rpc-query-timeout: ${TEMPORAL_SDK_RPC_QUERY_TIMEOUT:10s}

datasources:
  config:
    connection-test-query: SELECT 1
    connection-timeout: 30000
    maximum-pool-size: ${CONFIG_DB_MAX_POOL_SIZE:10}
    minimum-idle: 0
    idle-timeout: 600000
    initialization-fail-timeout: -1 # Disable fail fast checking to avoid issues due to other pods not being started in time
    url: ${DATABASE_URL}
    driverClassName: org.postgresql.Driver
    username: ${DATABASE_USER}
    password: ${DATABASE_PASSWORD}
    leak-detection-threshold: 40000 # This should be slightly higher than the connection-timeout setting but not too high to avoid false positives and negatives.

endpoints:
  beans:
    enabled: true
    sensitive: false
  env:
    enabled: true
    sensitive: false
  health:
    enabled: false
    jdbc:
      enabled: false
    sensitive: false
  info:
    enabled: true
    sensitive: true
  loggers:
    enabled: true
    sensitive: false
  refresh:
    enabled: false
    sensitive: true
  routes:
    enabled: true
    sensitive: false
  threaddump:
    enabled: true
    sensitive: true

flyway:
  enabled: true
  datasources:
    config:
      enabled: false
      locations:
        - "classpath:io/airbyte/db/instance/configs/migrations"
    jobs:
      enabled: false
      locations:
        - "classpath:io/airbyte/db/instance/jobs/migrations"

jooq:
  datasources:
    config:
      jackson-converter-enabled: true
      sql-dialect: POSTGRES
    jobs:
      jackson-converter-enabled: true
      sql-dialect: POSTGRES

logger:
  levels:
  # Uncomment to help resolve issues with conditional beans
  #    io.micronaut.context.condition: DEBUG
  # Uncomment to help resolve issues with security beans
  #    io.micronaut.security: DEBUG
  # Uncomment to help resolve issues with micronaut data
  #    com.zaxxer.hikari.HikariConfig: DEBUG
  #    com.zaxxer.hikari: TRACE
