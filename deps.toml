[versions]
airbyte-protocol = "1.0.0"
commons_io = "2.7"
connectors-testcontainers = "1.15.3"
datadog-version = "1.10.0"
docker-java = "3.2.8"
fasterxml_version = "2.14.0"
flyway = "7.14.0"
glassfish_version = "2.31"
hikaricp = "5.0.1"
java-beans-validation = "2.0.1.Final"
java-common-annotations = "1.3.2"
jax-rs = "2.1.1"
jmh = "1.36"
jooq = "3.17.8"
junit-jupiter = "5.9.1"
log4j = "2.17.2"
lombok = "1.18.24"
micronaut = "3.8.6"
micronaut-data = "3.9.6"
micronaut-jaxrs = "3.4.0"
micronaut-jdbc = "4.7.2"
micronaut-micrometer = "4.8.1"
micronaut-security = "3.9.3"
mockito = "4.9.0"
okhttp3 = "4.10.0"
micronaut-test = "3.8.2"
platform-testcontainers = "1.17.6"
postgresql = "42.3.5"
reactor = "3.5.2"
segment = "2.1.1"
sentry = "6.14.0"
slf4j = "1.7.36"
swagger = "1.6.2"
temporal = "1.17.0"

[libraries]
airbyte-protocol = { module = "io.airbyte.airbyte-protocol:protocol-models", version.ref = "airbyte-protocol" }
apache-ant = { module = "org.apache.ant:ant", version = "1.10.10" }
apache-commons = { module = "org.apache.commons:commons-compress", version = "1.20" }
apache-commons-cli = { module = "commons-cli:commons-cli", version = "1.4" }
apache-commons-collections = { module = "org.apache.commons:commons-collections4", version = "4.4" }
apache-commons-lang = { module = "org.apache.commons:commons-lang3", version = "3.11" }
apache-commons-text = { module = "org.apache.commons:commons-text", version = "1.10.0" }
apache-cxf-core = { module = "org.apache.cxf:cxf-core", version = "3.4.2" }
appender-log4j2 = { module = "com.therealvan:appender-log4j2", version = "3.6.0" }
assertj-core = { module = "org.assertj:assertj-core", version = "3.21.0" }
aws-java-sdk-s3 = { module = "com.amazonaws:aws-java-sdk-s3", version = "1.12.6" }
byte-buddy = { module = "net.bytebuddy:byte-buddy", version = "1.12.14" }
commons-io = { module = "commons-io:commons-io", version.ref = "commons_io" }
connectors-testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "connectors-testcontainers" }
connectors-testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "connectors-testcontainers" }
datadog-statsd-client = { module = "com.datadoghq:java-dogstatsd-client", version = "4.0.0" }
datadog-trace-api = { module = "com.datadoghq:dd-trace-api", version.ref = "datadog-version" }
datadog-trace-ot = { module = "com.datadoghq:dd-trace-ot", version.ref = "datadog-version" }
docker-java = { module = "com.github.docker-java:docker-java", version.ref = "docker-java" }
docker-java-transport-httpclient5 = { module = "com.github.docker-java:docker-java-transport-httpclient5", version.ref = "docker.java" }
fasterxml = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "fasterxml_version" }
findsecbugs-plugin = { module = "com.h3xstream.findsecbugs:findsecbugs-plugin", version = "1.12.0" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
glassfish = { module = "org.glassfish.jersey:jackson-bom", version.ref = "glassfish_version" }
google-cloud-storage = { module = "com.google.cloud:google-cloud-storage", version = "2.17.2" }
guava = { module = "com.google.guava:guava", version = "31.1-jre" }
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricp" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "fasterxml_version" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "fasterxml_version" }
jackson-dataformat = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "fasterxml_version" }
jackson-datatype = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "fasterxml_version" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "fasterxml_version" }
java-dogstatsd-client = { module = "com.datadoghq:java-dogstatsd-client", version = "4.1.0" }
javax-annotation-api = { module = "javax.annotation:javax.annotation-api", version.ref = "java-common-annotations" }
javax-databind = { module = "javax.xml.bind:jaxb-api", version = "2.4.0-b180830.0359" }
javax-validation-api = { module = "javax.validation:validation-api", version.ref = "java-beans-validation" }
javax-ws-rs-api = { module = "javax.ws.rs:javax.ws.rs-api", version.ref = "jax-rs" }
jcl-over-slf4j = { module = "org.slf4j:jcl-over-slf4j", version.ref = "slf4j" }
jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-annotations = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }
jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
jooq-codegen = { module = "org.jooq:jooq-codegen", version.ref = "jooq" }
jooq-meta = { module = "org.jooq:jooq-meta", version.ref = "jooq" }
json-path = { module = "com.jayway.jsonpath:json-path", version = "2.7.0" }
jul-to-slf4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter" }
junit-jupiter-system-stubs = { module = "uk.org.webcompere:system-stubs-jupiter", version = "2.0.1" }
junit-pioneer = { module = "org.junit-pioneer:junit-pioneer", version = "1.7.1" }
kubernetes-client = { module = "io.fabric8:kubernetes-client", version = "5.12.2" }
launchdarkly = { module = "com.launchdarkly:launchdarkly-java-server-sdk", version = "6.0.1" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-impl = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }
log4j-over-slf4j = { module = "org.slf4j:log4j-over-slf4j", version.ref = "slf4j" }
log4j-web = { module = "org.apache.logging.log4j:log4j-web", version.ref = "log4j" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
micrometer-statsd = { module = "io.micrometer:micrometer-registry-statsd", version = "1.9.3" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
mockk = { module = "io.mockk:mockk", version = "1.13.3" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp3" }
openapi-jackson-databind-nullable = { module = "org.openapitools:jackson-databind-nullable", version = "0.2.5" }
otel-bom = { module = "io.opentelemetry:opentelemetry-bom", version = "1.14.0" }
otel-sdk = { module = "io.opentelemetry:opentelemetry-sdk-metrics", version = "1.14.0" }
otel-sdk-testing = { module = "io.opentelemetry:opentelemetry-sdk-metrics-testing", version = "1.13.0-alpha" }
otel-semconv = { module = "io.opentelemetry:opentelemetry-semconv", version = "1.14.0-alpha" }
platform-testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "platform-testcontainers" }
platform-testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "platform-testcontainers" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
quartz-scheduler = { module = "org.quartz-scheduler:quartz", version = "2.3.2" }
reactor-core = { module = "io.projectreactor:reactor-core", version.ref = "reactor" }
reactor-test = { module = "io.projectreactor:reactor-test", version.ref = "reactor" }
s3 = { module = "software.amazon.awssdk:s3", version = "2.16.84" }
segment-java-analytics = { module = "com.segment.analytics.java:analytics", version.ref = "segment" }
sentry-java = { module = "io.sentry:sentry", version.ref = "sentry" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slugify = { module = "com.github.slugify:slugify", version = "2.4" }
spotbugs-annotations = { module = "com.github.spotbugs:spotbugs-annotations", version = "4.7.3" }
spring-core = { module = "org.springframework:spring-core", version = "5.3.22" }
swagger-annotations = { module = "io.swagger:swagger-annotations", version.ref = "swagger" }
temporal-sdk = { module = "io.temporal:temporal-sdk", version.ref = "temporal" }
temporal-serviceclient = { module = "io.temporal:temporal-serviceclient", version.ref = "temporal" }
temporal-testing = { module = "io.temporal:temporal-testing", version.ref = "temporal" }

# Micronaut-related dependencies
h2-database = { module = "com.h2database:h2", version = "2.1.214" }
hibernate-types = { module = "com.vladmihalcea:hibernate-types-52", version = "2.16.3" }
jakarta-inject = { module = "jakarta.annotation:jakarta.annotation-api", version = "2.1.1" }
javax-transaction = { module = "javax.transaction:javax.transaction-api", version = "1.3" }
micronaut-bom = { module = "io.micronaut:micronaut-bom", version.ref = "micronaut" }
micronaut-cache-caffeine = { module = "io.micronaut.cache:micronaut-cache-caffeine", version = "3.5.0" }
micronaut-data-processor = { module = "io.micronaut.data:micronaut-data-processor", version.ref = "micronaut-data" }
micronaut-data-tx = { module = "io.micronaut.data:micronaut-data-tx", version.ref = "micronaut-data" }
micronaut-flyway = { module = "io.micronaut.flyway:micronaut-flyway", version = "5.4.1" }
micronaut-inject = { module = "io.micronaut:micronaut-inject", version.ref = "micronaut" }
micronaut-http = { module = "io.micronaut:micronaut-http", version.ref = "micronaut" }
micronaut-http-client = { module = "io.micronaut:micronaut-http-client", version.ref = "micronaut" }
micronaut-http-server-netty = { module = "io.micronaut:micronaut-http-server-netty", version.ref = "micronaut" }
micronaut-inject-java = { module = "io.micronaut:micronaut-inject-java", version.ref = "micronaut" }
micronaut-jaxrs-processor = { module = "io.micronaut.jaxrs:micronaut-jaxrs-processor", version.ref = "micronaut-jaxrs" }
micronaut-jaxrs-server = { module = "io.micronaut.jaxrs:micronaut-jaxrs-server", version.ref = "micronaut-jaxrs" }
micronaut-jdbc = { module = "io.micronaut.sql:micronaut-jdbc", version.ref = "micronaut-jdbc" }
micronaut-jdbc-hikari = { module = "io.micronaut.sql:micronaut-jdbc-hikari", version.ref = "micronaut-jdbc" }
micronaut-jooq = { module = "io.micronaut.sql:micronaut-jooq", version.ref = "micronaut-jdbc" }
micronaut-management = { module = "io.micronaut:micronaut-management", version.ref = "micronaut" }
micronaut-micrometer-core = { module = "io.micronaut.micrometer:micronaut-micrometer-core", version.ref = "micronaut-micrometer" }
micronaut-micrometer-registry-datadog = { module = "io.micronaut.micrometer:micronaut-micrometer-registry-datadog", version.ref = "micronaut-micrometer" }
micronaut-runtime = { module = "io.micronaut:micronaut-runtime", version.ref = "micronaut" }
micronaut-security = { module = "io.micronaut.security:micronaut-security", version.ref = "micronaut-security" }
micronaut-test-core = { module = "io.micronaut.test:micronaut-test-core", version.ref = "micronaut-test" }
micronaut-test-junit5 = { module = "io.micronaut.test:micronaut-test-junit5", version.ref = "micronaut-test" }
micronaut-validation = { module = "io.micronaut:micronaut-validation", version.ref = "micronaut" }

[bundles]
apache = ["apache-commons", "apache-commons-lang"]
datadog = ["datadog-trace-api", "datadog-trace-ot"]
jackson = ["jackson-databind", "jackson-annotations", "jackson-dataformat", "jackson-datatype"]
junit = ["junit-jupiter-api", "junit-jupiter-params", "mockito-junit-jupiter"]
log4j = ["log4j-api", "log4j-core", "log4j-impl", "log4j-web"]
micronaut = ["jakarta-inject", "javax-transaction", "micronaut-http-server-netty", "micronaut-http-client", "micronaut-inject", "micronaut-validation", "micronaut-runtime", "micronaut-management", "micronaut-security", "micronaut-jaxrs-server", "micronaut-flyway", "micronaut-jdbc-hikari", "micronaut-jooq"]
micronaut-annotation = ["jakarta-inject", "micronaut-inject-java"]
micronaut-annotation-processor = ["micronaut-inject-java", "micronaut-management", "micronaut-validation", "micronaut-data-processor", "micronaut-jaxrs-processor"]
micronaut-metrics = ["micronaut-management", "micronaut-micrometer-core", "micronaut-micrometer-registry-datadog"]
micronaut-server = ["micronaut-jaxrs-processor", "micronaut-jaxrs-server"]
micronaut-test = ["micronaut-test-core", "micronaut-test-junit5", "h2-database"]
micronaut-test-annotation-processor = ["micronaut-inject-java"]
slf4j = ["jul-to-slf4j", "jcl-over-slf4j", "log4j-over-slf4j"]
temporal = ["temporal-sdk", "temporal-serviceclient"]

[plugins]
js2p = { id = "com.github.eirnym.js2p", version = "1.0" }
micronaut-minimal-application = { id = "io.micronaut.minimal.application", version = "3.7.3" }
node-gradle = { id = "com.github.node-gradle.node", version = "3.4.0" }
nu-studer-jooq = { id = "nu.studer.jooq", version = "8.1" }
openapi-generator = { id = "org.openapi.generator", version = "6.2.1" }
