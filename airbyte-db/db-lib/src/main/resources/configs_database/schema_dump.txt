// The content of the file is just to have a basic idea of the current state of the database and is not fully accurate.
// It is also not used by any piece of code to generate anything.
// It doesn't contain the enums created in the database and the default values might also be buggy.

create table "public"."active_declarative_manifest" (
  "actor_definition_id" uuid not null,
  "version" bigint not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "active_declarative_manifest_pkey" primary key ("actor_definition_id")
);
create table "public"."actor" (
  "id" uuid not null,
  "workspace_id" uuid not null,
  "actor_definition_id" uuid not null,
  "name" varchar(256) not null,
  "configuration" jsonb not null,
  "actor_type" "public"."actor_type" not null,
  "tombstone" boolean not null default false,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "actor_pkey" primary key ("id")
);
create table "public"."actor_catalog" (
  "id" uuid not null,
  "catalog" jsonb not null,
  "catalog_hash" varchar(32) not null,
  "created_at" timestamp(6) with time zone not null,
  "modified_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "actor_catalog_pkey" primary key ("id")
);
create table "public"."actor_catalog_fetch_event" (
  "id" uuid not null,
  "actor_catalog_id" uuid not null,
  "actor_id" uuid not null,
  "config_hash" varchar(32) not null,
  "actor_version" varchar(256) not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "modified_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "actor_catalog_fetch_event_pkey" primary key ("id")
);
create table "public"."actor_definition" (
  "id" uuid not null,
  "name" varchar(256) not null,
  "icon" varchar(256),
  "actor_type" "public"."actor_type" not null,
  "source_type" "public"."source_type",
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  "tombstone" boolean not null default false,
  "resource_requirements" jsonb,
  "public" boolean not null default false,
  "custom" boolean not null default false,
  "max_seconds_between_messages" int,
  "default_version_id" uuid,
  "icon_url" varchar(256),
  "metrics" jsonb,
  constraint "actor_definition_pkey" primary key ("id")
);
create table "public"."actor_definition_breaking_change" (
  "actor_definition_id" uuid not null,
  "version" varchar(256) not null,
  "migration_documentation_url" varchar(256) not null,
  "upgrade_deadline" date not null,
  "message" text not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  "scoped_impact" jsonb,
  constraint "actor_definition_breaking_change_pkey" primary key ("actor_definition_id", "version")
);
create table "public"."actor_definition_config_injection" (
  "json_to_inject" jsonb not null,
  "injection_path" varchar(2147483647) not null,
  "actor_definition_id" uuid not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "actor_definition_config_injection_pkey" primary key ("actor_definition_id", "injection_path")
);
create table "public"."actor_definition_version" (
  "id" uuid not null,
  "actor_definition_id" uuid not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  "documentation_url" varchar(256),
  "docker_repository" varchar(256) not null,
  "docker_image_tag" varchar(256) not null,
  "spec" jsonb not null,
  "protocol_version" varchar(256),
  "release_date" date,
  "normalization_repository" varchar(256),
  "normalization_tag" varchar(256),
  "supports_dbt" boolean,
  "normalization_integration_type" varchar(256),
  "allowed_hosts" jsonb,
  "suggested_streams" jsonb,
  "release_stage" "public"."release_stage",
  "support_state" "public"."support_state" not null default cast('supported' as support_state),
  "support_level" "public"."support_level" not null,
  "supports_refreshes" boolean not null default false,
  "cdk_version" varchar(256),
  "last_published" timestamp(6) with time zone,
  "internal_support_level" bigint not null,
  "language" varchar(256),
  "supports_file_transfer" boolean not null default false,
  constraint "actor_definition_version_pkey" primary key ("id"),
  constraint "actor_definition_version_actor_definition_id_version_key" unique ("actor_definition_id", "docker_image_tag")
);
create table "public"."actor_definition_workspace_grant" (
  "actor_definition_id" uuid not null,
  "workspace_id" uuid,
  "scope_id" uuid,
  "scope_type" "public"."scope_type" not null default cast('workspace' as scope_type),
  constraint "actor_definition_workspace_gr_actor_definition_id_scope_id__key" unique ("actor_definition_id", "scope_id", "scope_type")
);
create table "public"."actor_oauth_parameter" (
  "id" uuid not null,
  "workspace_id" uuid,
  "actor_definition_id" uuid not null,
  "configuration" jsonb not null,
  "actor_type" "public"."actor_type" not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "actor_oauth_parameter_pkey" primary key ("id")
);
create table "public"."airbyte_configs_migrations" (
  "installed_rank" int not null,
  "version" varchar(50),
  "description" varchar(200) not null,
  "type" varchar(20) not null,
  "script" varchar(1000) not null,
  "checksum" int,
  "installed_by" varchar(100) not null,
  "installed_on" timestamp(6) not null default current_timestamp,
  "execution_time" int not null,
  "success" boolean not null,
  constraint "airbyte_configs_migrations_pk" primary key ("installed_rank")
);
create table "public"."auth_refresh_token" (
  "value" varchar(2147483647) not null,
  "session_id" varchar(2147483647) not null,
  "revoked" boolean not null default true,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "auth_refresh_token_pkey" primary key ("value"),
  constraint "auth_refresh_token_session_id_value_key" unique ("session_id", "value")
);
create table "public"."auth_user" (
  "id" uuid not null,
  "user_id" uuid not null,
  "auth_user_id" varchar(256) not null,
  "auth_provider" "public"."auth_provider" not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "auth_user_pkey" primary key ("id"),
  constraint "auth_user_auth_user_id_auth_provider_key" unique ("auth_user_id", "auth_provider")
);
create table "public"."connection" (
  "id" uuid not null,
  "namespace_definition" "public"."namespace_definition_type" not null,
  "namespace_format" varchar(256),
  "prefix" varchar(256),
  "source_id" uuid not null,
  "destination_id" uuid not null,
  "name" varchar(256) not null,
  "catalog" jsonb not null,
  "status" "public"."status_type",
  "schedule" jsonb,
  "manual" boolean,
  "resource_requirements" jsonb,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  "source_catalog_id" uuid,
  "schedule_type" "public"."schedule_type",
  "schedule_data" jsonb,
  "geography" "public"."geography_type" not null default cast('AUTO' as geography_type),
  "non_breaking_change_preference" "non_breaking_change_preference_type" not null default cast('ignore' as non_breaking_change_preference_type),
  "breaking_change" boolean not null default false,
  "field_selection_data" jsonb,
  constraint "connection_pkey" primary key ("id")
);
create table "public"."connection_operation" (
  "id" uuid not null,
  "connection_id" uuid not null,
  "operation_id" uuid not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "connection_operation_pkey" primary key ("id", "connection_id", "operation_id")
);
create table "public"."connection_timeline_event" (
  "id" uuid not null,
  "connection_id" uuid not null,
  "user_id" uuid,
  "event_type" varchar(2147483647) not null,
  "summary" jsonb,
  "created_at" timestamp(6) with time zone not null,
  constraint "connection_timeline_event_pkey" primary key ("id")
);
create table "public"."connector_builder_project" (
  "id" uuid not null,
  "workspace_id" uuid not null,
  "name" varchar(256) not null,
  "manifest_draft" jsonb,
  "actor_definition_id" uuid,
  "tombstone" boolean not null default false,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  "testing_values" jsonb,
  "base_actor_definition_version_id" uuid,
  "contribution_pull_request_url" varchar(256),
  "contribution_actor_definition_id" uuid,
  constraint "connector_builder_project_pkey" primary key ("id")
);
create table "public"."connector_rollout" (
  "id" uuid not null,
  "actor_definition_id" uuid not null,
  "release_candidate_version_id" uuid not null,
  "initial_version_id" uuid,
  "state" varchar(32) not null,
  "initial_rollout_pct" int,
  "current_target_rollout_pct" int,
  "final_target_rollout_pct" int,
  "has_breaking_changes" boolean not null,
  "max_step_wait_time_mins" int,
  "updated_by" uuid,
  "created_at" timestamp(6) not null default current_timestamp,
  "updated_at" timestamp(6) not null default current_timestamp,
  "completed_at" timestamp(6),
  "expires_at" timestamp(6),
  "error_msg" varchar(1024),
  "failed_reason" varchar(1024),
  "rollout_strategy" varchar(256),
  "workflow_run_id" varchar(64),
  constraint "pk_connector_rollout" primary key ("id")
);
create table "public"."declarative_manifest" (
  "actor_definition_id" uuid not null,
  "description" varchar(256) not null,
  "manifest" jsonb not null,
  "spec" jsonb not null,
  "version" bigint not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "declarative_manifest_pkey" primary key ("actor_definition_id", "version")
);
create table "public"."declarative_manifest_image_version" (
  "major_version" int not null,
  "image_version" varchar(256) not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  "image_sha" varchar(256) not null,
  constraint "declarative_manifest_image_version_pkey" primary key ("major_version")
);
create table "public"."notification_configuration" (
  "id" uuid not null,
  "enabled" boolean not null,
  "notification_type" "public"."notification_type" not null,
  "connection_id" uuid not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "notification_configuration_pkey" primary key ("id")
);
create table "public"."operation" (
  "id" uuid not null,
  "workspace_id" uuid not null,
  "name" varchar(256) not null,
  "operator_type" "public"."operator_type" not null,
  "operator_normalization" jsonb,
  "operator_dbt" jsonb,
  "tombstone" boolean not null default false,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  "operator_webhook" jsonb,
  constraint "operation_pkey" primary key ("id")
);
create table "public"."organization" (
  "id" uuid not null,
  "name" varchar(256) not null,
  "user_id" uuid,
  "email" varchar(256) not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  "pba" boolean not null default false,
  "org_level_billing" boolean not null default false,
  "tombstone" boolean not null default false,
  constraint "organization_pkey" primary key ("id")
);
create table "public"."organization_email_domain" (
  "id" uuid not null,
  "organization_id" uuid not null,
  "email_domain" varchar(256) not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "organization_email_domain_pkey" primary key ("id"),
  constraint "organization_id_email_domain_key" unique ("organization_id", "email_domain")
);
create table "public"."organization_payment_config" (
  "organization_id" uuid not null,
  "payment_provider_id" varchar(256),
  "payment_status" "public"."payment_status" not null default cast('uninitialized' as payment_status),
  "grace_period_end_at" timestamp(6) with time zone,
  "usage_category_override" "public"."usage_category_override",
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "organization_payment_config_pkey" primary key ("organization_id"),
  constraint "organization_payment_config_payment_provider_id_key" unique ("payment_provider_id")
);
create table "public"."permission" (
  "id" uuid not null,
  "user_id" uuid not null,
  "workspace_id" uuid,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  "organization_id" uuid,
  "permission_type" "public"."permission_type" not null,
  constraint "permission_pkey" primary key ("id"),
  constraint "permission_unique_user_organization" unique ("user_id", "organization_id"),
  constraint "permission_unique_user_workspace" unique ("user_id", "workspace_id")
);
create table "public"."schema_management" (
  "id" uuid not null,
  "connection_id" uuid not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  "auto_propagation_status" "public"."auto_propagation_status" not null default cast('ignore' as auto_propagation_status),
  "backfill_preference" "public"."backfill_preference" not null default cast('disabled' as backfill_preference),
  constraint "schema_management_pkey" primary key ("id")
);
create table "public"."scoped_configuration" (
  "id" uuid not null,
  "key" varchar(256) not null,
  "resource_type" "public"."config_resource_type" not null,
  "resource_id" uuid not null,
  "scope_type" "public"."config_scope_type" not null,
  "scope_id" uuid not null,
  "value" varchar(256) not null,
  "description" text,
  "reference_url" varchar(256),
  "origin_type" "public"."config_origin_type" not null,
  "origin" varchar(256) not null,
  "expires_at" date,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "scoped_configuration_pkey" primary key ("id"),
  constraint "scoped_configuration_key_resource_type_resource_id_scope_ty_key" unique (
    "key",
    "resource_type",
    "resource_id",
    "scope_type",
    "scope_id"
  )
);
create table "public"."secret_persistence_config" (
  "id" uuid not null,
  "scope_id" uuid,
  "scope_type" "public"."secret_persistence_scope_type" not null default cast('organization' as secret_persistence_scope_type),
  "secret_persistence_config_coordinate" varchar(256),
  "secret_persistence_type" "public"."secret_persistence_type" not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "secret_persistence_config_pkey" primary key ("id"),
  constraint "secret_persistence_config_scope_id_scope_type_key" unique ("scope_id", "scope_type")
);
create table "public"."sso_config" (
  "id" uuid not null,
  "organization_id" uuid not null,
  "keycloak_realm" varchar(256) not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "sso_config_pkey" primary key ("id"),
  constraint "sso_config_keycloak_realm_key" unique ("keycloak_realm"),
  constraint "sso_config_organization_id_key" unique ("organization_id")
);
create table "public"."state" (
  "id" uuid not null,
  "connection_id" uuid not null,
  "state" jsonb,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  "stream_name" text,
  "namespace" text,
  "type" "public"."state_type" not null default cast('LEGACY' as state_type),
  constraint "state_pkey" primary key ("id", "connection_id"),
  constraint "state__connection_id__stream_name__namespace__uq" unique ("connection_id", "stream_name", "namespace")
);
create table "public"."stream_generation" (
  "id" uuid not null,
  "connection_id" uuid not null,
  "stream_name" varchar(2147483647) not null,
  "stream_namespace" varchar(2147483647),
  "generation_id" bigint not null,
  "start_job_id" bigint not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "stream_generation_pkey" primary key ("id")
);
create table "public"."stream_refreshes" (
  "id" uuid not null,
  "connection_id" uuid not null,
  "stream_name" varchar(2147483647) not null,
  "stream_namespace" varchar(2147483647),
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "refresh_type" "public"."refresh_type" not null,
  constraint "stream_refreshes_pkey" primary key ("id")
);
create table "public"."stream_reset" (
  "id" uuid not null,
  "connection_id" uuid not null,
  "stream_namespace" text,
  "stream_name" text not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "stream_reset_connection_id_stream_name_stream_namespace_key" unique ("connection_id", "stream_name", "stream_namespace")
);
create table "public"."user" (
  "id" uuid not null,
  "name" varchar(256) not null,
  "default_workspace_id" uuid,
  "status" "public"."status",
  "company_name" varchar(256),
  "email" varchar(256) not null,
  "news" boolean,
  "ui_metadata" jsonb,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "user_pkey" primary key ("id")
);
create table "public"."user_invitation" (
  "id" uuid not null,
  "invite_code" varchar(256) not null,
  "inviter_user_id" uuid not null,
  "invited_email" varchar(256) not null,
  "permission_type" "public"."permission_type" not null,
  "status" "public"."invitation_status" not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  "scope_id" uuid not null,
  "scope_type" scope_type not null,
  "accepted_by_user_id" uuid,
  "expires_at" timestamp(6) not null,
  constraint "user_invitation_pkey" primary key ("id"),
  constraint "user_invitation_invite_code_key" unique ("invite_code")
);
create table "public"."workload" (
  "id" varchar(256) not null,
  "dataplane_id" varchar(256),
  "status" "public"."workload_status" not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  "last_heartbeat_at" timestamp(6) with time zone,
  "input_payload" text not null,
  "log_path" text not null,
  "geography" varchar(2147483647) not null default cast('AUTO' as varchar),
  "mutex_key" varchar(2147483647),
  "type" "public"."workload_type" not null,
  "termination_source" varchar(2147483647),
  "termination_reason" text,
  "auto_id" uuid,
  "deadline" timestamp(6) with time zone,
  "signal_input" text,
  constraint "workload_pkey" primary key ("id")
);
create table "public"."workload_label" (
  "id" uuid not null,
  "workload_id" varchar(256) not null,
  "key" varchar(256) not null,
  "value" varchar(256) not null,
  constraint "workload_label_pkey" primary key ("id"),
  constraint "workload_label_workload_id_key_key" unique ("workload_id", "key")
);
create table "public"."workspace" (
  "id" uuid not null,
  "customer_id" uuid,
  "name" varchar(256) not null,
  "slug" varchar(256) not null,
  "email" varchar(256),
  "initial_setup_complete" boolean not null,
  "anonymous_data_collection" boolean,
  "send_newsletter" boolean,
  "send_security_updates" boolean,
  "display_setup_wizard" boolean,
  "tombstone" boolean not null default false,
  "notifications" jsonb,
  "first_sync_complete" boolean,
  "feedback_complete" boolean,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  "geography" geography_type not null default cast('AUTO' as geography_type),
  "webhook_operation_configs" jsonb,
  "notification_settings" jsonb,
  "organization_id" uuid not null,
  constraint "workspace_pkey" primary key ("id")
);
create table "public"."workspace_service_account" (
  "workspace_id" uuid not null,
  "service_account_id" varchar(31) not null,
  "service_account_email" varchar(256) not null,
  "json_credential" jsonb not null,
  "hmac_key" jsonb not null,
  "created_at" timestamp(6) with time zone not null default current_timestamp,
  "updated_at" timestamp(6) with time zone not null default current_timestamp,
  constraint "workspace_service_account_pkey" primary key ("workspace_id", "service_account_id")
);
create index "actor_actor_definition_id_idx" on "public"."actor"("actor_definition_id" asc);
create index "actor_workspace_id_idx" on "public"."actor"("workspace_id" asc);
create index "actor_catalog_catalog_hash_id_idx" on "public"."actor_catalog"("catalog_hash" asc);
create index "actor_catalog_fetch_event_actor_catalog_id_idx" on "public"."actor_catalog_fetch_event"("actor_catalog_id" asc);
create index "actor_catalog_fetch_event_actor_id_idx" on "public"."actor_catalog_fetch_event"("actor_id" asc);
create index "actor_oauth_parameter_workspace_definition_idx" on "public"."actor_oauth_parameter"("workspace_id" asc, "actor_definition_id" asc);
create index "airbyte_configs_migrations_s_idx" on "public"."airbyte_configs_migrations"("success" asc);
create index "connection_destination_id_idx" on "public"."connection"("destination_id" asc);
create index "connection_source_id_idx" on "public"."connection"("source_id" asc);
create index "connection_status_idx" on "public"."connection"("status" asc);
create index "connection_operation_connection_id_idx" on "public"."connection_operation"("connection_id" asc);
create index "idx_connection_timeline_connection_id" on "public"."connection_timeline_event"("connection_id" asc, "created_at" desc, "event_type" asc);
create index "connector_builder_project_workspace_idx" on "public"."connector_builder_project"("workspace_id" asc);
create unique index "actor_definition_id_state_unique_idx" on "public"."connector_rollout"("actor_definition_id" asc)
where (((state)::text = ANY ((ARRAY['errored'::character varying, 'finalizing'::character varying, 'in_progress'::character varying, 'initialized'::character varying, 'paused'::character varying, 'workflow_started'::character varying])::text[])));
create index "organization_email_domain_email_domain_idx" on "public"."organization_email_domain"("email_domain" asc);
create index "organization_email_domain_organization_id_idx" on "public"."organization_email_domain"("organization_id" asc);
create index "organization_payment_config_grace_period_end_at_idx" on "public"."organization_payment_config"("grace_period_end_at" asc);
create index "organization_payment_config_payment_provider_id_idx" on "public"."organization_payment_config"("payment_provider_id" asc);
create index "organization_payment_config_payment_status_idx" on "public"."organization_payment_config"("payment_status" asc);
create index "permission_organization_id_idx" on "public"."permission"("organization_id" asc);
create index "permission_user_id_idx" on "public"."permission"("user_id" asc);
create index "permission_workspace_id_idx" on "public"."permission"("workspace_id" asc);
create index "connection_idx" on "public"."schema_management"("connection_id" asc);
create index "sso_config_keycloak_realm_idx" on "public"."sso_config"("keycloak_realm" asc);
create index "sso_config_organization_id_idx" on "public"."sso_config"("organization_id" asc);
create index "stream_generation_connection_id_stream_name_generation_id_idx" on "public"."stream_generation"("connection_id" asc, "stream_name" asc, "generation_id" desc);
create index "stream_generation_connection_id_stream_name_stream_namespac_idx" on "public"."stream_generation"("connection_id" asc, "stream_name" asc, "stream_namespace" asc, "generation_id" desc);
create index "stream_refreshes_connection_id_idx" on "public"."stream_refreshes"("connection_id" asc);
create index "stream_refreshes_connection_id_stream_name_idx" on "public"."stream_refreshes"("connection_id" asc, "stream_name" asc);
create index "stream_refreshes_connection_id_stream_name_stream_namespace_idx" on "public"."stream_refreshes"("connection_id" asc, "stream_name" asc, "stream_namespace" asc);
create index "connection_id_stream_name_namespace_idx" on "public"."stream_reset"("connection_id" asc, "stream_name" asc, "stream_namespace" asc);
create index "user_email_idx" on "public"."user"("email" asc);
create unique index "user_email_unique_key" on "public"."user"(lower((email)::text) asc);
create index "user_invitation_accepted_by_user_id_index" on "public"."user_invitation"("accepted_by_user_id" asc);
create index "user_invitation_expires_at_index" on "public"."user_invitation"("expires_at" asc);
create index "user_invitation_invite_code_idx" on "public"."user_invitation"("invite_code" asc);
create index "user_invitation_invited_email_idx" on "public"."user_invitation"("invited_email" asc);
create index "user_invitation_scope_id_index" on "public"."user_invitation"("scope_id" asc);
create index "user_invitation_scope_type_and_scope_id_index" on "public"."user_invitation"("scope_type" asc, "scope_id" asc);
create index "active_workload_by_mutex_idx" on "public"."workload"("mutex_key" asc)
where ((status = ANY (ARRAY['pending'::workload_status, 'claimed'::workload_status, 'launched'::workload_status, 'running'::workload_status])));
create index "workload_deadline_idx" on "public"."workload"("deadline" asc)
where ((deadline IS NOT NULL));
create index "workload_mutex_idx" on "public"."workload"("mutex_key" asc);
create index "workload_status_idx" on "public"."workload"("status" asc);
create index "workload_label_workload_id_idx" on "public"."workload_label"("workload_id" asc);
alter table "public"."active_declarative_manifest" add constraint "active_declarative_manifest_actor_definition_id_version_fkey" foreign key ("actor_definition_id", "version") references "public"."declarative_manifest" ("actor_definition_id", "version");
alter table "public"."actor" add constraint "actor_actor_definition_id_fkey" foreign key ("actor_definition_id") references "public"."actor_definition" ("id");
alter table "public"."actor" add constraint "actor_workspace_id_fkey" foreign key ("workspace_id") references "public"."workspace" ("id");
alter table "public"."actor_catalog_fetch_event" add constraint "actor_catalog_fetch_event_actor_catalog_id_fkey" foreign key ("actor_catalog_id") references "public"."actor_catalog" ("id");
alter table "public"."actor_catalog_fetch_event" add constraint "actor_catalog_fetch_event_actor_id_fkey" foreign key ("actor_id") references "public"."actor" ("id");
alter table "public"."actor_definition" add constraint "actor_definition_default_version_id_fkey" foreign key ("default_version_id") references "public"."actor_definition_version" ("id");
alter table "public"."actor_definition_breaking_change" add constraint "actor_definition_breaking_change_actor_definition_id_fkey" foreign key ("actor_definition_id") references "public"."actor_definition" ("id");
alter table "public"."actor_definition_config_injection" add constraint "actor_definition_config_injection_actor_definition_id_fkey" foreign key ("actor_definition_id") references "public"."actor_definition" ("id");
alter table "public"."actor_definition_version" add constraint "actor_definition_version_actor_definition_id_fkey" foreign key ("actor_definition_id") references "public"."actor_definition" ("id");
alter table "public"."actor_definition_workspace_grant" add constraint "actor_definition_workspace_grant_actor_definition_id_fkey" foreign key ("actor_definition_id") references "public"."actor_definition" ("id");
alter table "public"."auth_user" add constraint "auth_user_user_id_fkey" foreign key ("user_id") references "public"."user" ("id");
alter table "public"."connection" add constraint "connection_actor_catalog_id_fk" foreign key ("source_catalog_id") references "public"."actor_catalog" ("id");
alter table "public"."connection" add constraint "connection_destination_id_fkey" foreign key ("destination_id") references "public"."actor" ("id");
alter table "public"."connection" add constraint "connection_source_id_fkey" foreign key ("source_id") references "public"."actor" ("id");
alter table "public"."connection_operation" add constraint "connection_operation_connection_id_fkey" foreign key ("connection_id") references "public"."connection" ("id");
alter table "public"."connection_operation" add constraint "connection_operation_operation_id_fkey" foreign key ("operation_id") references "public"."operation" ("id");
alter table "public"."connection_timeline_event" add constraint "connection_timeline_event_connection_id_fkey" foreign key ("connection_id") references "public"."connection" ("id");
alter table "public"."connection_timeline_event" add constraint "connection_timeline_event_user_id_fkey" foreign key ("user_id") references "public"."user" ("id");
alter table "public"."connector_builder_project" add constraint "connector_builder_project_base_adv_id_fkey" foreign key ("base_actor_definition_version_id") references "public"."actor_definition_version" ("id");
alter table "public"."connector_rollout" add constraint "fk_actor_definition_id" foreign key ("actor_definition_id") references "public"."actor_definition" ("id");
alter table "public"."connector_rollout" add constraint "fk_initial_version_id" foreign key ("initial_version_id") references "public"."actor_definition_version" ("id");
alter table "public"."connector_rollout" add constraint "fk_release_candidate_version_id" foreign key ("release_candidate_version_id") references "public"."actor_definition_version" ("id");
alter table "public"."connector_rollout" add constraint "fk_updated_by" foreign key ("updated_by") references "public"."user" ("id");
alter table "public"."notification_configuration" add constraint "notification_configuration_connection_id_fkey" foreign key ("connection_id") references "public"."connection" ("id");
alter table "public"."operation" add constraint "operation_workspace_id_fkey" foreign key ("workspace_id") references "public"."workspace" ("id");
alter table "public"."organization_email_domain" add constraint "organization_email_domain_organization_id_fkey" foreign key ("organization_id") references "public"."organization" ("id");
alter table "public"."organization_payment_config" add constraint "organization_payment_config_organization_id_fkey" foreign key ("organization_id") references "public"."organization" ("id");
alter table "public"."permission" add constraint "permission_organization_id_fkey" foreign key ("organization_id") references "public"."organization" ("id");
alter table "public"."permission" add constraint "permission_user_id_fkey" foreign key ("user_id") references "public"."user" ("id");
alter table "public"."permission" add constraint "permission_workspace_id_fkey" foreign key ("workspace_id") references "public"."workspace" ("id");
alter table "public"."schema_management" add constraint "schema_management_connection_id_fkey" foreign key ("connection_id") references "public"."connection" ("id");
alter table "public"."sso_config" add constraint "sso_config_organization_id_fkey" foreign key ("organization_id") references "public"."organization" ("id");
alter table "public"."state" add constraint "state_connection_id_fkey" foreign key ("connection_id") references "public"."connection" ("id");
alter table "public"."stream_generation" add constraint "stream_generation_connection_id_fkey" foreign key ("connection_id") references "public"."connection" ("id");
alter table "public"."stream_refreshes" add constraint "stream_refreshes_connection_id_fkey" foreign key ("connection_id") references "public"."connection" ("id");
alter table "public"."user" add constraint "user_default_workspace_id_fkey" foreign key ("default_workspace_id") references "public"."workspace" ("id");
alter table "public"."user_invitation" add constraint "user_invitation_accepted_by_user_id_fkey" foreign key ("accepted_by_user_id") references "public"."user" ("id");
alter table "public"."user_invitation" add constraint "user_invitation_inviter_user_id_fkey" foreign key ("inviter_user_id") references "public"."user" ("id");
alter table "public"."workload_label" add constraint "workload_label_workload_id_fkey" foreign key ("workload_id") references "public"."workload" ("id");
alter table "public"."workspace" add constraint "workspace_organization_id_fkey" foreign key ("organization_id") references "public"."organization" ("id");
alter table "public"."workspace_service_account" add constraint "workspace_service_account_workspace_id_fkey" foreign key ("workspace_id") references "public"."workspace" ("id");
comment on column "public"."actor_definition"."max_seconds_between_messages" is 'Define the number of seconds allowed between 2 messages emitted by the connector before timing out';
