global:

  serviceAccountName: &service-account-name "airbyte-admin"
  credVolumeOverride: ""
  secretName: ""
  extraContainers: []
  ## extraSelectorLabels [object] - use to specify own additional selector labels for deployment
  extraSelectorLabels: {}
  ## extraLabels [object] - use to specify own additional labels for deployment
  extraLabels: {}
  database:
    secretName: ""
    secretValue: ""

  jobs:
    ## Jobs resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## We usually recommend not to specify default resources and to leave this as a conscious
    ## choice for the user. This also increases chances charts run on environments with little
    ## resources, such as Minikube. If you do want to specify resources, uncomment the following
    ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    ##  jobs.resources.limits [object] The resources limits for jobs
    ##  jobs.resources.requests [object] The requested resources for jobs
    resources:
      ## Example:
      ## requests:
      ##    memory: 256Mi
      ##    cpu: 250m
      requests: {}
      ## Example:
      ## limits:
      ##    cpu: 200m
      ##    memory: 1Gi
      limits: {}

    kube:
      ## JOB_KUBE_ANNOTATIONS
      ## pod annotations of the sync job and the default pod annotations fallback for others jobs
      ##  jobs.kube.annotations [object] key/value annotations applied to kube jobs
      annotations: {}

      ## JOB_KUBE_LABELS
      ## pod labels of the sync job and the default pod labels fallback for others jobs
      ##  jobs.kube.labels [object] key/value labels applied to kube jobs
      labels: {}

      ## JOB_KUBE_NODE_SELECTORS
      ## pod node selector of the sync job and the default pod node selector fallback for others jobs
      ##  jobs.kube.nodeSelector [object] key/value node selector applied to kube jobs
      nodeSelector: {}

      ## JOB_KUBE_TOLERATIONS
      ##  jobs.kube.tolerations [array] Tolerations for jobs.kube pod assignment.
      ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
      ## any boolean values should be quoted to ensure the value is passed through as a string, eg:
      ## - key: airbyte-server
      ##   operator: Equal
      ##   value: "true"
      ##   effect: NoSchedule
      tolerations: []

      ## JOB_KUBE_MAIN_CONTAINER_IMAGE_PULL_SECRET
      ## image pull secret to use for job pod
      ##  jobs.kube.main_container_image_pull_secret [string]  image pull secret to use for job pod
      main_container_image_pull_secret: ""

      images:
        ## JOB_KUBE_BUSYBOX_IMAGE
        ## busybox image used by the job pod
        ##   jobs.kube.images.busybox [string] busybox image used by the job pod
        busybox: ""
        ## JOB_KUBE_SOCAT_IMAGE
        ## socat image used by the job pod
        ##   jobs.kube.images.socat [string] socat image used by the job pod
        socat: ""
        ## JOB_KUBE_CURL_IMAGE
        ## curl image used by the job pod
        ##   jobs.kube.images.curl [string] curl image used by the job pod
        curl: ""

enabled: false
##  workload-launcher.replicaCount Number of workload launcher replicas
replicaCount: 1

##  workload-launcher.image.repository The repository to use for the airbyte workload launcher image.
##  workload-launcher.image.pullPolicy the pull policy to use for the airbyte workload launcher image
##  workload-launcher.image.tag The airbyte workload launcher image tag. Defaults to the chart's AppVersion
image:
  repository: airbyte/workload-launcher
  pullPolicy: IfNotPresent

##  workload-launcher.podAnnotations [object] Add extra annotations to the workload launcher pod(s)
##
podAnnotations: {}

##  workload-launcher.podLabels [object] Add extra labels to the workload launcher pod(s)
##
podLabels: {}

##  workload-launcher.containerSecurityContext Security context for the container
## Examples:
## containerSecurityContext:
##    runAsNonRoot: true
##    runAsUser: 1000
##    readOnlyRootFilesystem: true
containerSecurityContext: {}

## Configure extra options for the workload launcher containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
##  workload-launcher.livenessProbe.enabled Enable livenessProbe on the workload launcher
##  workload-launcher.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
##  workload-launcher.livenessProbe.periodSeconds Period seconds for livenessProbe
##  workload-launcher.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
##  workload-launcher.livenessProbe.failureThreshold Failure threshold for livenessProbe
##  workload-launcher.livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 50
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

##  workload-launcher.readinessProbe.enabled Enable readinessProbe on the workload launcher
##  workload-launcher.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
##  workload-launcher.readinessProbe.periodSeconds Period seconds for readinessProbe
##  workload-launcher.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
##  workload-launcher.readinessProbe.failureThreshold Failure threshold for readinessProbe
##  workload-launcher.readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

## workload launcher resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## We usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
##  workload-launcher.resources.limits [object] The resources limits for the workload launcher container
##  workload-launcher.resources.requests [object] The requested resources for the workload launcher container
resources:
  ## Example:
  ## limits:
  ##    cpu: 200m
  ##    memory: 1Gi
  limits: {}
  ## Examples:
  ## requests:
  ##    memory: 256Mi
  ##    cpu: 250m
  requests: {}

##  workload-launcher.nodeSelector [object] Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

##  workload-launcher.tolerations [array] Tolerations for workload launcher pod assignment.
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

##  workload-launcher.affinity [object] Affinity and anti-affinity for workload launcher pod assignment.
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

##  workload-launcher.log.level The log level to log at.
log:
  level: "INFO"



##  workload-launcher.extraVolumeMounts [array] Additional volumeMounts for workload launcher container(s).
## Examples (when using `workload-launcher.containerSecurityContext.readOnlyRootFilesystem=true`):
## extraVolumeMounts:
##   - name: tmpdir
##     mountPath: /tmp
##
extraVolumeMounts: []

##  workload-launcher.extraVolumes [array] Additional volumes for workload launcher pod(s).
## Examples (when using `workload-launcher.containerSecurityContext.readOnlyRootFilesystem=true`):
## extraVolumes:
##   - name: tmpdir
##     emptyDir: {}
##
extraVolumes: []

##  extraContainer [array] Additional container for server pod(s)
## Example:
# extraContainers:
#   - name: otel_collector
#     image: somerepo/someimage:sometag
#     args: [
#         "--important-args"
#     ]
#     ports:
#       - containerPort: 443
#     volumeMounts:
#       - name: volumeMountCool
#         mountPath: /some/path
#         readOnly: true
extraContainers: []

##  extraInitContainers [array] Additional init containers for server pod(s)
## Example:
# extraInitContainers:
#   - name: sleepy
#     image: alpine
#     command: ['sleep', '60']

extraInitContainers: []

##  extraEnv [array] Supply extra env variables to main container using full notation
## Example: (With default env vars and values taken from generated config map)
# extraEnv:
#   - name: AIRBYTE_VERSION
#     valueFrom:
#       configMapKeyRef:
#         name: airbyte-env
#         key: AIRBYTE_VERSION
#   - name: API_URL
#     valueFrom:
#       configMapKeyRef:
#         name: airbyte-env
#         key: API_URL
#   - name: TRACKING_STRATEGY
#     valueFrom:
#       configMapKeyRef:
#         name: airbyte-env
#         key: TRACKING_STRATEGY
#   - name: FULLSTORY
#     valueFrom:
#       configMapKeyRef:
#         name: airbyte-env
#         key: FULLSTORY
#   - name: INTERNAL_API_HOST
#     valueFrom:
#       configMapKeyRef:
#         name: airbyte-env
#         key: INTERNAL_API_HOST
##
extraEnv: []
##  secrets [object] Supply additional secrets to container
## Example:
## secrets:
##   DATABASE_PASSWORD: strong-password
##   DATABASE_USER: my-db-user
secrets: {}

##  env_vars [object] Supply extra env variables to main container using simplified notation
## Example with default values for workload launcher:
# env_vars:
#   AIRBYTE_VERSION: 0.40.4

#   # Workspace storage for running jobs (logs, etc)
#   WORKSPACE_ROOT: /workspace
#   WORKSPACE_DOCKER_MOUNT: airbyte_workspace

#   LOCAL_ROOT: /tmp/airbyte_local

#   # Miscellaneous
#   TRACKING_STRATEGY: segment
#   WEBAPP_URL: airbyte-webapp-svc:80
#   INTERNAL_API_HOST: http://airbyte-server-svc:8001
env_vars: {}

## extraSelectorLabels [object] - use to specify own additional selector labels for deployment
extraSelectorLabels: {}
## extraLabels [object] - use to specify own additional labels for deployment
extraLabels: {}

## workloadApi:
##   bearerTokenSecretName: workload-api-bearer-token-name kubernetes secret name where bearer token is stored
##   bearerTokenSecretKey: workload-api-bearer-token-key kubernetes secret key where bearer token is stored
workloadApi: {}

debug:
  enabled: false
  remoteDebugPort: 5005
