{{- if .Values.worker.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-worker
  labels:
    {{- include "airbyte.labels" . | nindent 4 }}
    {{- if .Values.worker.extraLabels }}
    {{ toYaml (mergeOverwrite .Values.worker.extraLabels .Values.global.extraLabels) | nindent 4 }}
    {{- end }}
  annotations:
    {{ toYaml .Values.worker.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.worker.replicaCount }}
  selector:
    matchLabels:
      {{- include "airbyte.selectorLabels" . | nindent 6 }}
      {{- if .Values.worker.extraSelectorLabels }}
      {{ toYaml (mergeOverwrite .Values.worker.extraSelectorLabels .Values.global.extraSelectorLabels) | nindent 6 }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- include "airbyte.selectorLabels" . | nindent 8 }}
        {{- if .Values.worker.extraSelectorLabels }}
        {{ toYaml (mergeOverwrite .Values.worker.extraSelectorLabels .Values.global.extraSelectorLabels) | nindent 8 }}
        {{- end }}
        {{- if .Values.worker.podLabels }}
          {{- include "airbyte.tplvalues.render" (dict "value" .Values.worker.podLabels "context" $) | nindent 8 }}
        {{- end }}
      {{- if .Values.worker.podAnnotations }}
      annotations:
        {{- include "airbyte.tplvalues.render" (dict "value" .Values.worker.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.global.serviceAccountName }}
      automountServiceAccountToken: true
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.global.imagePullSecrets }}
          {{- printf "- name: %s" .name | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.worker.nodeSelector }}
      nodeSelector: {{- include "airbyte.tplvalues.render" (dict "value" .Values.worker.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.worker.tolerations }}
      tolerations: {{- include "airbyte.tplvalues.render" (dict "value" .Values.worker.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.worker.affinity }}
      affinity: {{- include "airbyte.tplvalues.render" (dict "value" .Values.worker.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.worker.extraInitContainers }}
      initContainers:
      {{- toYaml .Values.worker.extraInitContainers | nindent 6 }}
      {{- end }}
      containers:
      - name: airbyte-worker-container
        image: {{ include "imageUrl" (list .Values.worker.image $) }}
        imagePullPolicy: "{{ .Values.worker.image.pullPolicy }}"
        env:
        {{- if .Values.worker.debug.enabled }}
        - name: JAVA_TOOL_OPTIONS
          value: "-Xdebug -agentlib:jdwp=transport=dt_socket,address=0.0.0.0:{{ .Values.worker.debug.remoteDebugPort }},server=y,suspend=n"
        {{- end}}

        {{- if (or (eq .Values.global.edition "community") (eq .Values.global.edition "pro") (eq .Values.global.edition "enterprise")) }}
        - name: AIRBYTE_API_AUTH_HEADER_VALUE
          value: "Internal worker"
        {{- end }}

        {{- include "airbyte.common.envs" . | nindent 8 }}
        {{- include "airbyte.database.envs" . | nindent 8 }}
        {{- include "airbyte.database.migrations.envs" . | nindent 8 }}
        {{- include "airbyte.jobs.envs" . | nindent 8 }}
        {{- include "airbyte.jobs.errors.envs" . | nindent 8 }}
        {{- include "airbyte.keycloak.client.envs" . | nindent 8 }}
        {{- include "airbyte.logging.envs" . | nindent 8 }}
        {{- include "airbyte.metrics.envs" . | nindent 8 }}
        {{- include "airbyte.micronaut.envs" . | nindent 8 }}
        {{- include "airbyte.secretsManager.envs" . | nindent 8 }}
        {{- include "airbyte.storage.envs" . | nindent 8 }}
        {{- include "airbyte.temporal.envs" . | nindent 8 }}
        {{- include "airbyte.temporal.worker.envs" . | nindent 8 }}
        {{- include "airbyte.tracking.envs" . | nindent 8 }}
        {{- include "airbyte.worker.envs" . | nindent 8 }}
        {{- include "airbyte.workloads.resources.envs" . | nindent 8 }}
        {{- include "airbyte.workloadApiServer.envs" . | nindent 8 }}

        {{- if (eq .Values.global.edition "enterprise") }}
        {{- include "airbyte.enterprise.envs" . | nindent 8 }}
        {{- end }}

        # Values from secret
        {{- if .Values.worker.secrets }}
        {{- range $k, $v := .Values.worker.secrets }}
        - name: {{ $k }}
          valueFrom:
            secretKeyRef:
              name: worker-secrets
              key: {{ $k }}
        {{- end }}
        {{- end }}

        # Values from env
        {{- if or .Values.worker.env_vars .Values.global.env_vars }}
        {{- range $k, $v := mergeOverwrite .Values.worker.env_vars .Values.global.env_vars }}
        - name: {{ $k }}
          value: {{ $v | quote }}
        {{- end }}
        {{- end }}

        # Values from extraEnv for more compatibility (if you want to use external secret source or other stuff)
        {{- if .Values.worker.extraEnv }}
        {{- toYaml .Values.worker.extraEnv | nindent 8 }}
        {{- end }}

        {{- if .Values.worker.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /
            port: heartbeat
          initialDelaySeconds: {{ .Values.worker.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.worker.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.worker.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.worker.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.worker.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.worker.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /
            port: heartbeat
          initialDelaySeconds: {{ .Values.worker.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.worker.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.worker.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.worker.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.worker.readinessProbe.failureThreshold }}
        {{- end }}
        ports:
        {{- if .Values.worker.debug.enabled }}
        - name: debug
          containerPort: {{ .Values.worker.debug.remoteDebugPort }}
          protocol: TCP
        {{- end}}
        - name: heartbeat
          containerPort: 9000 # for heartbeat server
        - containerPort: 9001 # start temporal worker port pool
        - containerPort: 9002
        - containerPort: 9003
        - containerPort: 9004
        - containerPort: 9005
        - containerPort: 9006
        - containerPort: 9007
        - containerPort: 9008
        - containerPort: 9009
        - containerPort: 9010
        - containerPort: 9011
        - containerPort: 9012
        - containerPort: 9013
        - containerPort: 9014
        - containerPort: 9015
        - containerPort: 9016
        - containerPort: 9017
        - containerPort: 9018
        - containerPort: 9019
        - containerPort: 9020
        - containerPort: 9021
        - containerPort: 9022
        - containerPort: 9023
        - containerPort: 9024
        - containerPort: 9025
        - containerPort: 9026
        - containerPort: 9027
        - containerPort: 9028
        - containerPort: 9029
        - containerPort: 9030 # end temporal worker port pool
        {{- if .Values.worker.resources }}
        resources: {{- toYaml .Values.worker.resources | nindent 10 }}
        {{- end }}
        {{- if .Values.worker.containerSecurityContext }}
        securityContext: {{- toYaml .Values.worker.containerSecurityContext | nindent 10 }}
        {{- end }}
        volumeMounts:
        {{- if eq (include "airbyte.storage.type" .) "gcs" }}
        - name: gcs-log-creds-volume
          mountPath: {{ include "airbyte.storage.gcs.credentialsJsonPath" . }}
          readOnly: true
        {{- end }}
        {{- if .Values.worker.extraVolumeMounts }}
{{- toYaml .Values.worker.extraVolumeMounts | nindent 8 }}
        {{- end }}
        {{- if .Values.global.extraVolumeMounts }}
{{- toYaml .Values.global.extraVolumeMounts | nindent 8 }}
        {{- end }}
      {{- if .Values.worker.extraContainers }}
      {{ toYaml .Values.worker.extraContainers | nindent 6 }}
      {{- end }}
      {{- if .Values.global.extraContainers }}
      {{ toYaml .Values.global.extraContainers | nindent 6 }}
      {{- end }}
      securityContext: {{- toYaml .Values.worker.podSecurityContext | nindent 8 }}
      volumes:
      {{- if eq (include "airbyte.storage.type" .) "gcs" }}
      - name: gcs-log-creds-volume
        secret:
          secretName: {{ include "airbyte.storage.secretName" }}
          items:
            - key: {{ include "airbyte.storage.gcs.credentialsJson.secretKey" . }}
              path: "gcp.json"
      {{- end }}
      {{- if .Values.worker.extraVolumes }}
{{- toYaml .Values.worker.extraVolumes | nindent 6 }}
      {{- end }}
      {{- if .Values.global.extraVolumes }}
{{- toYaml .Values.global.extraVolumes | nindent 6 }}
      {{- end }}
{{- end }}
