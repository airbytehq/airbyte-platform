
{{/* DO NOT EDIT: This file was autogenerated. */}}

{{/*
    Cluster Configuration
*/}}

{{/*
Renders the global.cluster.type value
*/}}
{{- define "airbyte.cluster.type" }}
    {{- .Values.global.cluster.type | default "hybrid" }}
{{- end }}

{{/*
Renders the cluster.type environment variable
*/}}
{{- define "airbyte.cluster.type.env" }}
- name: CLUSTER_TYPE
  valueFrom:
    configMapKeyRef:
      name: {{ .Release.Name }}-airbyte-env
      key: CLUSTER_TYPE
{{- end }}

{{/*
Renders the global.cluster.dataPlane.controlPlaneAuthEndpoint value
*/}}
{{- define "airbyte.cluster.dataPlane.controlPlaneAuthEndpoint" }}
    {{- .Values.global.cluster.dataPlane.controlPlaneAuthEndpoint | default .Values.global.airbyteUrl }}
{{- end }}

{{/*
Renders the cluster.dataPlane.controlPlaneAuthEndpoint environment variable
*/}}
{{- define "airbyte.cluster.dataPlane.controlPlaneAuthEndpoint.env" }}
- name: CONTROL_PLANE_AUTH_ENDPOINT
  valueFrom:
    configMapKeyRef:
      name: {{ .Release.Name }}-airbyte-env
      key: CONTROL_PLANE_AUTH_ENDPOINT
{{- end }}

{{/*
Renders the set of all cluster environment variables
*/}}
{{- define "airbyte.cluster.envs" }}
{{- include "airbyte.cluster.type.env" . }}
{{- $opt := (include "airbyte.cluster.type" .) }}

{{- if eq $opt "control-plane" }}
{{- end }}

{{- if eq $opt "data-plane" }}
{{- include "airbyte.cluster.dataPlane.controlPlaneAuthEndpoint.env" . }}
{{- end }}

{{- if eq $opt "hybrid" }}
{{- include "airbyte.cluster.dataPlane.controlPlaneAuthEndpoint.env" . }}
{{- end }}

{{- end }}

{{/*
Renders the set of all cluster config map variables
*/}}
{{- define "airbyte.cluster.configVars" }}
CLUSTER_TYPE: {{ include "airbyte.cluster.type" . | quote }}
{{- $opt := (include "airbyte.cluster.type" .) }}

{{- if eq $opt "control-plane" }}
{{- end }}

{{- if eq $opt "data-plane" }}
CONTROL_PLANE_AUTH_ENDPOINT: {{ include "airbyte.cluster.dataPlane.controlPlaneAuthEndpoint" . | quote }}
{{- end }}

{{- if eq $opt "hybrid" }}
CONTROL_PLANE_AUTH_ENDPOINT: {{ include "airbyte.cluster.dataPlane.controlPlaneAuthEndpoint" . | quote }}
{{- end }}

{{- end }}
