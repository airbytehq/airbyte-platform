# if Cloud or Pro/Enterprise, render the keycloak StatefulSet template.
{{- if or (eq .Values.global.edition "cloud") (eq .Values.global.edition "pro") (eq .Values.global.edition "enterprise") }}
{{- if .Values.keycloak.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: airbyte-keycloak
  labels:
    {{- include "airbyte.labels" . | nindent 4 }}
      {{- if .Values.keycloak.extraLabels }}
      {{ toYaml (mergeOverwrite .Values.keycloak.extraLabels .Values.global.extraLabels) | nindent 4 }}
      {{- end }}
  annotations:
    {{ toYaml .Values.keycloak.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.keycloak.replicaCount }}
  serviceName: {{.Release.Name }}-airbyte-keycloak-headless-svc
  podManagementPolicy: OrderedReady # embedded infinispan does not handle parallel joins well, src https://github.com/keycloak/keycloak/issues/21108#issuecomment-1599010602
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "airbyte.selectorLabels" . | nindent 6 }}
        {{- if .Values.keycloak.extraLabels }}
        {{ toYaml (mergeOverwrite .Values.keycloak.extraSelectorLabels .Values.global.extraSelectorLabels) | nindent 4 }}
        {{- end }}
  template:
    metadata:
      labels:
        {{- include "airbyte.selectorLabels" . | nindent 8 }}
          {{- if .Values.keycloak.extraSelectorLabels }}
          {{ toYaml (mergeOverwrite .Values.keycloak.extraSelectorLabels .Values.global.extraSelectorLabels) | nindent 8 }}
          {{- end }}
          {{- if .Values.keycloak.podLabels }}
          {{- include "airbyte.tplvalues.render" (dict "value" .Values.keycloak.podLabels "context" $) | nindent 8 }}
          {{- end }}
      {{- if .Values.keycloak.podAnnotations }}
      annotations:
        {{- include "airbyte.tplvalues.render" (dict "value" .Values.keycloak.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.global.serviceAccountName }}
      {{- if .Values.keycloak.nodeSelector }}
      nodeSelector: {{- include "airbyte.tplvalues.render" (dict "value" .Values.keycloak.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.keycloak.tolerations }}
      tolerations: {{- include "airbyte.tplvalues.render" (dict "value" .Values.keycloak.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.keycloak.affinity }}
      affinity: {{- include "airbyte.tplvalues.render" (dict "value" .Values.keycloak.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.global.imagePullSecrets }}
          {{- printf "- name: %s" .name | nindent 8 }}
        {{- end }}
      {{- end }}
      initContainers:
        {{- if (ne .Values.keycloak.bypassInit true) }}
        # This init container will only executed if the deployment mode is "oss" and the bypassInit is not true.
        - name: init-db
          image: {{ include "imageUrl" (list .Values.keycloak.initContainers.initDb.image $) }}
          command: [ "sh", "-c" ]
          args:
            - >
              PGPASSWORD=$DATABASE_PASSWORD psql -h $DATABASE_HOST -p $DATABASE_PORT -U $DATABASE_USER -d $DATABASE_DB -c "CREATE SCHEMA IF NOT EXISTS keycloak";
          env:
            {{- include "airbyte.database.envs" . | nindent 12 }}

          securityContext: 
            {{- toYaml .Values.keycloak.initContainerSecurityContext | nindent 14 }}
        {{- end }}
        {{- if .Values.keycloak.extraInitContainers }}
        {{- toYaml .Values.keycloak.extraInitContainers | nindent 8 }}
        {{- end }}
      containers:
        - name: airbyte-keycloak
          image: {{ include "imageUrl" (list .Values.keycloak.image $)}}
          imagePullPolicy: {{ .Values.keycloak.image.pullPolicy }}
          env:
            {{- include "airbyte.keycloak.envs" . | nindent 12 }}
            {{- include "airbyte.keycloak.admin.user.envs" . | nindent 12 }}
            {{- include "airbyte.keycloak.database.envs" . | nindent 12 }}

            {{- if .Values.keycloak.extraEnv }}
            {{ .Values.keycloak.extraEnv | toYaml | nindent 12 }}
            {{- end }}

            # Values from secret
            {{- if .Values.keycloak.secrets }}
            {{- range $k, $v := .Values.keycloak.secrets }}
            - name: {{ $k }}
              valueFrom:
                secretKeyRef:
                  name: keycloak-secrets
                  key: {{ $k }}
            {{- end }}
            {{- end }}

            # Values from env
            {{- if .Values.keycloak.env_vars }}
            {{- range $k, $v := mergeOverwrite .Values.keycloak.env_vars .Values.global.env_vars }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.keycloak.service.port }}
              protocol: TCP
            - containerPort: 7800
          {{- if .Values.keycloak.containerSecurityContext }}
          securityContext: {{- toYaml .Values.keycloak.containerSecurityContext | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: keycloak-storage
              mountPath: /opt/keycloak/data/infinispan
          {{- if .Values.keycloak.extraVolumeMounts }}
          {{ toYaml .Values.keycloak.extraVolumeMounts | nindent 10 }}
          {{- end }}
          {{- if .Values.keycloak.resources }}
          resources: {{- toYaml .Values.keycloak.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.keycloak.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /auth/health/live
              port: {{ .Values.keycloak.service.port }}
            initialDelaySeconds: {{ .Values.keycloak.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.keycloak.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.keycloak.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.keycloak.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.keycloak.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.keycloak.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /auth/health/ready
              port: {{ .Values.keycloak.service.port }}
            initialDelaySeconds: {{ .Values.keycloak.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.keycloak.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.keycloak.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.keycloak.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.keycloak.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.keycloak.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /auth/health/started
              port: {{ .Values.keycloak.service.port }}
            initialDelaySeconds: {{ .Values.keycloak.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.keycloak.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.keycloak.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.keycloak.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.keycloak.startupProbe.failureThreshold }}
          {{- end }}
      {{- if .Values.keycloak.extraContainers }}
      {{ toYaml .Values.keycloak.extraContainers | nindent 8 }}
      {{- end }}
      {{- if .Values.global.extraContainers }}
      {{ toYaml .Values.global.extraContainers | nindent 8 }}
      {{- end }}
      securityContext: {{- toYaml .Values.keycloak.podSecurityContext | nindent 10 }}
      volumes:
      {{- if .Values.keycloak.extraVolumes }}
      {{ toYaml .Values.keycloak.extraVolumes | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: keycloak-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
{{- end }}
{{- end }}
