apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "airbyte.fullname" . }}
  labels:
    {{- include "airbyte.labels" . | nindent 4 }}
    {{- if .Values.extraLabels }}
    {{ toYaml (mergeOverwrite .Values.extraLabels .Values.global.extraLabels) | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "airbyte.selectorLabels" . | nindent 6 }}
      {{- if .Values.extraSelectorLabels }}
      {{ toYaml (mergeOverwrite .Values.extraSelectorLabels .Values.global.extraSelectorLabels) | nindent 6 }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- include "airbyte.selectorLabels" . | nindent 8 }}
        {{- if .Values.extraSelectorLabels }}
        {{ toYaml (mergeOverwrite .Values.extraSelectorLabels .Values.global.extraSelectorLabels) | nindent 8 }}
        {{- end }}
        {{- if .Values.podLabels }}
          {{- include "airbyte.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- include "airbyte.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ default .Values.global.serviceAccountName .Values.serviceAccountName }}
      automountServiceAccountToken: true
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.global.imagePullSecrets }}
          {{- printf "- name: %s" .name | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "airbyte.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "airbyte.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "airbyte.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.extraInitContainers }}
      initContainers:
      {{- toYaml .Values.extraInitContainers | nindent 6 }}
      {{- end }}
      containers:
        - name: airbyte-cron
          image: {{ include "imageUrl" (list .Values.image $) }}
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
          {{- if or (eq .Values.global.edition "community") (eq .Values.global.edition "pro") (eq .Values.global.edition "enterprise")  }}
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: AIRBYTE_VERSION
          - name: AIRBYTE_EDITION
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: AIRBYTE_EDITION
          - name: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
          - name: MICROMETER_METRICS_ENABLED
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: MICROMETER_METRICS_ENABLED
          - name: MICROMETER_METRICS_STEP
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: MICROMETER_METRICS_STEP
          - name: MICROMETER_METRICS_OTLP_ENABLED
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: MICROMETER_METRICS_OTLP_ENABLED
          - name: OTEL_COLLECTOR_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: OTEL_COLLECTOR_ENDPOINT
          - name: MICROMETER_METRICS_STATSD_ENABLED
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: MICROMETER_METRICS_STATSD_ENABLED
          - name: MICROMETER_METRICS_STATSD_FLAVOR
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: MICROMETER_METRICS_STATSD_FLAVOR
          - name: MICRONAUT_ENVIRONMENTS
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: CRON_MICRONAUT_ENVIRONMENTS
          - name: TEMPORAL_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: TEMPORAL_HOST
          - name: SEGMENT_WRITE_KEY
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: SEGMENT_WRITE_KEY
          - name: STATSD_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: STATSD_HOST
          - name: STATSD_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: STATSD_PORT
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: TRACKING_STRATEGY
          - name: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
          - name: WORKLOAD_API_BEARER_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ index .Values "workloadApi" "bearerTokenSecretName" | default (printf "%s-airbyte-secrets" .Release.Name ) }}
                key: {{ index .Values "workloadApi" "bearerTokenSecretKey" | default "WORKLOAD_API_BEARER_TOKEN" }}
          - name: WORKLOAD_API_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: WORKLOAD_API_HOST
          - name: WORKSPACE_DOCKER_MOUNT
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: WORKSPACE_DOCKER_MOUNT
          - name: WORKSPACE_ROOT
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: WORKSPACE_ROOT

            # Secrets Manager
          - name: SECRET_PERSISTENCE
            value: {{ include "airbyte.secretPersistence" . }}
            # Values for AwsSecretsManager
          {{- if eq ((((.Values.global).secretsManager).awsSecretManager).authenticationType) "credentials" }}
          - name: AWS_SECRET_MANAGER_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: {{ include "airbyte.secretStoreName" .Values.global.secretsManager.secretsManagerSecretName }}
                key: {{ include "airbyte.awsSecretManagerAccessKeyIdSecretKey" .Values.global.secretsManager.awsSecretManager.accessKeyIdSecretKey }}
          - name: AWS_SECRET_MANAGER_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "airbyte.secretStoreName" .Values.global.secretsManager.secretsManagerSecretName }}
                key: {{ include "airbyte.awsSecretManagerSecretAccessKeySecretKey" .Values.global.secretsManager.awsSecretManager.secretAccessKeySecretKey }}
          {{- end }}
          {{- if ((((.Values.global).secretsManager).awsSecretManager).region) }}
          - name: AWS_SECRET_MANAGER_REGION
            value: {{ (((.Values.global).secretsManager).awsSecretManager).region }}
          {{- end }}
          {{- if ((((.Values.global).secretsManager).awsSecretManager).tags) }}
          - name: AWS_SECRET_MANAGER_SECRET_TAGS
            value: {{ include "airbyte.tagsToString" .Values.global.secretsManager.awsSecretManager.tags }}
          {{- end }}
          {{- if ((((.Values.global).secretsManager).awsSecretManager).kms) }}
          - name: AWS_KMS_KEY_ARN
            value: {{ ((((.Values.global).secretsManager).awsSecretManager).kms) | default "" }}
          {{- end }}

            # Values for Azure Key Vault
          {{- if (((.Values.global).secretsManager).azureKeyVault) }}

          - name: AB_AZURE_KEY_VAULT_VAULT_URL
            value: {{ (((.Values.global).secretsManager).azureKeyVault).vaultUrl }}

          - name: AB_AZURE_KEY_VAULT_TENANT_ID
            value: {{ (((.Values.global).secretsManager).azureKeyVault).tenantId }}

          - name: AB_AZURE_KEY_VAULT_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: {{ include "airbyte.secretStoreName" .Values.global.secretsManager.secretsManagerSecretName }}
                key: {{ include "airbyte.azureKeyVaultClientIdSecretKey" .Values.global.secretsManager.azureKeyVault.clientIdSecretKey }}
          - name: AB_AZURE_KEY_VAULT_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "airbyte.secretStoreName" .Values.global.secretsManager.secretsManagerSecretName }}
                key: {{ include "airbyte.azureKeyVaultClientSecretSecretKey" .Values.global.secretsManager.azureKeyVault.clientSecretSecretKey }}

          {{- end }}

          {{- if ((((.Values.global).secretsManager).azureKeyVault).tags) }}
          - name: AB_AZURE_KEY_VAULT_TAGS
            value: {{ include "airbyte.tagsToString" .Values.global.secretsManager.azureKeyVault.tags }}
          {{- end }}

            # Values for googleSecretManager secrets
          {{- if (((.Values.global).secretsManager).googleSecretManager) }}
          - name: SECRET_STORE_GCP_PROJECT_ID
            value: {{ .Values.global.secretsManager.googleSecretManager.projectId }}
          - name: SECRET_STORE_GCP_CREDENTIALS
            valueFrom:
              secretKeyRef:
                name: {{ include "airbyte.secretStoreName" .Values.global.secretsManager.secretsManagerSecretName }}
                key: {{ include "airbyte.googleSecretManagerCredentialsSecretKey" .Values.global.secretsManager.googleSecretManager.credentialsSecretKey }}
          {{- end }}

            # Values for vault secrets
          {{- if (((.Values.global).secretsManager).vault) }}
          - name: VAULT_ADDRESS
            value: {{ (((.Values.global).secretsManager).vault).address }}
          - name: VAULT_PREFIX
            value: {{ (((.Values.global).secretsManager).vault).prefix }}
          - name: VAULT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "airbyte.secretStoreName" .Values.global.secretsManager.secretsManagerSecretName }}
                key: {{ include "airbyte.vaultAuthTokenSecretKey" .Values.global.secretsManager.vault.authTokenSecretKey }}
          {{- end }}

          # Database
          {{- include "airbyte.database.envs" . | nindent 10 }}
          {{- include "airbyte.enterprise.license" . | nindent 10 }}

          {{- end }}


          # Values from secret
          {{- if .Values.secrets }}
          {{- range $k, $v := .Values.secrets }}
          - name: {{ $k }}
            valueFrom:
              secretKeyRef:
                name: cron-secrets
                key: {{ $k }}
          {{- end }}
          {{- end }}

          # Values from env
          {{- if or .Values.env_vars .Values.global.env_vars }}
          {{- range $k, $v := mergeOverwrite .Values.env_vars .Values.global.env_vars }}
          - name: {{ $k }}
            value: {{ $v | quote }}
          {{- end }}
          {{- end }}

          # Values from extraEnv for more compability(if you want to use external secret source or other stuff)
          {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 10 }}
          {{- end }}

          {{- if .Values.containerSecurityContext }}
          securityContext: {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          {{- end }}

          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}

          {{- if .Values.extraVolumeMounts }}
          volumeMounts: {{ toYaml .Values.extraVolumeMounts | nindent 10 }}
          {{- end }}

        {{- if .Values.extraContainers }}
          {{ toYaml .Values.extraContainers | nindent 8 }}
        {{- end }}
        {{- if .Values.global.extraContainers }}
          {{ toYaml .Values.global.extraContainers | nindent 8 }}
        {{- end }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 10 }}
      {{- if .Values.extraVolumes }}
      volumes: {{ toYaml .Values.extraVolumes | nindent 6 }}
      {{- end }}
