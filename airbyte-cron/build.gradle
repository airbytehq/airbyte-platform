plugins {
    id "io.airbyte.gradle.jvm.app"
    id "io.airbyte.gradle.docker"
    id "io.airbyte.gradle.publish"
}

dependencies {
    annotationProcessor libs.lombok
    implementation libs.lombok
    implementation libs.commons.io

    implementation 'com.auth0:java-jwt:3.19.2'
    implementation libs.bundles.kubernetes.client
    implementation libs.sentry.java
    implementation libs.bundles.temporal
    implementation libs.bundles.datadog

    implementation project(':airbyte-api')
    implementation project(':airbyte-analytics')
    implementation project(':airbyte-commons')
    implementation project(':airbyte-commons-micronaut')
    implementation project(':airbyte-commons-temporal')
    implementation project(':airbyte-config:config-models')
    implementation project(':airbyte-config:config-persistence')
    implementation project(':airbyte-config:init')
    implementation project(':airbyte-json-validation')
    implementation project(':airbyte-db:db-lib')
    implementation project(":airbyte-featureflag")
    implementation project(':airbyte-metrics:metrics-lib')
    implementation project(':airbyte-persistence:job-persistence')

    annotationProcessor platform(libs.micronaut.bom)
    annotationProcessor libs.bundles.micronaut.annotation.processor

    implementation platform(libs.micronaut.bom)
    implementation libs.bundles.micronaut
}

Properties env = new Properties()
rootProject.file('.env.dev').withInputStream { env.load(it) }

airbyte {
    application {
        mainClass = 'io.airbyte.cron.MicronautCronRunner'
        defaultJvmArgs = ['-XX:+ExitOnOutOfMemoryError', '-XX:MaxRAMPercentage=75.0']
        localEnvVars = env + [
                "AIRBYTE_ROLE"   : System.getenv("AIRBYTE_ROLE") ?: "undefined",
                "AIRBYTE_VERSION": env.VERSION
        ] as Map<String, String>
    }

    docker {
        imageName = "cron"
    }
}
