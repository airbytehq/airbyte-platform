micronaut:
  application:
    name: airbyte-connector-sidecar
  server:
    enable: false
  metrics:
    enabled: ${MICROMETER_METRICS_ENABLED:false}
    export:
      otlp:
        enabled: ${MICROMETER_METRICS_OTLP_ENABLED:false}
        step: ${MICROMETER_METRICS_STEP:PT30S}
        url: ${OTEL_COLLECTOR_ENDPOINT:`http://localhost:4318/v1/metrics`}
      statsd:
        enabled: ${MICROMETER_METRICS_STATSD_ENABLED:false}
        flavor: ${MICROMETER_METRICS_STATSD_FLAVOR:datadog}
        step: ${MICROMETER_METRICS_STEP:PT30S}
        host: ${STATSD_HOST:localhost}
        port: ${STATSD_PORT:8125}
  security:
    enabled: false
airbyte:
  edition: ${AIRBYTE_EDITION:COMMUNITY}
  role: ${AIRBYTE_ROLE:dev}
  version: ${AIRBYTE_VERSION:dev}
  config-dir: ${AIRBYTE_CONFIG_DIR:/config}
  acceptance:
    test:
      enabled: ${ACCEPTANCE_TEST_ENABLED:false}
  cloud:
    storage:
      type: ${STORAGE_TYPE}
      bucket:
        log: ${STORAGE_BUCKET_LOG}
        state: ${STORAGE_BUCKET_STATE}
        workload-output: ${STORAGE_BUCKET_WORKLOAD_OUTPUT}
        activity-payload: ${STORAGE_BUCKET_ACTIVITY_PAYLOAD}
        audit-logging: ${STORAGE_BUCKET_AUDIT_LOGGING}
      azure:
        connection-string: ${AZURE_STORAGE_CONNECTION_STRING}
      gcs:
        application-credentials: ${GOOGLE_APPLICATION_CREDENTIALS:}
      minio:
        access-key: ${AWS_ACCESS_KEY_ID:}
        endpoint: ${MINIO_ENDPOINT:}
        secret-access-key: ${AWS_SECRET_ACCESS_KEY:}
      s3:
        access-key: ${AWS_ACCESS_KEY_ID:}
        region: ${AWS_DEFAULT_REGION:}
        secret-access-key: ${AWS_SECRET_ACCESS_KEY:}
  internal-api:
    auth-header:
      name: ${AIRBYTE_API_AUTH_HEADER_NAME:}
      value: ${AIRBYTE_API_AUTH_HEADER_VALUE:}
    base-path: ${INTERNAL_API_HOST}/api
    connect-timeout-seconds: ${AIRBYTE_API_CONNECT_TIMEOUT_SECONDS:30}
    read-timeout-seconds: ${AIRBYTE_API_READ_TIMEOUT_SECONDS:600}
    retries:
      delay-seconds: ${AIRBYTE_API_RETRY_DELAY_SECONDS:2}
      max: ${AIRBYTE_API_MAX_RETRIES:5}
  control.plane.auth-endpoint: ${CONTROL_PLANE_AUTH_ENDPOINT}
  data.plane.service-account:
    credentials-path: ${DATA_PLANE_SERVICE_ACCOUNT_CREDENTIALS_PATH:}
    email: ${DATA_PLANE_SERVICE_ACCOUNT_EMAIL:}
  sidecar:
    # Can we bump this value? Does it need to be configured per operation?
    # Should we pass it in from the launcher?
    file-timeout-minutes: ${SIDECAR_FILE_TIMEOUT_MINUTES:9}
    file-timeout-minutes-within-sync: ${SIDECAR_FILE_TIMEOUT_WITHIN_SYNC_MINUTES:30}
  tracking:
    strategy: ${TRACKING_STRATEGY:LOGGING}
    write-key: ${SEGMENT_WRITE_KEY:}
  workload-api:
    base-path: ${WORKLOAD_API_HOST:}
    bearer-token: ${WORKLOAD_API_BEARER_TOKEN:}
    connect-timeout-seconds: ${WORKLOAD_API_CONNECT_TIMEOUT_SECONDS:30}
    read-timeout-seconds: ${WORKLOAD_API_READ_TIMEOUT_SECONDS:300}
    retries:
      delay-seconds: ${WORKLOAD_API_RETRY_DELAY_SECONDS:2}
      max: ${WORKLOAD_API_MAX_RETRIES:5}

logger:
  levels:
    com.zaxxer.hikari: ERROR
    com.zaxxer.hikari.pool: ERROR
    io.grpc: INFO
    io.fabric8.kubernetes.client: INFO
    io.netty: INFO
    io.temporal: INFO
#   Uncomment to help resolve issues with conditional beans
#      io.micronaut.context.condition: DEBUG
