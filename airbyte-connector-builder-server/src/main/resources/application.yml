micronaut:
  application:
    name: airbyte-connector-builder-server
  caches:
    # used by the analytics tracking client to cache calls to resolve the deployment and identity (workspace) for
    # track events
    analytics-tracking-deployments:
      charset: "UTF-8"
      expire-after-access: 10m
    analytics-tracking-identity:
      charset: "UTF-8"
      expire-after-access: 10m
  env:
    cloud-deduction: true
  metrics:
    enabled: ${MICROMETER_METRICS_ENABLED:false}
    export:
      statsd:
        enabled: ${MICROMETER_METRICS_ENABLED:false}
        flavor: ${MICROMETER_METRICS_STATSD_FLAVOR:datadog}
        step: ${MICROMETER_METRICS_STEP:PT30S}
        host: ${STATSD_HOST:localhost}
        port: ${STATSD_PORT:8125}
  security:
    authentication-provider-strategy: ALL
    enabled: ${API_AUTHORIZATION_ENABLED:false}
  server:
    port: 8080
    cors:
      enabled: true
    netty:
      access-logger:
        enabled: ${HTTP_ACCESS_LOG_ENABLED:false}
      aggregator:
        max-content-length: 52428800 # 50MB
      max-header-size: ${NETTY_MAX_HEADER_SIZE:32768}
    max-request-size: 10485760 # 10MB the micronaut default. If we want to bump, double check it works for nginx.
  endpoints:
    v1/manifest_template:
      enable: true
      sensitive: false
    v1/manifest/resolve:
      enable: true
      sensitive: false
    v1/stream/read:
      enable: true
      sensitive: false
    v1/health:
      enable: true
      sensitive: false

airbyte:
  # connector-builder-server: uncomment when there are connector server specific environment variables we need to specify
  acceptance:
    test:
      enabled: ${ACCEPTANCE_TEST_ENABLED:false}
  control:
    plane:
      auth-endpoint: ${CONTROL_PLANE_AUTH_ENDPOINT:}
  data:
    plane:
      service-account:
        credentials-path: ${DATA_PLANE_SERVICE_ACCOUNT_CREDENTIALS_PATH:}
        email: ${DATA_PLANE_SERVICE_ACCOUNT_EMAIL:}
  deployment-mode: ${DEPLOYMENT_MODE:OSS}
  internal:
    api:
      auth-header:
        name: ${AIRBYTE_API_AUTH_HEADER_NAME:}
        value: ${AIRBYTE_API_AUTH_HEADER_VALUE:}
      host: ${INTERNAL_API_HOST}
  local:
    docker-mount: ${LOCAL_DOCKER_MOUNT:}
    root: ${LOCAL_ROOT}
  role: ${AIRBYTE_ROLE:}
  tracking:
    strategy: ${TRACKING_STRATEGY:LOGGING}
    write-key: ${SEGMENT_WRITE_KEY:}
  version: ${AIRBYTE_VERSION}
  workflow:
    failure:
      restart-delay: ${WORKFLOW_FAILURE_RESTART_DELAY_SECONDS:600}
  workspace:
    docker-mount: ${WORKSPACE_DOCKER_MOUNT:}
    root: ${WORKSPACE_ROOT}

endpoints:
  beans:
    enabled: true
    sensitive: false
  caches:
    enabled: true
    sensitive: false
  env:
    enabled: true
    sensitive: false
  health:
    enabled: false
    jdbc:
      enabled: false
    sensitive: false
  info:
    enabled: true
    sensitive: true
  loggers:
    enabled: true
    sensitive: true
  metrics:
    enabled: ${MICROMETER_METRICS_ENABLED:false}
    sensitive: false
  refresh:
    enabled: false
    sensitive: true
  routes:
    enabled: true
    sensitive: false
  threaddump:
    enabled: true
    sensitive: true

jackson:
  mapper:
    ACCEPT_CASE_INSENSITIVE_ENUMS: true

logger:
  levels:
    io.airbyte.bootloader: DEBUG
    # Uncomment to help resolve issues with conditional beans
    # io.micronaut.context.condition: DEBUG
