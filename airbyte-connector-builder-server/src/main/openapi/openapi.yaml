openapi: 3.0.0
info:
  description: |
    Connector Builder Server API

  version: "1.0.0"
  title: Connector Builder Server API
  contact:
    email: contact@airbyte.io
  license:
    name: MIT
    url: "https://opensource.org/licenses/MIT"
externalDocs:
  description: Find out more about Connector Builder
  url: "https://docs.airbyte.com/connector-development/config-based/connector-builder-ui"
servers:
  - url: "http://localhost:80/"
paths:
  /v1/contribute/check:
    post:
      tags:
        - connectorBuilderServer
      summary: Checks if a connector being contributed already exists
      operationId: checkContribution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckContributionRequestBody"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckContributionRead"
        "400":
          $ref: "#/components/responses/ExceptionResponse"
        "422":
          $ref: "#/components/responses/InvalidInputResponse"
  /v1/contribute/generate:
    post:
      tags:
        - connectorBuilderServer
      summary: Generates a connector module and pushes it to Github as a PR
      operationId: generateContribution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateContributionRequestBody"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateContributionResponse"
        "400":
          $ref: "#/components/responses/ExceptionResponse"
        "422":
          $ref: "#/components/responses/InvalidInputResponse"
  /v1/stream/read:
    post:
      tags:
        - connectorBuilderServer
      summary: Reads a specific stream in the source. TODO in a later phase - only read a single slice of data.
      operationId: readStream
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StreamReadRequestBody"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreamRead"
        "400":
          $ref: "#/components/responses/ExceptionResponse"
        "422":
          $ref: "#/components/responses/InvalidInputResponse"
  /v1/manifest/resolve:
    post:
      tags:
        - connectorBuilderServer
      summary: Given a JSON manifest, returns a JSON manifest with all of the $refs and $parameters resolved and flattened
      operationId: resolveManifest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResolveManifestRequestBody"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResolveManifest"
        "400":
          $ref: "#/components/responses/ExceptionResponse"
        "422":
          $ref: "#/components/responses/InvalidInputResponse"
  /v1/assist/v1/process:
    post:
      tags:
        - connectorBuilderServer
      summary: Assist server access point
      operationId: assistV1Process
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssistV1ProcessRequestBody"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssistV1Process"
        "400":
          $ref: "#/components/responses/ExceptionResponse"
        "422":
          $ref: "#/components/responses/InvalidInputResponse"
  /v1/health:
    get:
      tags:
        - health
      summary: Health Check
      operationId: getHealthCheck
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheckRead"
      # This route is unsecured for external monitoring.
      security: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CheckContributionRequestBody:
      type: object
      required:
        - connector_image_name
      properties:
        connector_image_name:
          type: string
          description: The id of the connector being submitted for contribution
    CheckContributionRead:
      type: object
      required:
        - connector_exists
      properties:
        connector_name:
          type: string
          description: The name of the connector in Github, if it exists
        github_url:
          type: string
          description: The Github URL of the connector in the airbyte repository, if it exists
        connector_exists:
          type: boolean
          description: Indicates whether a connector already exists with the provided image name
    GenerateContributionRequestBody:
      type: object
      required:
        - name
        - connector_image_name
        - github_token
        - manifest_yaml
        - base_image
      properties:
        name:
          type: string
          description: Name of the connector being contributed, e.g. Google Sheets
        connector_image_name:
          type: string
          description: The name of the connector module, e.g. source-google-sheets
        description:
          type: string
          description: Brief description of the connector and the API it integrates
        github_token:
          type: string
          description: Github Personal Access Token that should be used to create the PR
        manifest_yaml:
          type: string
          description: The connector manifest in YAML form
        base_image:
          type: string
          description: The base image to use for the connector
    GenerateContributionResponse:
      type: object
      required:
        - pull_request_url
        - actor_definition_id
      properties:
        pull_request_url:
          type: string
          description: URL of the PR that was created or updated
        actor_definition_id:
          type: string
          format: UUID
          description: The definition ID of the connector that was contributed to
    StreamRead:
      type: object
      required:
        - logs
        - slices
        - test_read_limit_reached
      properties:
        logs:
          type: array
          description: The LOG AirbyteMessages that were emitted during the read of this slice
          items:
            type: object
            # $ref: "#/components/schemas/AirbyteProtocol/definitions/AirbyteLogMessage"
        slices:
          type: array
          description: The stream slices returned from the read command. If no stream slicer is configured, this should contain a single item containing all of the results.
          items:
            type: object
            required:
              - pages
            properties:
              pages:
                type: array
                description: The pages returned from the read command. If no pagination is configured, this should contain a single item containing all of the results.
                items:
                  type: object
                  required:
                    - records
                  properties:
                    records:
                      type: array
                      description: The RECORD AirbyteMessages coming from the read operation for this page
                      items:
                        type: object
                        # $ref: "#/components/schemas/AirbyteProtocol/definitions/AirbyteRecordMessage"
                    request:
                      $ref: "#/components/schemas/HttpRequest"
                    response:
                      $ref: "#/components/schemas/HttpResponse"
              slice_descriptor:
                type: object
                description: "An object describing the current slice. This can be omitted if a stream slicer is not configured."
              state:
                type: array
                items:
                  $ref: "#/components/schemas/AirbyteStateMessage"
        test_read_limit_reached:
          type: boolean
          description: Whether the maximum number of request per slice or the maximum number of slices queried has been reached
        auxiliary_requests:
          type: array
          items:
            type: object
            required:
              - description
              - request
              - response
              - title
            properties:
              description:
                type: string
              request:
                $ref: "#/components/schemas/HttpRequest"
              response:
                $ref: "#/components/schemas/HttpResponse"
              title:
                type: string
        inferred_schema:
          type: object
          description: The narrowest JSON Schema against which every AirbyteRecord in the slices can validate successfully. This is inferred from reading every record in the output slices.
        inferred_datetime_formats:
          type: object
          description: Fields that match the given datetime format in every encountered record. The property names are the fields, the property values are the datetime formats.
        latest_config_update:
          type: object
          description: The latest configuration emitted by the platform. The connector builder uses this to update its state when a new configuration is generated, to ensure that the user always work with the latest configuration.
    StreamReadRequestBody:
      type: object
      required:
        - manifest
        - stream
        - config
      properties:
        config:
          $ref: "#/components/schemas/ConnectorConfig"
        manifest:
          $ref: "#/components/schemas/ConnectorManifest"
        stream:
          type: string
          description: Name of the stream to read
        form_generated_manifest:
          type: boolean
          description: Indicates if the manifest was auto-generated from the form-based Connector Builder UI
          default: false
        project_id:
          type: string
          description: ID of the project where the request is coming from
        record_limit:
          type: integer
          minimum: 1
          maximum: 10000
          description: Maximum number of records that will be returned to the client from the connector builder
        page_limit:
          type: integer
          minimum: 1
          maximum: 20
          description: Maximum number of pages that will be returned to the client from the connector builder
        slice_limit:
          type: integer
          minimum: 1
          maximum: 20
          description: Maximum number of slices that will be returned to the client from the connector builder
        state:
          type: array
          items:
            $ref: "#/components/schemas/AirbyteStateMessage"
        workspace_id:
          type: string
          description: ID of the workspace where the request is coming from
        # --- Potential addition for a later phase ---
        # numPages:
        #   type: integer
        #   description: Number of pages to read from the source for each slice
        #   default: 1
    HttpRequest:
      type: object
      required:
        - url
        - http_method
      properties:
        url:
          type: string
          description: URL that the request was sent to
        body:
          type: string
          description: The body of the HTTP request, if present
        headers:
          type: object
          description: The headers of the HTTP request, if any
        http_method:
          type: string
          enum: ["GET", "POST", "PUT", "PATCH"]
          description: The http method of the request ("GET", "POST", "PUT", or "PATCH")
    HttpResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: integer
          description: The status of the response
        body:
          type: string
          description: The body of the HTTP response, if present
        headers:
          type: object
          description: The headers of the HTTP response, if any
    # --- Commenting out for now since they do not work with our orval openapi client generator ---
    # AirbyteProtocol:
    #   $ref: ../../../../airbyte-protocol/protocol-models/src/main/resources/airbyte_protocol/airbyte_protocol.yaml
    ResolveManifestRequestBody:
      type: object
      required:
        - manifest
      properties:
        manifest:
          $ref: "#/components/schemas/ConnectorManifest"
        form_generated_manifest:
          type: boolean
          description: Indicates if the manifest was auto-generated from the form-based Connector Builder UI
          default: false
        project_id:
          type: string
          description: ID of the project where the request is coming from
        workspace_id:
          type: string
          description: ID of the workspace where the request is coming from
    ResolveManifest:
      type: object
      required:
        - manifest
      properties:
        manifest:
          type: object
          description: The config-based connector manifest contents with $refs and $parameters resolved
    AssistV1ProcessRequestBody:
      type: object
      additionalProperties: true
    AssistV1Process:
      type: object
      additionalProperties: true
    HealthCheckRead:
      type: object
      required:
        - available
      properties:
        available:
          type: boolean
          description: Boolean value indicating whether the server is available or not
        cdk_version:
          type: string
          description: The version of the CDK used by the server
    ConnectorConfig:
      type: object
      description: The config blob containing the user inputs for testing
    ConnectorManifest:
      type: object
      description: The config-based connector manifest contents
    AirbyteStateMessage:
      type: object
      description: The STATE AirbyteMessage emitted at the end of this slice. This can be omitted if a stream slicer is not configured.

    # The following exception structs were copied from airbyte-api/server-api/src/main/openapi/config.yaml
    InvalidInputProperty:
      type: object
      required:
        - propertyPath
      properties:
        propertyPath:
          type: string
        invalidValue:
          type: string
        message:
          type: string
    KnownExceptionInfo:
      type: object
      required:
        - message
      properties:
        message:
          type: string
        exceptionClassName:
          type: string
        exceptionStack:
          type: array
          items:
            type: string
        details:
          type: object
    InvalidInputExceptionInfo:
      type: object
      required:
        - message
        - validationErrors
      properties:
        message:
          type: string
        exceptionClassName:
          type: string
        exceptionStack:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            $ref: "#/components/schemas/InvalidInputProperty"
  responses:
    InvalidInputResponse:
      description: Input failed validation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidInputExceptionInfo"
    ExceptionResponse:
      description: Exception occurred; see message for details.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/KnownExceptionInfo"
security:
  - {}
