/* eslint-disable */
/**
 * Generated by orval üç∫
 * Do not edit manually. Run "pnpm run generate-client" instead.
 * Airbyte Cloud Configuration API
 * Airbyte Cloud Configuration API
[https://airbyte.io](https://airbyte.io).

This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.

Here are some conventions that this API follows:
* All endpoints are http POST methods.
* All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params.
* The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`.
* For all `update` methods, the whole object must be passed in, even the fields that did not change.

Change Management:
* The major version of the API endpoint can be determined / specified in the URL `localhost:8080/v1/connections/create`
* Minor version bumps will be invisible to the end user. The user cannot specify minor versions in requests.
* All backwards incompatible changes will happen in major version bumps. We will not make backwards incompatible changes in minor version bumps. Examples of non-breaking changes (includes but not limited to...):
  * Adding fields to request or response bodies.
  * Adding new HTTP endpoints.

 * OpenAPI spec version: 1.0.0
 */
import type {
  HealthCheckRead,
  UserRead,
  UserCreate,
  UserReadList,
  UserIdRequestBody,
  UserAuthIdRequestBody,
  UserEmailRequestBody,
  UserUpdate,
  CloudWorkspaceRead,
  CloudWorkspaceCreate,
  CloudWorkspaceReadList,
  WorkspaceIdList,
  TimeWindowRequestBody,
  WorkspaceIdRequestBody,
  CloudWorkspaceUpdate,
  CloudWorkspaceUsageRead,
  CloudWorkspaceUsageRequestBody,
  PermissionRead,
  PermissionCreate,
  PermissionReadList,
  PermissionIdRequestBody,
  PermissionUpdate,
  PermissionCheckRead,
  PermissionCheckRequest,
  StripeCheckoutSessionRead,
  StripeCheckoutSessionCreate,
  StripeCheckoutSessionCompletedEvent,
  PermissionedCloudWorkspaceCreate,
  WorkspaceUserInviteWithSignInLink,
  ResendUserInviteWithSignInLink,
  WorkspaceRevokeUser,
  WorkspaceGetDbtJobsResponse,
  WorkspaceGetDbtJobsRequest,
  WorkspaceFreeConnectorProgramInfoResponse,
  WorkspaceUserReadList,
} from "./CloudApi.schemas";
import { cloudApiCall } from "../apis";

// eslint-disable-next-line
type SecondParameter<T extends (...args: any) => any> = T extends (config: any, args: infer P) => any ? P : never;

/**
 * @summary Health Check
 */
export const getHealthCheck = (options: SecondParameter<typeof cloudApiCall>) => {
  return cloudApiCall<HealthCheckRead>({ url: `/v1/health`, method: "get" }, options);
};

/**
 * @summary Creates a user (this is the low-level route that does not handle workspace and permissions, see the web_backend route instead)
 */
export const createUser = (userCreate: UserCreate, options: SecondParameter<typeof cloudApiCall>) => {
  return cloudApiCall<UserRead>(
    { url: `/v1/users/create`, method: "post", headers: { "Content-Type": "application/json" }, data: userCreate },
    options
  );
};

/**
 * @summary Lists users
 */
export const listUsers = (options: SecondParameter<typeof cloudApiCall>) => {
  return cloudApiCall<UserReadList>({ url: `/v1/users/list`, method: "post" }, options);
};

/**
 * @summary Find user by ID
 */
export const getUser = (userIdRequestBody: UserIdRequestBody, options: SecondParameter<typeof cloudApiCall>) => {
  return cloudApiCall<UserRead>(
    { url: `/v1/users/get`, method: "post", headers: { "Content-Type": "application/json" }, data: userIdRequestBody },
    options
  );
};

/**
 * @summary Find user by auth id
 */
export const getUserByAuthId = (
  userAuthIdRequestBody: UserAuthIdRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<UserRead>(
    {
      url: `/v1/users/get_by_auth_id`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: userAuthIdRequestBody,
    },
    options
  );
};

/**
 * @summary Find user by email
 */
export const getUserByEmail = (
  userEmailRequestBody: UserEmailRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<UserRead>(
    {
      url: `/v1/users/get_by_email`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: userEmailRequestBody,
    },
    options
  );
};

/**
 * @summary Update user state
 */
export const updateUser = (userUpdate: UserUpdate, options: SecondParameter<typeof cloudApiCall>) => {
  return cloudApiCall<UserRead>(
    { url: `/v1/users/update`, method: "post", headers: { "Content-Type": "application/json" }, data: userUpdate },
    options
  );
};

/**
 * @summary Deletes a user (this is the low-level route that does not handle workspaces, see the web_backend routes instead as this may result in orphaned workspaces)
 */
export const deleteUser = (userIdRequestBody: UserIdRequestBody, options: SecondParameter<typeof cloudApiCall>) => {
  return cloudApiCall<void>(
    {
      url: `/v1/users/delete`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: userIdRequestBody,
    },
    options
  );
};

/**
 * @summary Creates a cloud workspace
 */
export const createCloudWorkspace = (
  cloudWorkspaceCreate: CloudWorkspaceCreate,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<CloudWorkspaceRead>(
    {
      url: `/v1/cloud_workspaces/create`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: cloudWorkspaceCreate,
    },
    options
  );
};

/**
 * @summary Lists workspaces, excluding credit balance information as it is expensive to retrieve for every workspace.
 */
export const listWorkspaces = (options: SecondParameter<typeof cloudApiCall>) => {
  return cloudApiCall<CloudWorkspaceReadList>({ url: `/v1/cloud_workspaces/list`, method: "post" }, options);
};

/**
 * @summary Lists workspaces with the most recently running jobs within the given time window
 */
export const listWorkspacesByMostRecentlyRunningJobs = (
  timeWindowRequestBody: TimeWindowRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<WorkspaceIdList>(
    {
      url: `/v1/cloud_workspaces/list_workspaces_by_most_recently_running_jobs`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: timeWindowRequestBody,
    },
    options
  );
};

/**
 * @summary Find cloud workspace by ID
 */
export const getCloudWorkspace = (
  workspaceIdRequestBody: WorkspaceIdRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<CloudWorkspaceRead>(
    {
      url: `/v1/cloud_workspaces/get`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: workspaceIdRequestBody,
    },
    options
  );
};

/**
 * @summary Updates a cloud workspace
 */
export const updateCloudWorkspace = (
  cloudWorkspaceUpdate: CloudWorkspaceUpdate,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<CloudWorkspaceRead>(
    {
      url: `/v1/cloud_workspaces/update`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: cloudWorkspaceUpdate,
    },
    options
  );
};

/**
 * @summary Deletes a cloud workspace (this is the low-level route that does not handle Airbyte workspace, see the web_backend route instead)
 */
export const deleteCloudWorkspace = (
  workspaceIdRequestBody: WorkspaceIdRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<void>(
    {
      url: `/v1/cloud_workspaces/delete`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: workspaceIdRequestBody,
    },
    options
  );
};

/**
 * @summary Get usage for a workspace.
 */
export const getCloudWorkspaceUsage = (
  cloudWorkspaceUsageRequestBody: CloudWorkspaceUsageRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<CloudWorkspaceUsageRead>(
    {
      url: `/v1/cloud_workspaces/get_usage`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: cloudWorkspaceUsageRequestBody,
    },
    options
  );
};

/**
 * @summary Creates a permission ressource
 */
export const createPermission = (permissionCreate: PermissionCreate, options: SecondParameter<typeof cloudApiCall>) => {
  return cloudApiCall<PermissionRead>(
    {
      url: `/v1/permissions/create`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: permissionCreate,
    },
    options
  );
};

/**
 * @summary List all permissions
 */
export const listPermissions = (options: SecondParameter<typeof cloudApiCall>) => {
  return cloudApiCall<PermissionReadList>({ url: `/v1/permissions/list`, method: "post" }, options);
};

/**
 * @summary Find a permission ressource by ID
 */
export const getPermission = (
  permissionIdRequestBody: PermissionIdRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<PermissionRead>(
    {
      url: `/v1/permissions/get`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: permissionIdRequestBody,
    },
    options
  );
};

/**
 * @summary Updates a permission ressource
 */
export const updatePermission = (permissionUpdate: PermissionUpdate, options: SecondParameter<typeof cloudApiCall>) => {
  return cloudApiCall<PermissionRead>(
    {
      url: `/v1/permissions/update`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: permissionUpdate,
    },
    options
  );
};

/**
 * @summary Deletes a permission ressource
 */
export const deletePermission = (
  permissionIdRequestBody: PermissionIdRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<void>(
    {
      url: `/v1/permissions/delete`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: permissionIdRequestBody,
    },
    options
  );
};

/**
 * @summary Check permissions for user
 */
export const checkPermissions = (
  permissionCheckRequest: PermissionCheckRequest,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<PermissionCheckRead>(
    {
      url: `/v1/permissions/check`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: permissionCheckRequest,
    },
    options
  );
};

/**
 * @summary Creates a Stripe Checkout session for the user and workspace, returning the Stripe URL that the user should be redirected to.
 */
export const createStripeCheckoutSession = (
  stripeCheckoutSessionCreate: StripeCheckoutSessionCreate,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<StripeCheckoutSessionRead>(
    {
      url: `/v1/stripe/create_checkout_session`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: stripeCheckoutSessionCreate,
    },
    options
  );
};

/**
 * @summary Handle Stripe Checkout Completed event by adding credits to customer in Orb
 */
export const stripeCheckoutSessionCompleted = (
  stripeCheckoutSessionCompletedEvent: StripeCheckoutSessionCompletedEvent,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<void>(
    {
      url: `/v1/stripe/complete_checkout_session`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: stripeCheckoutSessionCompletedEvent,
    },
    options
  );
};

/**
 * @summary Creates a user, cloud workspace, permissions, and airbyte workspace in a single API call
 */
export const webBackendCreateUser = (userCreate: UserCreate, options: SecondParameter<typeof cloudApiCall>) => {
  return cloudApiCall<UserRead>(
    {
      url: `/v1/web_backend/users/create`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: userCreate,
    },
    options
  );
};

/**
 * @summary Deletes a user, their owned cloud workspace and associated airbyte workspace in a single API call
 */
export const webBackendDeleteUser = (
  userIdRequestBody: UserIdRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<void>(
    {
      url: `/v1/web_backend/users/delete`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: userIdRequestBody,
    },
    options
  );
};

/**
 * @summary Revokes a user's session token.
 */
export const webBackendRevokeUserSession = (
  userIdRequestBody: UserIdRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<void>(
    {
      url: `/v1/web_backend/users/revoke_user_session`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: userIdRequestBody,
    },
    options
  );
};

/**
 * @summary Creates a cloud workspace, a workspace, and sets ownership permissions for the creator user
 */
export const webBackendCreatePermissionedCloudWorkspace = (
  permissionedCloudWorkspaceCreate: PermissionedCloudWorkspaceCreate,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<CloudWorkspaceRead>(
    {
      url: `/v1/web_backend/permissioned_cloud_workspace/create`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: permissionedCloudWorkspaceCreate,
    },
    options
  );
};

/**
 * @summary Invites a user to join a workspace with a passwordless sign-in link.
 */
export const webBackendInviteUserToWorkspaceWithSignInLink = (
  workspaceUserInviteWithSignInLink: WorkspaceUserInviteWithSignInLink,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<PermissionRead>(
    {
      url: `/v1/web_backend/cloud_workspaces/invite_with_signin_link`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: workspaceUserInviteWithSignInLink,
    },
    options
  );
};

/**
 * @summary Resend an email with a signin link to a user who previously have been invited to join a workspace.
 */
export const webBackendResendWithSigninLink = (
  resendUserInviteWithSignInLink: ResendUserInviteWithSignInLink,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<void>(
    {
      url: `/v1/web_backend/cloud_workspaces/resend_with_signin_link`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: resendUserInviteWithSignInLink,
    },
    options
  );
};

/**
 * @summary Deletes a cloud workspace and associated airbyte workspace in a single API call.
 */
export const webBackendDeleteCloudWorkspace = (
  workspaceIdRequestBody: WorkspaceIdRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<void>(
    {
      url: `/v1/web_backend/cloud_workspaces/delete`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: workspaceIdRequestBody,
    },
    options
  );
};

/**
 * @summary Revokes a user's workspace access. The calling user must have editor permission on the workspace in question. To keep things simple, a user cannot remove themselves from a workspace.
 */
export const webBackendRevokeUserFromWorkspace = (
  workspaceRevokeUser: WorkspaceRevokeUser,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<void>(
    {
      url: `/v1/web_backend/cloud_workspaces/revoke_user`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: workspaceRevokeUser,
    },
    options
  );
};

/**
 * @summary Calls the dbt Cloud `List Accounts` and `List jobs` APIs to get the list of available jobs for the dbt auth token associated with the requested workspace config.
 */
export const webBackendGetAvailableDbtJobsForWorkspace = (
  workspaceGetDbtJobsRequest: WorkspaceGetDbtJobsRequest,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<WorkspaceGetDbtJobsResponse>(
    {
      url: `/v1/web_backend/cloud_workspaces/get_available_dbt_jobs`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: workspaceGetDbtJobsRequest,
    },
    options
  );
};

/**
 * @summary Return a summary of Free Connector Program info for the indicated Cloud Workspace
 */
export const webBackendGetFreeConnectorProgramInfoForWorkspace = (
  workspaceIdRequestBody: WorkspaceIdRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<WorkspaceFreeConnectorProgramInfoResponse>(
    {
      url: `/v1/web_backend/cloud_workspaces/free_connector_program_info`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: workspaceIdRequestBody,
    },
    options
  );
};

/**
 * @summary List permissions a user has access to
 */
export const webBackendListPermissionsByUser = (
  userIdRequestBody: UserIdRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<PermissionReadList>(
    {
      url: `/v1/web_backend/permissions/list_by_user`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: userIdRequestBody,
    },
    options
  );
};

/**
 * @summary List cloud workspaces owned by a user
 */
export const webBackendListWorkspacesOwnedByUser = (
  userIdRequestBody: UserIdRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<CloudWorkspaceReadList>(
    {
      url: `/v1/web_backend/permissions/list_workspaces_owned_by_user`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: userIdRequestBody,
    },
    options
  );
};

/**
 * @summary List cloud workspaces a user has access to
 */
export const webBackendListWorkspacesByUser = (
  userIdRequestBody: UserIdRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<CloudWorkspaceReadList>(
    {
      url: `/v1/web_backend/permissions/list_workspaces_by_user`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: userIdRequestBody,
    },
    options
  );
};

/**
 * @summary List users that have access to a cloud workspace
 */
export const webBackendListUsersByWorkspace = (
  workspaceIdRequestBody: WorkspaceIdRequestBody,
  options: SecondParameter<typeof cloudApiCall>
) => {
  return cloudApiCall<WorkspaceUserReadList>(
    {
      url: `/v1/web_backend/permissions/list_users_by_workspace`,
      method: "post",
      headers: { "Content-Type": "application/json" },
      data: workspaceIdRequestBody,
    },
    options
  );
};

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export type GetHealthCheckResult = NonNullable<Awaited<ReturnType<typeof getHealthCheck>>>;
export type CreateUserResult = NonNullable<Awaited<ReturnType<typeof createUser>>>;
export type ListUsersResult = NonNullable<Awaited<ReturnType<typeof listUsers>>>;
export type GetUserResult = NonNullable<Awaited<ReturnType<typeof getUser>>>;
export type GetUserByAuthIdResult = NonNullable<Awaited<ReturnType<typeof getUserByAuthId>>>;
export type GetUserByEmailResult = NonNullable<Awaited<ReturnType<typeof getUserByEmail>>>;
export type UpdateUserResult = NonNullable<Awaited<ReturnType<typeof updateUser>>>;
export type DeleteUserResult = NonNullable<Awaited<ReturnType<typeof deleteUser>>>;
export type CreateCloudWorkspaceResult = NonNullable<Awaited<ReturnType<typeof createCloudWorkspace>>>;
export type ListWorkspacesResult = NonNullable<Awaited<ReturnType<typeof listWorkspaces>>>;
export type ListWorkspacesByMostRecentlyRunningJobsResult = NonNullable<
  Awaited<ReturnType<typeof listWorkspacesByMostRecentlyRunningJobs>>
>;
export type GetCloudWorkspaceResult = NonNullable<Awaited<ReturnType<typeof getCloudWorkspace>>>;
export type UpdateCloudWorkspaceResult = NonNullable<Awaited<ReturnType<typeof updateCloudWorkspace>>>;
export type DeleteCloudWorkspaceResult = NonNullable<Awaited<ReturnType<typeof deleteCloudWorkspace>>>;
export type GetCloudWorkspaceUsageResult = NonNullable<Awaited<ReturnType<typeof getCloudWorkspaceUsage>>>;
export type CreatePermissionResult = NonNullable<Awaited<ReturnType<typeof createPermission>>>;
export type ListPermissionsResult = NonNullable<Awaited<ReturnType<typeof listPermissions>>>;
export type GetPermissionResult = NonNullable<Awaited<ReturnType<typeof getPermission>>>;
export type UpdatePermissionResult = NonNullable<Awaited<ReturnType<typeof updatePermission>>>;
export type DeletePermissionResult = NonNullable<Awaited<ReturnType<typeof deletePermission>>>;
export type CheckPermissionsResult = NonNullable<Awaited<ReturnType<typeof checkPermissions>>>;
export type CreateStripeCheckoutSessionResult = NonNullable<Awaited<ReturnType<typeof createStripeCheckoutSession>>>;
export type StripeCheckoutSessionCompletedResult = NonNullable<
  Awaited<ReturnType<typeof stripeCheckoutSessionCompleted>>
>;
export type WebBackendCreateUserResult = NonNullable<Awaited<ReturnType<typeof webBackendCreateUser>>>;
export type WebBackendDeleteUserResult = NonNullable<Awaited<ReturnType<typeof webBackendDeleteUser>>>;
export type WebBackendRevokeUserSessionResult = NonNullable<Awaited<ReturnType<typeof webBackendRevokeUserSession>>>;
export type WebBackendCreatePermissionedCloudWorkspaceResult = NonNullable<
  Awaited<ReturnType<typeof webBackendCreatePermissionedCloudWorkspace>>
>;
export type WebBackendInviteUserToWorkspaceWithSignInLinkResult = NonNullable<
  Awaited<ReturnType<typeof webBackendInviteUserToWorkspaceWithSignInLink>>
>;
export type WebBackendResendWithSigninLinkResult = NonNullable<
  Awaited<ReturnType<typeof webBackendResendWithSigninLink>>
>;
export type WebBackendDeleteCloudWorkspaceResult = NonNullable<
  Awaited<ReturnType<typeof webBackendDeleteCloudWorkspace>>
>;
export type WebBackendRevokeUserFromWorkspaceResult = NonNullable<
  Awaited<ReturnType<typeof webBackendRevokeUserFromWorkspace>>
>;
export type WebBackendGetAvailableDbtJobsForWorkspaceResult = NonNullable<
  Awaited<ReturnType<typeof webBackendGetAvailableDbtJobsForWorkspace>>
>;
export type WebBackendGetFreeConnectorProgramInfoForWorkspaceResult = NonNullable<
  Awaited<ReturnType<typeof webBackendGetFreeConnectorProgramInfoForWorkspace>>
>;
export type WebBackendListPermissionsByUserResult = NonNullable<
  Awaited<ReturnType<typeof webBackendListPermissionsByUser>>
>;
export type WebBackendListWorkspacesOwnedByUserResult = NonNullable<
  Awaited<ReturnType<typeof webBackendListWorkspacesOwnedByUser>>
>;
export type WebBackendListWorkspacesByUserResult = NonNullable<
  Awaited<ReturnType<typeof webBackendListWorkspacesByUser>>
>;
export type WebBackendListUsersByWorkspaceResult = NonNullable<
  Awaited<ReturnType<typeof webBackendListUsersByWorkspace>>
>;
