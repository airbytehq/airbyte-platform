/*
 * Copyright (c) 2020-2025 Airbyte, Inc., all rights reserved.
 */

package io.airbyte.commons.text

// Generated by Claude Code
private val lowerCamelPattern = "([A-Z])".toRegex()
private val lowerHyphenPattern = "-([a-z])".toRegex()
private val lowerUnderscorePattern = "_([a-z])".toRegex()

/**
 * Converts a string in lower-hyphen-case format to UpperCamelCase format.
 *
 * @return the converted string in UpperCamelCase format
 */
fun String.lowerHyphenToUpperCamel(): String =
  this
    .replace(lowerHyphenPattern) { matchResult ->
      matchResult.groupValues[1].uppercase()
    }.replaceFirstChar { it.uppercase() }

/**
 * Converts a string in lowerCamelCase format to lower-hyphen-case format.
 *
 * This method identifies uppercase letters in the input string and prefixes
 * them with a hyphen while converting them to lowercase. Useful for converting
 * naming conventions between formats such as code variables and file names.
 *
 * @return the converted string in lower-hyphen-case format
 */
fun String.lowerCamelToLowerHyphen(): String =
  this.replace(lowerCamelPattern) { matchResult ->
    "-${matchResult.groupValues[1].lowercase()}"
  }

/**
 * Converts a string from lower_underscore_case to lowerCamelCase.
 * Each underscore and the immediately following lowercase character
 * are replaced with the corresponding uppercase character, except for the first word.
 *
 * @return A string converted to lowerCamelCase format from lower_underscore_case.
 */
fun String.lowerUnderscoreToLowerCamel(): String =
  this.replace(lowerUnderscorePattern) { matchResult ->
    matchResult.groupValues[1].uppercase()
  }
