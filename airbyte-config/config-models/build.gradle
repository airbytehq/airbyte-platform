import org.jsonschema2pojo.SourceType

plugins {
    id "io.airbyte.gradle.jvm.lib"
    id "io.airbyte.gradle.publish"
    id "com.github.eirnym.js2p"
}

dependencies {
    annotationProcessor libs.bundles.micronaut.annotation.processor
    api libs.bundles.micronaut.annotation

    implementation(platform("com.fasterxml.jackson:jackson-bom:2.13.0"))
    implementation libs.bundles.jackson
    implementation libs.spotbugs.annotations
    implementation libs.guava
    compileOnly libs.lombok
    annotationProcessor libs.lombok
    implementation libs.google.cloud.storage
    implementation libs.aws.java.sdk.s3
    implementation libs.aws.java.sdk.sts
    implementation libs.s3
    implementation libs.sts
    implementation libs.bundles.apache

    compileOnly libs.lombok
    annotationProcessor libs.lombok

    implementation project(':airbyte-json-validation')
    implementation libs.airbyte.protocol
    implementation libs.commons.io
    implementation project(':airbyte-commons')

    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok
    testRuntimeOnly libs.junit.jupiter.engine
    testImplementation libs.bundles.junit
    testImplementation libs.assertj.core
    testImplementation libs.junit.pioneer
}

jsonSchema2Pojo {
    sourceType = SourceType.YAMLSCHEMA
    source = files("${sourceSets.main.output.resourcesDir}/types")
    targetDirectory = new File(project.buildDir, 'generated/src/gen/java/')

    targetPackage = 'io.airbyte.config'
    useLongIntegers = true

    removeOldOutput = true

    generateBuilders = true
    includeConstructors = false
    includeSetters = true
    serializable = true
}

test {
    useJUnitPlatform {
        excludeTags 'log4j2-config', 'logger-client'
    }
}

tasks.register("log4j2IntegrationTest", Test) {
    useJUnitPlatform {
        includeTags 'log4j2-config'
    }
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.register("logClientsIntegrationTest", Test) {
    useJUnitPlatform {
        includeTags 'logger-client'
    }
    testLogging {
        events "passed", "skipped", "failed"
    }
}
