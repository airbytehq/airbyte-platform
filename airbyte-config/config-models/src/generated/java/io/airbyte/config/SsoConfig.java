/*
 * Copyright (c) 2020-2025 Airbyte, Inc., all rights reserved.
 */

package io.airbyte.config;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.annotation.Generated;
import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

/**
 * SsoConfig
 * <p>
 * SSO Configuration for an Organization
 *
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
  "ssoConfigId",
  "organizationId",
  "keycloakRealm",
  "status"
})
@Generated(value = "Generated by jsonSchema2Pojo")
public class SsoConfig implements Serializable {

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("ssoConfigId")
  private UUID ssoConfigId;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("organizationId")
  private UUID organizationId;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("keycloakRealm")
  private String keycloakRealm;
  /**
   * Status of the SSO configuration
   *
   */
  @JsonProperty("status")
  private SsoConfigStatus status = SsoConfigStatus.ACTIVE;
  @JsonIgnore
  private Map<String, Object> additionalProperties = new HashMap<String, Object>();
  private final static long serialVersionUID = -8134827915026802772L;

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("ssoConfigId")
  public UUID getSsoConfigId() {
    return ssoConfigId;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("ssoConfigId")
  public void setSsoConfigId(UUID ssoConfigId) {
    this.ssoConfigId = ssoConfigId;
  }

  public SsoConfig withSsoConfigId(UUID ssoConfigId) {
    this.ssoConfigId = ssoConfigId;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("organizationId")
  public UUID getOrganizationId() {
    return organizationId;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("organizationId")
  public void setOrganizationId(UUID organizationId) {
    this.organizationId = organizationId;
  }

  public SsoConfig withOrganizationId(UUID organizationId) {
    this.organizationId = organizationId;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("keycloakRealm")
  public String getKeycloakRealm() {
    return keycloakRealm;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("keycloakRealm")
  public void setKeycloakRealm(String keycloakRealm) {
    this.keycloakRealm = keycloakRealm;
  }

  public SsoConfig withKeycloakRealm(String keycloakRealm) {
    this.keycloakRealm = keycloakRealm;
    return this;
  }

  /**
   * Status of the SSO configuration
   *
   */
  @JsonProperty("status")
  public SsoConfigStatus getStatus() {
    return status;
  }

  /**
   * Status of the SSO configuration
   *
   */
  @JsonProperty("status")
  public void setStatus(SsoConfigStatus status) {
    this.status = status;
  }

  public SsoConfig withStatus(SsoConfigStatus status) {
    this.status = status;
    return this;
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  @JsonAnySetter
  public void setAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
  }

  public SsoConfig withAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
    return this;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(SsoConfig.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
    sb.append("ssoConfigId");
    sb.append('=');
    sb.append(((this.ssoConfigId == null) ? "<null>" : this.ssoConfigId));
    sb.append(',');
    sb.append("organizationId");
    sb.append('=');
    sb.append(((this.organizationId == null) ? "<null>" : this.organizationId));
    sb.append(',');
    sb.append("keycloakRealm");
    sb.append('=');
    sb.append(((this.keycloakRealm == null) ? "<null>" : this.keycloakRealm));
    sb.append(',');
    sb.append("status");
    sb.append('=');
    sb.append(((this.status == null) ? "<null>" : this.status));
    sb.append(',');
    sb.append("additionalProperties");
    sb.append('=');
    sb.append(((this.additionalProperties == null) ? "<null>" : this.additionalProperties));
    sb.append(',');
    if (sb.charAt((sb.length() - 1)) == ',') {
      sb.setCharAt((sb.length() - 1), ']');
    } else {
      sb.append(']');
    }
    return sb.toString();
  }

  @Override
  public int hashCode() {
    int result = 1;
    result = ((result * 31) + ((this.ssoConfigId == null) ? 0 : this.ssoConfigId.hashCode()));
    result = ((result * 31) + ((this.organizationId == null) ? 0 : this.organizationId.hashCode()));
    result = ((result * 31) + ((this.keycloakRealm == null) ? 0 : this.keycloakRealm.hashCode()));
    result = ((result * 31) + ((this.status == null) ? 0 : this.status.hashCode()));
    result = ((result * 31) + ((this.additionalProperties == null) ? 0 : this.additionalProperties.hashCode()));
    return result;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if ((other instanceof SsoConfig) == false) {
      return false;
    }
    SsoConfig rhs = ((SsoConfig) other);
    return ((((((this.ssoConfigId == rhs.ssoConfigId) || ((this.ssoConfigId != null) && this.ssoConfigId.equals(rhs.ssoConfigId)))
        && ((this.organizationId == rhs.organizationId) || ((this.organizationId != null) && this.organizationId.equals(rhs.organizationId))))
        && ((this.keycloakRealm == rhs.keycloakRealm) || ((this.keycloakRealm != null) && this.keycloakRealm.equals(rhs.keycloakRealm))))
        && ((this.status == rhs.status) || ((this.status != null) && this.status.equals(rhs.status))))
        && ((this.additionalProperties == rhs.additionalProperties)
            || ((this.additionalProperties != null) && this.additionalProperties.equals(rhs.additionalProperties))));
  }

}
