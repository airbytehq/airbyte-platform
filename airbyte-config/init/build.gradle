plugins {
    id "io.airbyte.gradle.jvm.lib"
    id "io.airbyte.gradle.docker"
    id "io.airbyte.gradle.publish"
}

dependencies {
    annotationProcessor libs.bundles.micronaut.annotation.processor
    api libs.bundles.micronaut.annotation

    implementation project(':airbyte-commons')
    implementation 'commons-cli:commons-cli:1.4'
    implementation project(':airbyte-config:config-models')
    implementation project(':airbyte-config:config-persistence')
    implementation project(':airbyte-persistence:job-persistence')
    implementation libs.airbyte.protocol
    implementation project(':airbyte-json-validation')
    compileOnly libs.lombok
    annotationProcessor libs.lombok
    implementation libs.micronaut.cache.caffeine
    implementation libs.guava

    testImplementation project(':airbyte-test-utils')
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.1'
    testRuntimeOnly libs.junit.jupiter.engine
    testImplementation libs.bundles.junit
    testImplementation libs.assertj.core
    testImplementation libs.junit.pioneer
    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok
}

airbyte {
    spotless {
        excludes = ["src/main/resources/seed/oss_registry.json"]
    }
    docker {
        imageName = "init"
    }
}

def copyScripts = tasks.register("copyScripts", Copy) {
    from('scripts')
    into 'build/airbyte/docker/bin/scripts'
}

tasks.named("dockerBuildImage") {
    dependsOn copyScripts
}

processResources {
    from("${project.rootDir}/airbyte-connector-builder-resources")
}


