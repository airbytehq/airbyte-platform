# All properties in this file will be available within Micronaut applications following the `airbyte.` prefix.
# For example, the `initial-user` property below will be available as `airbyte.initial-user` within Airbyte Micronaut applications.

# Change this to match your ingress configuration
webapp-url: http://localhost:8000

# Add user details for creation of your instance's initial user.
initial-user:
  email: <your-email@example.com>
  first-name: <your first name>
  last-name: <your last name>
  username: <your username>
  password: <your password>

# Add your Airbyte license key here.
license-key: <your license key>

auth:
  # If you are using SSO, add your identity provider configs here
  identity-providers:
    - type: okta
      domain: <your-account-example.okta.com>
      app-name: <your-app-name>
      client-id: <your-client-id>
      client-secret: <your-client-secret>

global:
  storage:
    type: s3 # s3 | gcs | minio - default | (local)
    storageSecretName: airbyte-config-secrets
    bucket:
      activityPayload: airbyte-storage
      log: airbyte-storage
      state: airbyte-storage
      workloadOutput: airbyte-storage
    s3:
      authenticationType: credentials # credentials | instanceProfile
      accessKeyIdSecretKey: aws-secret-manager-access-key-id
      secretAccessKeySecretKey: aws-secret-manager-secret-access-key
    gcs:
      project: <gcp-project>
      credentialsPath: <gcs-credentials> # this is actually be path to file in mount https://docs.airbyte.com/deploying-airbyte/on-kubernetes-via-helm#external-logs-with-gcs
    minio: # only include this if you are using an external minio deployment, otherwise, you can exclude this section entirely as long as you have the type set to minio
      accessKeyIdSecretKey: minio-secret-manager-access-key-id # set to `minio` in your secrets if using local minio instance
      secretAccessKeySecretKey: minio-secret-manager-secret-access-key # set to `minio123` in your secrets if using local minio instance
      endpoint: <minio-endpoint> # set to http://airbyte-minio-svc:9000 if using local minio instance

  secretsManager:
    type: awsSecretManager # awsSecretManager | googleSecretManager | vault
    storageSecretName: airbyte-config-secrets
    awsSecretManager:
      region: <aws-region>
      authenticationType: credentials # credentials | instanceProfile
      accessKeyIdSecretKey: aws-secret-manager-access-key-id
      secretAccessKeySecretKey: aws-secret-manager-secret-access-key
      tags:
        - key: team
          value: deployment
        - key: business-unit
          value: engineering
    googleSecretManager:
      authenticationType: credentials
      project: <gcp-project>
      credentialsSecretKey: gsm-credentials # the credentialsJson should be in the kube secret
    vault:
      address: <vault-address>
      prefix: <vault-prefix>
      token: vault-auth-token
