---
openapi: "3.1.0"
info:
  title: "Destinations"
  version: "1.0.0"
  description: "Programmatically control Airbyte Cloud, OSS & Enterprise."
servers:
- url: "https://api.airbyte.com/v1"
  description: "Airbyte API v1"
paths:
  /destinations:
    get:
      tags:
      - "public_destinations"
      - "public"
      - "Destinations"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DestinationsResponse"
          description: "Successful operation"
        "403":
          description: "Not allowed"
        "404":
          description: "Not found"
      operationId: "listDestinations"
      x-speakeasy-alias: "listDestinations"
      x-speakeasy-group: "Destinations"
      summary: "List destinations"
      parameters:
      - name: "workspaceIds"
        description: "The UUIDs of the workspaces you wish to list destinations for.\
          \ Empty list will retrieve all allowed workspaces."
        schema:
          type: "array"
          items:
            format: "uuid"
            type: "string"
        in: "query"
        required: false
      - name: "includeDeleted"
        description: "Include deleted destinations in the returned results."
        schema:
          default: false
          type: "boolean"
        in: "query"
        required: false
      - name: "limit"
        description: "Set the limit on the number of destinations returned. The default\
          \ is 20."
        schema:
          format: "int32"
          type: "integer"
          minimum: 1
          maximum: 100
          default: 20
        in: "query"
      - name: "offset"
        description: "Set the offset to start at when returning destinations. The\
          \ default is 0"
        schema:
          type: "integer"
          format: "int32"
          minimum: 0
          default: 0
        in: "query"
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DestinationCreateRequest"
            examples:
              Destination Creation Request Example:
                value:
                  name: "Postgres"
                  workspaceId: "2155ae5a-de39-4808-af6a-16fe7b8b4ed2"
                  configuration:
                    airbyte_destination_name: "postgres"
                    port: 5432
                    schema: "public"
                    ssl_mode:
                      mode: "prefer"
                    tunnel_method:
                      tunnel_method: "NO_TUNNEL"
                    host: "localhost"
                    database: "postgres"
                    username: "postgres"
                    password: "test"
      tags:
      - "public_destinations"
      - "public"
      - "Destinations"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DestinationResponse"
              examples:
                Destination Creation Response Example:
                  value:
                    destinationId: "af0c3c67-aa61-419f-8922-95b0bf840e86"
          description: "Successful operation"
        "400":
          description: "Invalid data"
        "403":
          description: "Not allowed"
        "404":
          description: "Not found"
      operationId: "createDestination"
      x-speakeasy-alias: "createDestination"
      x-speakeasy-group: "Destinations"
      summary: "Create a destination"
      description: "Creates a destination given a name, workspace id, and a json blob\
        \ containing the configuration for the source."
  /destinations/{destinationId}:
    get:
      tags:
      - "public_destinations"
      - "public"
      - "Destinations"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DestinationResponse"
              examples:
                Destination Get Response Example:
                  value:
                    destinationId: "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
                    name: "My Destination"
                    sourceType: "postgres"
                    workspaceId: "744cc0ed-7f05-4949-9e60-2a814f90c035"
                    configuration:
                      conversion_window_days: 14
                      customer_id: "1234567890"
                      start_date: 1672531200000
                      end_date: 1704067200000
          description: "Get a Destination by the id in the path."
        "403":
          description: "Not allowed"
        "404":
          description: "Not found"
      operationId: "getDestination"
      x-speakeasy-alias: "getDestination"
      x-speakeasy-group: "Destinations"
      summary: "Get Destination details"
      parameters:
      - in: "query"
        name: "includeSecretCoordinates"
        schema:
          type: "boolean"
        required: false
        description: "Rather than return *** for secret properties include the secret\
          \ coordinate information"
    delete:
      tags:
      - "public_destinations"
      - "public"
      - "Destinations"
      responses:
        "204":
          description: "The resource was deleted successfully"
        "403":
          description: "Not allowed"
        "404":
          description: "Not found"
      operationId: "deleteDestination"
      x-speakeasy-alias: "deleteDestination"
      x-speakeasy-group: "Destinations"
      summary: "Delete a Destination"
    patch:
      tags:
      - "public_destinations"
      - "public"
      - "Destinations"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DestinationPatchRequest"
            examples:
              Destination Update Request Example:
                value:
                  configuration:
                    conversion_window_days: 14
                    customer_id: "1234567890"
                    start_date: 1672531200000
                    end_date: 1704067200000
                  name: "My Destination"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DestinationResponse"
              examples:
                Destination Update Response Example:
                  value:
                    destinationId: "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
                    name: "running"
                    sourceType: "postgres"
                    workspaceId: "744cc0ed-7f05-4949-9e60-2a814f90c035"
                    configuration:
                      conversion_window_days: 14
                      customer_id: "1234567890"
                      start_date: 1672531200000
                      end_date: 1704067200000
          description: "Update a Destination"
        "403":
          description: "Not allowed"
        "404":
          description: "Not found"
      operationId: "patchDestination"
      x-speakeasy-alias: "patchDestination"
      x-speakeasy-group: "Destinations"
      summary: "Update a Destination"
    put:
      tags:
      - "public_destinations"
      - "public"
      - "Destinations"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DestinationPutRequest"
            examples:
              Destination Update Request Example:
                value:
                  configuration:
                    conversion_window_days: 14
                    customer_id: "1234567890"
                    start_date: 1672531200000
                    end_date: 1704067200000
                  name: "My Destination"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DestinationResponse"
              examples:
                Destination Update Response Example:
                  value:
                    destinationId: "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
                    name: "running"
                    sourceType: "postgres"
                    workspaceId: "744cc0ed-7f05-4949-9e60-2a814f90c035"
                    configuration:
                      conversion_window_days: 14
                      customer_id: "1234567890"
                      start_date: 1672531200000
                      end_date: 1704067200000
          description: "Update a Destination and fully overwrite it"
        "403":
          description: "Not allowed"
        "404":
          description: "Not found"
      operationId: "putDestination"
      x-speakeasy-alias: "putDestination"
      x-speakeasy-group: "Destinations"
      summary: "Update a Destination and fully overwrite it"
      x-speakeasy-entity-operation: "Destination#update"
    parameters:
    - name: "destinationId"
      schema:
        format: "UUID"
        type: "string"
      in: "path"
      required: true
components:
  responses:
    InitiateOauthResponse:
      content:
        application/json: {}
      description: "Response from the initiate OAuth call should be an object with\
        \ a single property which will be the `redirect_url`. If a user is redirected\
        \ to this URL, they'll be prompted by the identity provider to authenticate."
      x-speakeasy-component: true
  schemas:
    WorkspaceId:
      type: "string"
      format: "uuid"
      x-speakeasy-component: true
    DeclarativeManifest:
      x-speakeasy-component: true
      x-speakeasy-type-override: "any"
      x-speakeasy-terraform-custom-type:
        imports:
        - "github.com/hashicorp/terraform-plugin-framework-jsontypes/jsontypes"
        schemaType: "jsontypes.NormalizedType{}"
        valueType: "jsontypes.Normalized"
      description: "Low code CDK manifest JSON object"
      type: "object"
    ManifestVersion:
      x-speakeasy-component: true
      type: "integer"
      format: "int64"
    SourceDefinitionSpecification:
      description: "The specification for what values are required to configure the\
        \ sourceDefinition."
      type: "object"
      example:
        user:
          type: "string"
      x-speakeasy-component: true
    NamespaceDefinitionType:
      type: "string"
      description: "Method used for computing final namespace in destination"
      enum:
      - "source"
      - "destination"
      - "customformat"
      x-speakeasy-component: true
    TagId:
      type: "string"
      format: "uuid"
      x-speakeasy-component: true
    Tag:
      description: "A tag that can be associated with a connection. Useful for grouping\
        \ and organizing connections in a workspace."
      type: "object"
      x-speakeasy-component: true
      required:
      - "tagId"
      - "workspaceId"
      - "name"
      - "color"
      properties:
        tagId:
          $ref: "#/components/schemas/TagId"
        workspaceId:
          $ref: "#/components/schemas/WorkspaceId"
        name:
          type: "string"
        color:
          type: "string"
    OrganizationId:
      type: "string"
      format: "uuid"
      x-speakeasy-component: true
    PermissionType:
      type: "string"
      description: "Describes what actions/endpoints the permission entitles to"
      enum:
      - "instance_admin"
      - "organization_admin"
      - "organization_editor"
      - "organization_runner"
      - "organization_reader"
      - "organization_member"
      - "workspace_owner"
      - "workspace_admin"
      - "workspace_runner"
      - "workspace_editor"
      - "workspace_reader"
      x-speakeasy-component: true
    PublicPermissionType:
      type: "string"
      description: "Subset of `PermissionType` (removing `instance_admin`), could\
        \ be used in public-api."
      enum:
      - "organization_admin"
      - "organization_editor"
      - "organization_runner"
      - "organization_reader"
      - "organization_member"
      - "workspace_admin"
      - "workspace_editor"
      - "workspace_runner"
      - "workspace_reader"
      x-speakeasy-component: true
    UserId:
      type: "string"
      description: "Internal Airbyte user ID"
      format: "uuid"
      x-speakeasy-component: true
    AuthProvider:
      type: "string"
      description: "Auth Provider"
      default: "airbyte"
      enum:
      - "airbyte"
      - "google_identity_platform"
      - "keycloak"
      x-speakeasy-component: true
    UserStatus:
      type: "string"
      description: "user status"
      enum:
      - "invited"
      - "registered"
      - "disabled"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    SelectedFieldInfo:
      type: "object"
      description: "Path to a field/column/property in a stream to be selected. For\
        \ example, if the field to be selected is a database column called \"foo\"\
        , this will be [\"foo\"]. Use multiple path elements for nested schemas."
      properties:
        fieldPath:
          type: "array"
          items:
            type: "string"
      x-speakeasy-component: true
    StreamMapperType:
      type: "string"
      enum:
      - "hashing"
      - "field-renaming"
      - "row-filtering"
      - "encryption"
      x-speakeasy-component: true
    ConfiguredStreamMapper:
      type: "object"
      required:
      - "type"
      - "mapperConfiguration"
      properties:
        id:
          type: "string"
          format: "uuid"
        type:
          $ref: "#/components/schemas/StreamMapperType"
        mapperConfiguration:
          $ref: "#/components/schemas/MapperConfiguration"
      x-speakeasy-component: true
    MapperConfiguration:
      type: "object"
      description: "The values required to configure the mapper."
      oneOf:
      - $ref: "#/components/schemas/HashingMapperConfiguration"
      - $ref: "#/components/schemas/FieldRenamingMapperConfiguration"
      - $ref: "#/components/schemas/RowFilteringMapperConfiguration"
      - $ref: "#/components/schemas/EncryptionMapperConfiguration"
      x-speakeasy-component: true
    HashingMapperConfiguration:
      title: "Hashing"
      type: "object"
      properties:
        fieldNameSuffix:
          type: "string"
          title: "Field name suffix"
          description: "The suffix to append to the field name after hashing."
        method:
          type: "string"
          enum:
          - "MD2"
          - "MD5"
          - "SHA-1"
          - "SHA-224"
          - "SHA-256"
          - "SHA-384"
          - "SHA-512"
          title: "Hashing method"
          description: "The hashing algorithm to use."
        targetField:
          type: "string"
          title: "Original Field Name"
          description: "The name of the field to be hashed."
      required:
      - "fieldNameSuffix"
      - "method"
      - "targetField"
      x-speakeasy-component: true
    FieldRenamingMapperConfiguration:
      title: "Field Renaming"
      type: "object"
      properties:
        newFieldName:
          type: "string"
          title: "New Field Name"
          description: "The new name for the field after renaming."
        originalFieldName:
          type: "string"
          title: "Original Field Name"
          description: "The current name of the field to rename."
      required:
      - "newFieldName"
      - "originalFieldName"
      x-speakeasy-component: true
    RowFilteringOperationType:
      type: "string"
      enum:
      - "EQUAL"
      - "NOT"
      x-speakeasy-component: true
    RowFilteringOperationEqual:
      type: "object"
      title: "EQUAL"
      required:
      - "comparisonValue"
      - "fieldName"
      - "type"
      properties:
        comparisonValue:
          type: "string"
          title: "Comparison Value"
          description: "The value to compare the field against."
        fieldName:
          type: "string"
          title: "Field Name"
          description: "The name of the field to apply the operation on."
        type:
          $ref: "#/components/schemas/RowFilteringOperationType"
      x-speakeasy-component: true
    RowFilteringOperationNot:
      type: "object"
      title: "NOT"
      required:
      - "conditions"
      - "type"
      properties:
        conditions:
          title: "Sub-Conditions (NOT)"
          description: "Conditions to evaluate with the NOT operator."
          minItems: 1
          type: "array"
          items:
            $ref: "#/components/schemas/RowFilteringOperation"
        type:
          $ref: "#/components/schemas/RowFilteringOperationType"
      x-speakeasy-component: true
    RowFilteringOperation:
      type: "object"
      oneOf:
      - $ref: "#/components/schemas/RowFilteringOperationEqual"
      - $ref: "#/components/schemas/RowFilteringOperationNot"
      discriminator:
        propertyName: "type"
        mapping:
          EQUAL: "#/components/schemas/RowFilteringOperationEqual"
          NOT: "#/components/schemas/RowFilteringOperationNot"
      x-speakeasy-component: true
      x-airbyte-circular-ref: true
    RowFilteringMapperConfiguration:
      title: "Row Filtering"
      type: "object"
      properties:
        conditions:
          $ref: "#/components/schemas/RowFilteringOperation"
      required:
      - "conditions"
      x-speakeasy-component: true
    EncryptionMapperAlgorithm:
      type: "string"
      enum:
      - "RSA"
      - "AES"
      x-speakeasy-component: true
    EncryptionMapperConfiguration:
      title: "Encryption"
      type: "object"
      oneOf:
      - $ref: "#/components/schemas/EncryptionMapperRSAConfiguration"
      - $ref: "#/components/schemas/EncryptionMapperAESConfiguration"
      discriminator:
        propertyName: "algorithm"
        mapping:
          RSA: "#/components/schemas/EncryptionMapperRSAConfiguration"
          AES: "#/components/schemas/EncryptionMapperAESConfiguration"
      x-speakeasy-component: true
    EncryptionMapperRSAConfiguration:
      title: "Encryption - RSA"
      type: "object"
      properties:
        algorithm:
          $ref: "#/components/schemas/EncryptionMapperAlgorithm"
        fieldNameSuffix:
          type: "string"
        publicKey:
          type: "string"
        targetField:
          type: "string"
      required:
      - "algorithm"
      - "publicKey"
      - "targetField"
      - "fieldNameSuffix"
      x-speakeasy-component: true
    EncryptionMapperAESConfiguration:
      title: "Encryption - AES"
      type: "object"
      properties:
        algorithm:
          $ref: "#/components/schemas/EncryptionMapperAlgorithm"
        fieldNameSuffix:
          type: "string"
        key:
          type: "string"
          x-speakeasy-param-sensitive: true
        mode:
          type: "string"
          enum:
          - "CBC"
          - "CFB"
          - "OFB"
          - "CTR"
          - "GCM"
          - "ECB"
        padding:
          type: "string"
          enum:
          - "NoPadding"
          - "PKCS5Padding"
        targetField:
          type: "string"
      required:
      - "algorithm"
      - "key"
      - "mode"
      - "padding"
      - "targetField"
      - "fieldNameSuffix"
      x-speakeasy-component: true
    SelectedFields:
      description: "Paths to the fields that will be included in the configured catalog."
      type: "array"
      items:
        $ref: "#/components/schemas/SelectedFieldInfo"
      x-speakeasy-component: true
    ScopedResourceRequirements:
      x-speakeasy-component: true
      description: "actor or actor definition specific resource requirements. if default\
        \ is set, these are the requirements that should be set for ALL jobs run for\
        \ this actor definition. it is overriden by the job type specific configurations.\
        \ if not set, the platform will use defaults. these values will be overriden\
        \ by configuration at the connection level."
      type: "object"
      additionalProperties: false
      properties:
        default:
          $ref: "#/components/schemas/ResourceRequirements"
        jobSpecific:
          type: "array"
          items:
            $ref: "#/components/schemas/JobTypeResourceLimit"
    ActorDefinitionId:
      description: "A unique identifier for an actor definition."
      type: "string"
      format: "uuid"
      x-speakeasy-component: true
    JobTypeResourceLimit:
      x-speakeasy-component: true
      description: "sets resource requirements for a specific job type for an actor\
        \ or actor definition. these values override the default, if both are set."
      type: "object"
      additionalProperties: false
      required:
      - "jobType"
      - "resourceRequirements"
      properties:
        jobType:
          $ref: "#/components/schemas/JobType"
        resourceRequirements:
          $ref: "#/components/schemas/ResourceRequirements"
    JobType:
      x-speakeasy-component: true
      description: "enum that describes the different types of jobs that the platform\
        \ runs."
      type: "string"
      enum:
      - "get_spec"
      - "check_connection"
      - "discover_schema"
      - "sync"
      - "reset_connection"
      - "connection_updater"
      - "replicate"
    ResourceRequirements:
      x-speakeasy-component: true
      description: "optional resource requirements to run workers (blank for unbounded\
        \ allocations)"
      type: "object"
      properties:
        cpu_request:
          type: "string"
        cpu_limit:
          type: "string"
        memory_request:
          type: "string"
        memory_limit:
          type: "string"
        ephemeral_storage_request:
          type: "string"
        ephemeral_storage_limit:
          type: "string"
    OAuthConfiguration:
      description: "The values required to configure OAuth flows. The schema for this\
        \ must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification`\
        \ schema."
      x-speakeasy-component: true
    OAuthInputConfiguration:
      $ref: "#/components/schemas/OAuthConfiguration"
      x-speakeasy-component: true
    NonBreakingChangesPreference:
      enum:
      - "ignore"
      - "disable"
      - "propagate_columns"
      - "propagate_fully"
      type: "string"
      x-speakeasy-component: true
    ApplicationCreate:
      required:
      - "name"
      type: "object"
      properties:
        name:
          type: "string"
      x-speakeasy-component: true
    ApplicationReadList:
      required:
      - "applications"
      type: "object"
      properties:
        applications:
          type: "array"
          items:
            $ref: "#/components/schemas/ApplicationRead"
      x-speakeasy-component: true
    ApplicationRead:
      required:
      - "id"
      - "name"
      - "clientId"
      - "clientSecret"
      - "createdAt"
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        clientId:
          type: "string"
        clientSecret:
          type: "string"
        createdAt:
          type: "integer"
          format: "int64"
      x-speakeasy-component: true
    ApplicationTokenRequestWithGrant:
      required:
      - "client_id"
      - "client_secret"
      - "grant_type"
      type: "object"
      properties:
        client_id:
          type: "string"
        client_secret:
          type: "string"
        grant-type:
          enum:
          - "client_credentials"
      x-speakeasy-component: true
    PublicAccessTokenResponse:
      required:
      - "access_token"
      - "token_type"
      - "expires_in"
      type: "object"
      properties:
        access_token:
          type: "string"
        token_type:
          enum:
          - "Bearer"
        expires_in:
          type: "integer"
          format: "int64"
      x-speakeasy-component: true
    RedirectUrlResponse:
      title: "Root Type for RedirectUrlResponse"
      description: ""
      type: "object"
      properties:
        redirectUrl:
          format: "url"
          type: "string"
      example:
        redirectUrl: "https://example.com"
      x-speakeasy-component: true
    JobResponse:
      title: "Root Type for JobResponse"
      description: "Provides details of a single job."
      required:
      - "jobId"
      - "status"
      - "jobType"
      - "startTime"
      - "connectionId"
      type: "object"
      properties:
        jobId:
          format: "int64"
          type: "integer"
        status:
          $ref: "#/components/schemas/JobStatusEnum"
        jobType:
          $ref: "#/components/schemas/JobTypeEnum"
        startTime:
          type: "string"
        connectionId:
          format: "UUID"
          type: "string"
        lastUpdatedAt:
          type: "string"
        duration:
          description: "Duration of a sync in ISO_8601 format"
          type: "string"
        bytesSynced:
          format: "int64"
          type: "integer"
        rowsSynced:
          format: "int64"
          type: "integer"
      example:
        id: "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
        status: "running"
        jobType: "sync"
        startTime: "2023-03-25T01:30:50Z"
        duration: "PT8H6M12S"
      x-speakeasy-component: true
    JobsResponse:
      title: "Root Type for JobsResponse"
      description: ""
      required:
      - "data"
      type: "object"
      properties:
        previous:
          type: "string"
        next:
          type: "string"
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/JobResponse"
      example:
        next: "https://api.airbyte.com/v1/jobs?limit=5&offset=10"
        previous: "https://api.airbyte.com/v1/jobs?limit=5&offset=0"
        data:
        - id: "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
          status: "running"
          jobType: "sync"
          startTime: "2023-03-25T01:30:50Z"
      x-speakeasy-component: true
    ConnectionCreateRequest:
      required:
      - "sourceId"
      - "destinationId"
      type: "object"
      properties:
        name:
          description: "Optional name of the connection"
          type: "string"
        sourceId:
          format: "uuid"
          type: "string"
        destinationId:
          format: "uuid"
          type: "string"
        configurations:
          $ref: "#/components/schemas/StreamConfigurations"
        schedule:
          $ref: "#/components/schemas/AirbyteApiConnectionSchedule"
        dataResidency:
          deprecated: true
          x-speakeasy-deprecation-message: "We no longer support modifying dataResidency\
            \ on Community and Enterprise connections. All connections will use the\
            \ dataResidency of their associated workspace."
          type: "string"
        namespaceDefinition:
          $ref: "#/components/schemas/NamespaceDefinitionEnum"
        namespaceFormat:
          type: "string"
          description: "Used when namespaceDefinition is 'custom_format'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          default: null
          example: "${SOURCE_NAMESPACE}"
        prefix:
          type: "string"
          description: "Prefix that will be prepended to the name of each stream when\
            \ it is written to the destination (ex. “airbyte_” causes “projects” =>\
            \ “airbyte_projects”)."
          default: ""
        nonBreakingSchemaUpdatesBehavior:
          $ref: "#/components/schemas/NonBreakingSchemaUpdatesBehaviorEnum"
        status:
          $ref: "#/components/schemas/ConnectionStatusEnum"
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/Tag"
      x-speakeasy-entity: "Connection"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    ConnectionPatchRequest:
      type: "object"
      properties:
        name:
          description: "Optional name of the connection"
          type: "string"
        configurations:
          $ref: "#/components/schemas/StreamConfigurations"
        schedule:
          $ref: "#/components/schemas/AirbyteApiConnectionSchedule"
        dataResidency:
          deprecated: true
          x-speakeasy-deprecation-message: "We no longer support modifying dataResidency\
            \ on Community and Enterprise connections. All connections will use the\
            \ dataResidency of their associated workspace."
          type: "string"
        namespaceDefinition:
          $ref: "#/components/schemas/NamespaceDefinitionEnumNoDefault"
        namespaceFormat:
          type: "string"
          description: "Used when namespaceDefinition is 'custom_format'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          default: null
          example: "${SOURCE_NAMESPACE}"
        prefix:
          type: "string"
          description: "Prefix that will be prepended to the name of each stream when\
            \ it is written to the destination (ex. “airbyte_” causes “projects” =>\
            \ “airbyte_projects”)."
        nonBreakingSchemaUpdatesBehavior:
          $ref: "#/components/schemas/NonBreakingSchemaUpdatesBehaviorEnumNoDefault"
        status:
          $ref: "#/components/schemas/ConnectionStatusEnum"
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/Tag"
      x-speakeasy-entity: "Connection"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    JobCreateRequest:
      title: "Root Type for JobCreate"
      description: "Creates a new Job from the configuration provided in the request\
        \ body."
      required:
      - "jobType"
      - "connectionId"
      type: "object"
      properties:
        connectionId:
          format: "UUID"
          type: "string"
        jobType:
          $ref: "#/components/schemas/JobTypeEnum"
      example:
        connectionId: "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
        jobType: "sync"
      x-speakeasy-component: true
    JobStatusEnum:
      enum:
      - "pending"
      - "running"
      - "incomplete"
      - "failed"
      - "succeeded"
      - "cancelled"
      type: "string"
      x-speakeasy-component: true
    JobTypeEnum:
      description: "Enum that describes the different types of jobs that the platform\
        \ runs."
      enum:
      - "sync"
      - "reset"
      - "refresh"
      - "clear"
      type: "string"
      x-speakeasy-component: true
    SourceCreateRequest:
      required:
      - "name"
      - "workspaceId"
      - "configuration"
      type: "object"
      properties:
        name:
          description: "Name of the source e.g. dev-mysql-instance."
          type: "string"
        definitionId:
          description: "The UUID of the connector definition. One of configuration.sourceType\
            \ or definitionId must be provided."
          format: "uuid"
          type: "string"
        workspaceId:
          format: "uuid"
          type: "string"
        configuration:
          $ref: "#/components/schemas/SourceConfiguration"
        secretId:
          description: "Optional secretID obtained through the  OAuth redirect flow."
          type: "string"
        resourceAllocation:
          $ref: "#/components/schemas/ScopedResourceRequirements"
      x-implements: "io.airbyte.api.common.ConfigurableActor"
      x-speakeasy-entity: "Source"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    SourcePutRequest:
      required:
      - "name"
      - "configuration"
      type: "object"
      properties:
        name:
          type: "string"
        configuration:
          $ref: "#/components/schemas/SourceConfiguration"
        resourceAllocation:
          $ref: "#/components/schemas/ScopedResourceRequirements"
      x-implements: "io.airbyte.api.common.ConfigurableActor"
      x-speakeasy-entity: "Source"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    SourcePatchRequest:
      type: "object"
      properties:
        name:
          type: "string"
          example: "My source"
        workspaceId:
          format: "uuid"
          type: "string"
        configuration:
          $ref: "#/components/schemas/SourceConfiguration"
        secretId:
          description: "Optional secretID obtained through the  OAuth redirect flow."
          type: "string"
        resourceAllocation:
          $ref: "#/components/schemas/ScopedResourceRequirements"
      x-implements: "io.airbyte.api.common.ConfigurableActor"
      x-speakeasy-entity: "Source"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    TagCreateRequest:
      required:
      - "name"
      - "color"
      - "workspaceId"
      type: "object"
      properties:
        name:
          type: "string"
        color:
          type: "string"
        workspaceId:
          $ref: "#/components/schemas/WorkspaceId"
      x-speakeasy-entity: "Tag"
      x-speakeasy-component: true
    TagPatchRequest:
      required:
      - "name"
      - "color"
      type: "object"
      properties:
        name:
          type: "string"
        color:
          type: "string"
      x-speakeasy-entity: "Tag"
      x-speakeasy-component: true
    OrganizationOAuthCredentialsRequest:
      title: "Root Type for OrganizationOAuthCredentials"
      description: "POST body for creating/updating organization level OAuth credentials"
      required:
      - "actorType"
      - "name"
      - "configuration"
      type: "object"
      properties:
        actorType:
          $ref: "#/components/schemas/ActorTypeEnum"
        name:
          type: "string"
          description: "The name of the source i.e. google-ads"
        configuration:
          $ref: "#/components/schemas/OAuthCredentialsConfiguration"
      x-speakeasy-component: true
    ConnectionResponse:
      title: "Root Type for ConnectionResponse"
      description: "Provides details of a single connection."
      type: "object"
      required:
      - "connectionId"
      - "name"
      - "sourceId"
      - "destinationId"
      - "workspaceId"
      - "status"
      - "schedule"
      - "configurations"
      - "createdAt"
      - "tags"
      properties:
        connectionId:
          format: "UUID"
          type: "string"
        name:
          type: "string"
        sourceId:
          format: "UUID"
          type: "string"
        destinationId:
          format: "UUID"
          type: "string"
        workspaceId:
          format: "UUID"
          type: "string"
        status:
          $ref: "#/components/schemas/ConnectionStatusEnum"
        schedule:
          $ref: "#/components/schemas/ConnectionScheduleResponse"
        nonBreakingSchemaUpdatesBehavior:
          $ref: "#/components/schemas/NonBreakingSchemaUpdatesBehaviorEnum"
        namespaceDefinition:
          $ref: "#/components/schemas/NamespaceDefinitionEnum"
        namespaceFormat:
          type: "string"
        prefix:
          type: "string"
        configurations:
          $ref: "#/components/schemas/StreamConfigurations"
        createdAt:
          format: "int64"
          type: "integer"
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/Tag"
      x-speakeasy-entity: "Connection"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    AirbyteApiConnectionSchedule:
      description: "schedule for when the the connection should run, per the schedule\
        \ type"
      type: "object"
      required:
      - "scheduleType"
      properties:
        scheduleType:
          $ref: "#/components/schemas/ScheduleTypeEnum"
        cronExpression:
          type: "string"
      x-speakeasy-component: true
    ScheduleTypeEnum:
      type: "string"
      enum:
      - "manual"
      - "cron"
      x-speakeasy-component: true
    ConnectionScheduleResponse:
      description: "schedule for when the the connection should run, per the schedule\
        \ type"
      type: "object"
      required:
      - "scheduleType"
      properties:
        scheduleType:
          $ref: "#/components/schemas/ScheduleTypeWithBasicEnum"
        cronExpression:
          type: "string"
        basicTiming:
          type: "string"
      x-speakeasy-component: true
    ScheduleTypeWithBasicEnum:
      type: "string"
      enum:
      - "manual"
      - "cron"
      - "basic"
      x-speakeasy-component: true
    ConnectionStatusEnum:
      type: "string"
      enum:
      - "active"
      - "inactive"
      - "deprecated"
      x-speakeasy-component: true
    NamespaceDefinitionEnum:
      type: "string"
      description: "Define the location where the data will be stored in the destination"
      enum:
      - "source"
      - "destination"
      - "custom_format"
      default: "destination"
      x-speakeasy-component: true
    NonBreakingSchemaUpdatesBehaviorEnum:
      type: "string"
      description: "Set how Airbyte handles syncs when it detects a non-breaking schema\
        \ change in the source"
      enum:
      - "ignore"
      - "disable_connection"
      - "propagate_columns"
      - "propagate_fully"
      default: "ignore"
      x-speakeasy-component: true
    NamespaceDefinitionEnumNoDefault:
      type: "string"
      description: "Define the location where the data will be stored in the destination"
      enum:
      - "source"
      - "destination"
      - "custom_format"
      x-speakeasy-component: true
    NonBreakingSchemaUpdatesBehaviorEnumNoDefault:
      type: "string"
      description: "Set how Airbyte handles syncs when it detects a non-breaking schema\
        \ change in the source"
      enum:
      - "ignore"
      - "disable_connection"
      - "propagate_columns"
      - "propagate_fully"
      x-speakeasy-component: true
    DestinationResponse:
      title: "Root Type for DestinationResponse"
      description: "Provides details of a single destination."
      type: "object"
      required:
      - "destinationId"
      - "name"
      - "destinationType"
      - "definitionId"
      - "workspaceId"
      - "configuration"
      - "createdAt"
      properties:
        destinationId:
          format: "UUID"
          type: "string"
        name:
          type: "string"
        destinationType:
          type: "string"
        definitionId:
          format: "UUID"
          type: "string"
        workspaceId:
          format: "UUID"
          type: "string"
        configuration:
          $ref: "#/components/schemas/DestinationConfiguration"
        createdAt:
          format: "int64"
          type: "integer"
        resourceAllocation:
          $ref: "#/components/schemas/ScopedResourceRequirements"
      example:
        destinationId: "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
        name: "Analytics Team Postgres"
        destinationType: "postgres"
        workspaceId: "871d9b60-11d1-44cb-8c92-c246d53bf87e"
        definitionId: "321d9b60-11d1-44cb-8c92-c246d53bf98e"
      x-speakeasy-component: true
    SourceResponse:
      title: "Root Type for SourceResponse"
      description: "Provides details of a single source."
      type: "object"
      required:
      - "sourceId"
      - "name"
      - "sourceType"
      - "workspaceId"
      - "configuration"
      - "definitionId"
      - "createdAt"
      properties:
        sourceId:
          format: "UUID"
          type: "string"
        name:
          type: "string"
        sourceType:
          type: "string"
        definitionId:
          format: "UUID"
          type: "string"
        workspaceId:
          format: "UUID"
          type: "string"
        configuration:
          $ref: "#/components/schemas/SourceConfiguration"
        createdAt:
          format: "int64"
          type: "integer"
        resourceAllocation:
          $ref: "#/components/schemas/ScopedResourceRequirements"
      example:
        sourceId: "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
        name: "Analytics Team Postgres"
        sourceType: "postgres"
        workspaceId: "871d9b60-11d1-44cb-8c92-c246d53bf87e"
        definitionId: "321d9b60-11d1-44cb-8c92-c246d53bf98e"
      x-speakeasy-component: true
    ConnectorDefinitionResponse:
      title: "Root Type for ConnectorDefinitionResponse"
      description: "Provides details of a single connector definition."
      type: "object"
      required:
      - "id"
      - "connectorDefinitionType"
      - "name"
      - "version"
      properties:
        id:
          format: "UUID"
          type: "string"
        name:
          type: "string"
        connectorDefinitionType:
          $ref: "#/components/schemas/ConnectorType"
        version:
          type: "string"
      example:
        id: "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
        name: "Postgres"
        connectorDefinnitionType: "source"
        version: "0.2.0"
      x-speakeasy-component: true
    ConnectorType:
      type: "string"
      enum:
      - "source"
      - "destination"
      x-speakeasy-component: true
    TagResponse:
      title: "Root Type for TagResponse"
      description: "Provides details of a single tag."
      type: "object"
      required:
      - "tagId"
      - "name"
      - "color"
      - "workspaceId"
      properties:
        tagId:
          $ref: "#/components/schemas/TagId"
        name:
          type: "string"
        color:
          description: "A hexadecimal color value"
          type: "string"
        workspaceId:
          $ref: "#/components/schemas/WorkspaceId"
      example:
        tagId: "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
        name: "Analytics Team"
        color: "FF5733"
        workspaceId: "871d9b60-11d1-44cb-8c92-c246d53bf87e"
      x-speakeasy-component: true
    DestinationCreateRequest:
      required:
      - "name"
      - "workspaceId"
      - "configuration"
      type: "object"
      properties:
        name:
          description: "Name of the destination e.g. dev-mysql-instance."
          type: "string"
        definitionId:
          description: "The UUID of the connector definition. One of configuration.destinationType\
            \ or definitionId must be provided."
          format: "uuid"
          type: "string"
        workspaceId:
          format: "uuid"
          type: "string"
        configuration:
          $ref: "#/components/schemas/DestinationConfiguration"
        resourceAllocation:
          $ref: "#/components/schemas/ScopedResourceRequirements"
      x-implements: "io.airbyte.api.common.ConfigurableActor"
      x-speakeasy-entity: "Destination"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    DestinationPatchRequest:
      type: "object"
      properties:
        name:
          type: "string"
        configuration:
          $ref: "#/components/schemas/DestinationConfiguration"
        resourceAllocation:
          $ref: "#/components/schemas/ScopedResourceRequirements"
      x-implements: "io.airbyte.api.common.ConfigurableActor"
      x-speakeasy-entity: "Destination"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    DestinationPutRequest:
      required:
      - "name"
      - "configuration"
      type: "object"
      properties:
        name:
          type: "string"
        configuration:
          $ref: "#/components/schemas/DestinationConfiguration"
        resourceAllocation:
          $ref: "#/components/schemas/ScopedResourceRequirements"
      x-implements: "io.airbyte.api.common.ConfigurableActor"
      x-speakeasy-entity: "Destination"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    WorkspaceCreateRequest:
      required:
      - "name"
      type: "object"
      properties:
        name:
          description: "Name of the workspace"
          type: "string"
        organizationId:
          description: "ID of organization to add workspace to."
          format: "uuid"
          type: "string"
        notifications:
          $ref: "#/components/schemas/NotificationsConfig"
        regionId:
          type: "string"
          format: "uuid"
      x-speakeasy-entity: "Workspace"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    WorkspaceUpdateRequest:
      type: "object"
      properties:
        name:
          description: "Name of the workspace"
          type: "string"
        notifications:
          $ref: "#/components/schemas/NotificationsConfig"
        regionId:
          type: "string"
          format: "uuid"
      x-speakeasy-entity: "Workspace"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    WorkspaceResponse:
      title: "Root Type for WorkspaceResponse"
      description: "Provides details of a single workspace."
      type: "object"
      required:
      - "workspaceId"
      - "name"
      - "dataResidency"
      - "notifications"
      properties:
        workspaceId:
          format: "UUID"
          type: "string"
        name:
          type: "string"
        dataResidency:
          type: "string"
        notifications:
          $ref: "#/components/schemas/NotificationsConfig"
      x-speakeasy-entity: "Workspace"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    NotificationsConfig:
      description: "Configures workspace notifications."
      type: "object"
      properties:
        failure:
          $ref: "#/components/schemas/NotificationConfig"
        success:
          $ref: "#/components/schemas/NotificationConfig"
        connectionUpdate:
          $ref: "#/components/schemas/NotificationConfig"
        connectionUpdateActionRequired:
          $ref: "#/components/schemas/NotificationConfig"
        syncDisabled:
          $ref: "#/components/schemas/NotificationConfig"
        syncDisabledWarning:
          $ref: "#/components/schemas/NotificationConfig"
      x-speakeasy-entity: "Workspace"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    NotificationConfig:
      description: "Configures a notification."
      type: "object"
      properties:
        email:
          $ref: "#/components/schemas/EmailNotificationConfig"
        webhook:
          $ref: "#/components/schemas/WebhookNotificationConfig"
      x-speakeasy-entity: "Workspace"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    WebhookNotificationConfig:
      description: "Configures a webhook notification."
      type: "object"
      properties:
        enabled:
          type: "boolean"
        url:
          type: "string"
      x-speakeasy-entity: "Workspace"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    EmailNotificationConfig:
      description: "Configures an email notification."
      type: "object"
      properties:
        enabled:
          type: "boolean"
      x-speakeasy-entity: "Workspace"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    UserResponse:
      title: "Root Type for UserResponse"
      description: "Provides details of a single user in an organization."
      type: "object"
      required:
      - "id"
      - "name"
      - "email"
      properties:
        name:
          description: "Name of the user"
          type: "string"
        id:
          $ref: "#/components/schemas/UserId"
        email:
          type: "string"
          format: "email"
      x-speakeasy-entity: "User"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    UsersResponse:
      title: "Root Type for UsersResponse"
      description: "List/Array of multiple users in an organization"
      required:
      - "data"
      type: "object"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/UserResponse"
      x-speakeasy-component: true
      x-speakeasy-entity: "User"
      x-speakeasy-param-suppress-computed-diff: true
    PermissionCreateRequest:
      required:
      - "permissionType"
      - "userId"
      type: "object"
      properties:
        permissionType:
          $ref: "#/components/schemas/PublicPermissionType"
        userId:
          $ref: "#/components/schemas/UserId"
        workspaceId:
          $ref: "#/components/schemas/WorkspaceId"
        organizationId:
          $ref: "#/components/schemas/OrganizationId"
      x-speakeasy-entity: "Permission"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    PermissionUpdateRequest:
      required:
      - "permissionType"
      type: "object"
      properties:
        permissionType:
          $ref: "#/components/schemas/PermissionType"
      x-speakeasy-entity: "Permission"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    PermissionResponse:
      title: "Root Type for PermissionResponse"
      description: "Provides details of a single permission."
      type: "object"
      required:
      - "permissionId"
      - "permissionType"
      - "userId"
      properties:
        permissionId:
          type: "string"
          format: "uuid"
        permissionType:
          $ref: "#/components/schemas/PermissionType"
        userId:
          $ref: "#/components/schemas/UserId"
        workspaceId:
          $ref: "#/components/schemas/WorkspaceId"
        organizationId:
          $ref: "#/components/schemas/OrganizationId"
      x-speakeasy-entity: "Permission"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    PermissionScope:
      description: "Scope of a single permission, e.g. workspace, organization"
      type: "string"
      enum:
      - "workspace"
      - "organization"
      - "none"
      x-speakeasy-component: true
    PermissionResponseRead:
      title: "Root type for PermissionResponseRead"
      description: "Reformat PermissionResponse with permission scope"
      type: "object"
      required:
      - "permissionId"
      - "permissionType"
      - "userId"
      - "scope"
      - "scopeId"
      properties:
        permissionId:
          type: "string"
          format: "uuid"
        permissionType:
          $ref: "#/components/schemas/PermissionType"
        userId:
          $ref: "#/components/schemas/UserId"
        scopeId:
          type: "string"
          format: "uuid"
        scope:
          $ref: "#/components/schemas/PermissionScope"
      x-speakeasy-entity: "Permission"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    PermissionsResponse:
      title: "Root Type for PermissionsResponse"
      description: "List/Array of multiple permissions"
      required:
      - "data"
      type: "object"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/PermissionResponseRead"
      x-speakeasy-component: true
    OrganizationResponse:
      title: "Root Type for OrganizationResponse"
      description: "Provides details of a single organization for a user."
      type: "object"
      required:
      - "organizationId"
      - "organizationName"
      - "email"
      properties:
        organizationId:
          $ref: "#/components/schemas/OrganizationId"
        organizationName:
          type: "string"
        email:
          type: "string"
          format: "email"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    OrganizationsResponse:
      title: "Root Type for OrganizationsResponse"
      description: "List/Array of multiple organizations."
      required:
      - "data"
      type: "object"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/OrganizationResponse"
      x-speakeasy-component: true
    ConnectionsResponse:
      title: "Root Type for ConnectionsResponse"
      description: ""
      required:
      - "data"
      type: "object"
      properties:
        previous:
          type: "string"
        next:
          type: "string"
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/ConnectionResponse"
          default: []
      example:
        next: "https://api.airbyte.com/v1/connections?limit=5&offset=10"
        previous: "https://api.airbyte.com/v1/connections?limit=5&offset=0"
        data:
        - name: "test-connection"
        - connection_id: "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
        - sourceId: "49237019-645d-47d4-b45b-5eddf97775ce"
        - destinationId: "al312fs-0ab1-4f72-9ed7-0b8fc27c5826"
        - schedule:
            scheduleType: "manual"
        - status: "active"
      x-speakeasy-component: true
    SourcesResponse:
      title: "Root Type for SourcesResponse"
      description: ""
      required:
      - "data"
      type: "object"
      properties:
        previous:
          type: "string"
        next:
          type: "string"
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/SourceResponse"
      example:
        next: "https://api.airbyte.com/v1/sources?limit=5&offset=10"
        previous: "https://api.airbyte.com/v1/sources?limit=5&offset=0"
        data:
          sourceId: "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
          name: "Analytics Team Postgres"
          sourceType: "postgres"
          workspaceId: "871d9b60-11d1-44cb-8c92-c246d53bf87e"
      x-speakeasy-component: true
    DestinationsResponse:
      title: "Root Type for DestinationsResponse"
      description: ""
      required:
      - "data"
      type: "object"
      properties:
        previous:
          type: "string"
        next:
          type: "string"
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/DestinationResponse"
      example:
        next: "https://api.airbyte.com/v1/destinations?limit=5&offset=10"
        previous: "https://api.airbyte.com/v1/destinations?limit=5&offset=0"
        data:
          destinationId: "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
          name: "Analytics Team Postgres"
          destinationType: "postgres"
          workspaceId: "871d9b60-11d1-44cb-8c92-c246d53bf87e"
      x-speakeasy-component: true
    ConnectorDefinitionsResponse:
      title: "Root Type for DefinitionsResponse"
      description: ""
      required:
      - "data"
      type: "object"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/ConnectorDefinitionResponse"
      x-speakeasy-component: true
    CreateDeclarativeSourceDefinitionRequest:
      type: "object"
      x-speakeasy-component: true
      required:
      - "workspaceId"
      - "name"
      - "manifest"
      properties:
        name:
          type: "string"
        manifest:
          $ref: "#/components/schemas/DeclarativeManifest"
    UpdateDeclarativeSourceDefinitionRequest:
      type: "object"
      x-speakeasy-component: true
      required:
      - "manifest"
      properties:
        manifest:
          $ref: "#/components/schemas/DeclarativeManifest"
    DeclarativeSourceDefinitionsResponse:
      title: "Root Type for DeclarativeSourceDefinitionsResponse"
      description: ""
      x-speakeasy-component: true
      required:
      - "data"
      type: "object"
      properties:
        previous:
          type: "string"
        next:
          type: "string"
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/DeclarativeSourceDefinitionResponse"
    DeclarativeSourceDefinitionResponse:
      type: "object"
      x-speakeasy-component: true
      required:
      - "id"
      - "name"
      - "manifest"
      - "version"
      properties:
        id:
          format: "UUID"
          type: "string"
        name:
          type: "string"
        manifest:
          $ref: "#/components/schemas/DeclarativeManifest"
        version:
          x-speakeasy-terraform-ignore: true
          $ref: "#/components/schemas/ManifestVersion"
    CreateDefinitionRequest:
      type: "object"
      x-speakeasy-component: true
      required:
      - "name"
      - "dockerRepository"
      - "dockerImageTag"
      properties:
        name:
          type: "string"
        dockerRepository:
          type: "string"
        dockerImageTag:
          type: "string"
        documentationUrl:
          type: "string"
          format: "uri"
    UpdateDefinitionRequest:
      type: "object"
      x-speakeasy-component: true
      required:
      - "name"
      - "dockerImageTag"
      properties:
        name:
          type: "string"
        dockerImageTag:
          type: "string"
    DefinitionsResponse:
      title: "Root Type for DefinitionsResponse"
      description: ""
      x-speakeasy-component: true
      required:
      - "data"
      type: "object"
      properties:
        previous:
          type: "string"
        next:
          type: "string"
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/DefinitionResponse"
    DefinitionResponse:
      title: "Root Type for DefinitionResponse"
      description: "Provides details of a single connector definition."
      type: "object"
      x-speakeasy-component: true
      required:
      - "id"
      - "name"
      - "dockerRepository"
      - "dockerImageTag"
      properties:
        id:
          format: "UUID"
          type: "string"
        name:
          type: "string"
        dockerRepository:
          type: "string"
        dockerImageTag:
          type: "string"
        documentationUrl:
          type: "string"
    WorkspacesResponse:
      title: "Root Type for WorkspacesResponse"
      description: ""
      required:
      - "data"
      type: "object"
      properties:
        previous:
          type: "string"
        next:
          type: "string"
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/WorkspaceResponse"
      example:
        next: "https://api.airbyte.com/v1/workspaces?limit=5&offset=10"
        previous: "https://api.airbyte.com/v1/workspaces?limit=5&offset=0"
        data:
          workspaceId: "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
          name: "Acme Company"
          dataResidency: "auto"
      x-speakeasy-component: true
    TagsResponse:
      title: "Root Type for TagsResponse"
      description: ""
      required:
      - "data"
      type: "object"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/TagResponse"
      x-speakeasy-component: true
    StreamConfiguration:
      description: "Configurations for a single stream."
      type: "object"
      required:
      - "name"
      properties:
        name:
          type: "string"
        namespace:
          type: "string"
          description: "Namespace of the stream."
        syncMode:
          $ref: "#/components/schemas/ConnectionSyncModeEnum"
        cursorField:
          description: "Path to the field that will be used to determine if a record\
            \ is new or modified since the last sync. This field is REQUIRED if `sync_mode`\
            \ is `incremental` unless there is a default."
          type: "array"
          items:
            type: "string"
        primaryKey:
          description: "Paths to the fields that will be used as primary key. This\
            \ field is REQUIRED if `destination_sync_mode` is `*_dedup` unless it\
            \ is already supplied by the source schema."
          type: "array"
          items:
            type: "array"
            items:
              type: "string"
        includeFiles:
          description: "Whether to move raw files from the source to the destination\
            \ during the sync."
          type: "boolean"
        destinationObjectName:
          description: "The name of the destination object that this stream will be\
            \ written to, used for data activation destinations."
          type: "string"
        selectedFields:
          description: "By default (if not provided in the request) all fields will\
            \ be synced. Otherwise, only the fields in this list will be synced."
          $ref: "#/components/schemas/SelectedFields"
        mappers:
          description: "Mappers that should be applied to the stream before writing\
            \ to the destination."
          type: "array"
          items:
            $ref: "#/components/schemas/ConfiguredStreamMapper"
      x-speakeasy-component: true
    StreamConfigurations:
      description: "A list of configured stream options for a connection."
      type: "object"
      properties:
        streams:
          type: "array"
          format: "set"
          items:
            $ref: "#/components/schemas/StreamConfiguration"
      x-speakeasy-component: true
    StreamPropertiesResponse:
      description: "A list of stream properties."
      type: "array"
      items:
        $ref: "#/components/schemas/StreamProperties"
      x-speakeasy-component: true
    StreamProperties:
      description: "The stream properties associated with a connection."
      type: "object"
      properties:
        streamName:
          type: "string"
        syncModes:
          type: "array"
          items:
            $ref: "#/components/schemas/ConnectionSyncModeEnum"
        streamnamespace:
          type: "string"
        defaultCursorField:
          type: "array"
          items:
            type: "string"
        sourceDefinedCursorField:
          type: "boolean"
        sourceDefinedPrimaryKey:
          type: "array"
          items:
            type: "array"
            items:
              type: "string"
        propertyFields:
          type: "array"
          items:
            type: "array"
            items:
              type: "string"
      x-speakeasy-component: true
    ConnectionSyncModeEnum:
      enum:
      - "full_refresh_overwrite"
      - "full_refresh_overwrite_deduped"
      - "full_refresh_append"
      - "incremental_append"
      - "incremental_deduped_history"
      x-speakeasy-component: true
    ActorTypeEnum:
      description: "Whether you're setting this override for a source or destination"
      enum:
      - "source"
      - "destination"
      x-speakeasy-component: true
    RegionCreateRequest:
      type: "object"
      required:
      - "name"
      - "organizationId"
      properties:
        name:
          type: "string"
        organizationId:
          type: "string"
          format: "uuid"
        enabled:
          type: "boolean"
      x-speakeasy-entity: "Region"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    RegionPatchRequest:
      type: "object"
      properties:
        name:
          type: "string"
        enabled:
          type: "boolean"
      x-speakeasy-entity: "Region"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    RegionResponse:
      type: "object"
      required:
      - "regionId"
      - "name"
      - "organizationId"
      - "enabled"
      - "createdAt"
      - "updatedAt"
      properties:
        regionId:
          type: "string"
          format: "uuid"
        name:
          type: "string"
        organizationId:
          type: "string"
          format: "uuid"
        enabled:
          type: "boolean"
        createdAt:
          type: "string"
        updatedAt:
          type: "string"
      x-speakeasy-entity: "Region"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    RegionsResponse:
      type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/RegionResponse"
      x-speakeasy-component: true
    DataplaneCreateRequest:
      type: "object"
      required:
      - "regionId"
      - "name"
      properties:
        regionId:
          type: "string"
          format: "uuid"
        name:
          type: "string"
        enabled:
          type: "boolean"
      x-speakeasy-entity: "Dataplane"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    DataplanePatchRequest:
      type: "object"
      properties:
        name:
          type: "string"
        enabled:
          type: "boolean"
      x-speakeasy-entity: "Dataplane"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    DataplaneResponse:
      type: "object"
      required:
      - "dataplaneId"
      - "name"
      - "regionId"
      - "enabled"
      - "createdAt"
      - "updatedAt"
      properties:
        dataplaneId:
          type: "string"
          format: "uuid"
        name:
          type: "string"
        regionId:
          type: "string"
          format: "uuid"
        enabled:
          type: "boolean"
        createdAt:
          type: "string"
        updatedAt:
          type: "string"
      x-speakeasy-entity: "Dataplane"
      x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-component: true
    DataplanesResponse:
      type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/DataplaneResponse"
      x-speakeasy-component: true
    ConfigTemplateListResponse:
      type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/ConfigTemplateListItem"
      x-speakeasy-component: true
    ConfigTemplateListItem:
      type: "object"
      required:
      - "id"
      - "name"
      - "icon"
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          type: "string"
        icon:
          type: "string"
      x-speakeasy-component: true
    ConfigTemplatePublicRead:
      type: "object"
      required:
      - "id"
      - "name"
      - "icon"
      - "sourceDefinitionId"
      - "configTemplateSpec"
      - "partialDefaultConfig"
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          type: "string"
          description: "Name of the associated actor definition"
        icon:
          type: "string"
          description: "url to icon in connector asset (svg) registry"
        sourceDefinitionId:
          type: "string"
          format: "uuid"
        configTemplateSpec:
          $ref: "#/components/schemas/SourceDefinitionSpecification"
        partialDefaultConfig:
          type: "object"
      x-speakeasy-component: true
    ConfigTemplateCreateRequestBody:
      type: "object"
      required:
      - "actorDefinitionId"
      - "partialDefaultConfig"
      - "organizationId"
      properties:
        organizationId:
          type: "string"
          format: "uuid"
        actorDefinitionId:
          $ref: "#/components/schemas/ActorDefinitionId"
        partialDefaultConfig:
          $ref: "#/components/schemas/SourceConfiguration"
        partialUserConfigSpec:
          $ref: "#/components/schemas/SourceConfiguration"
      x-speakeasy-component: true
    ConfigTemplateCreateResponse:
      type: "object"
      required:
      - "id"
      properties:
        id:
          type: "string"
          format: "uuid"
      x-speakeasy-component: true
    ConfigTemplateUpdateRequestBody:
      type: "object"
      required:
      - "organizationId"
      properties:
        organizationId:
          type: "string"
          format: "uuid"
        partialDefaultConfig:
          $ref: "#/components/schemas/SourceConfiguration"
        partialUserConfigSpec:
          $ref: "#/components/schemas/SourceConfiguration"
      x-speakeasy-component: true
    ConfigTemplateUpdateResponse:
      type: "object"
      required:
      - "id"
      properties:
        id:
          type: "string"
          format: "uuid"
      x-speakeasy-component: true
    EmbeddedWidgetRequest:
      type: "object"
      required:
      - "allowedOrigin"
      - "externalUserId"
      - "organizationId"
      properties:
        allowedOrigin:
          type: "string"
        externalUserId:
          type: "string"
        organizationId:
          type: "string"
          format: "uuid"
      x-speakeasy-component: true
    EmbeddedWidgetResponse:
      type: "object"
      required:
      - "token"
      properties:
        token:
          type: "string"
      x-speakeasy-component: true
    ConnectionTemplateCreateRequestBody:
      type: "object"
      required:
      - "destinationConfiguration"
      - "organizationId"
      - "destinationName"
      - "destinationActorDefinitionId"
      properties:
        organizationId:
          type: "string"
          format: "uuid"
        destinationName:
          type: "string"
        destinationConfiguration:
          $ref: "#/components/schemas/DestinationConfiguration"
        destinationActorDefinitionId:
          $ref: "#/components/schemas/ActorDefinitionId"
        namespaceDefinitionType:
          $ref: "#/components/schemas/NamespaceDefinitionType"
          description: "The namespace definition type for the connection. This is\
            \ used to determine how the namespace is defined for the connection. If\
            \ none is provided, the namespace will be set to ${WORKSPACE_NAME}."
        namespaceFormat:
          type: "string"
          default: null
        prefix:
          type: "string"
        schedule:
          $ref: "#/components/schemas/AirbyteApiConnectionSchedule"
          description: "The schedule for connections. If none is provided, syncs will\
            \ run every hour."
        resourceRequirements:
          $ref: "#/components/schemas/ResourceRequirements"
        nonBreakingChangesPreference:
          $ref: "#/components/schemas/NonBreakingChangesPreference"
        syncOnCreate:
          type: "boolean"
          default: true
      x-speakeasy-component: true
    ConnectionTemplateCreateResponse:
      type: "object"
      required:
      - "id"
      properties:
        id:
          type: "string"
          format: "uuid"
      x-speakeasy-component: true
    destination-clickhouse:
      properties:
        database:
          description: "Name of the database."
          order: 2
          title: "DB Name"
          type: "string"
        host:
          description: "Hostname of the database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 5
          title: "JDBC URL Params"
          type: "string"
        password:
          airbyte_secret: true
          description: "Password associated with the username."
          order: 4
          title: "Password"
          type: "string"
          x-speakeasy-param-sensitive: true
        port:
          default: 8123
          description: "HTTP port of the database."
          examples:
          - "8123"
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        raw_data_schema:
          description: "The schema to write raw tables into (default: airbyte_internal)"
          order: 7
          title: "Raw Table Schema Name"
          type: "string"
        ssl:
          default: false
          description: "Encrypt data using SSL."
          order: 6
          title: "SSL Connection"
          type: "boolean"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
                x-speakeasy-param-sensitive: true
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        username:
          description: "Username to use to access the database."
          order: 3
          title: "User"
          type: "string"
        destinationType:
          title: "clickhouse"
          const: "clickhouse"
          enum:
          - "clickhouse"
          order: 0
          type: "string"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      - "destinationType"
      title: "ClickHouse Destination Spec"
      type: "object"
    destination-clickhouse-update:
      properties:
        database:
          description: "Name of the database."
          order: 2
          title: "DB Name"
          type: "string"
        host:
          description: "Hostname of the database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 5
          title: "JDBC URL Params"
          type: "string"
        password:
          airbyte_secret: true
          description: "Password associated with the username."
          order: 4
          title: "Password"
          type: "string"
        port:
          default: 8123
          description: "HTTP port of the database."
          examples:
          - "8123"
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        raw_data_schema:
          description: "The schema to write raw tables into (default: airbyte_internal)"
          order: 7
          title: "Raw Table Schema Name"
          type: "string"
        ssl:
          default: false
          description: "Encrypt data using SSL."
          order: 6
          title: "SSL Connection"
          type: "boolean"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        username:
          description: "Username to use to access the database."
          order: 3
          title: "User"
          type: "string"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      title: "ClickHouse Destination Spec"
      type: "object"
    destination-mssql:
      properties:
        database:
          description: "The name of the MSSQL database."
          order: 2
          title: "DB Name"
          type: "string"
        host:
          description: "The host name of the MSSQL database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 6
          title: "JDBC URL Params"
          type: "string"
        load_type:
          always_show: true
          description: "Specifies the type of load mechanism (e.g., BULK, INSERT)\
            \ and its associated configuration."
          oneOf:
          - additionalProperties: true
            description: "Configuration details for using the INSERT loading mechanism."
            properties:
              load_type:
                default: "INSERT"
                enum:
                - "INSERT"
                type: "string"
            required:
            - "load_type"
            title: "Insert Load"
            type: "object"
          - additionalProperties: true
            description: "Configuration details for using the BULK loading mechanism."
            properties:
              azure_blob_storage_account_key:
                airbyte_secret: true
                always_show: true
                description: "The Azure blob storage account key. Mutually exclusive\
                  \ with a Shared Access Signature"
                examples:
                - "Z8ZkZpteggFx394vm+PJHnGTvdRncaYS+JhLKdj789YNmD+iyGTnG+PV+POiuYNhBg/ACS+LKjd%4FG3FHGN12Nd=="
                title: "Azure Blob Storage account key"
                type: "string"
                x-speakeasy-param-sensitive: true
              azure_blob_storage_account_name:
                description: "The name of the Azure Blob Storage account. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#storage-accounts"
                examples:
                - "mystorageaccount"
                title: "Azure Blob Storage Account Name"
                type: "string"
              azure_blob_storage_container_name:
                description: "The name of the Azure Blob Storage container. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#containers"
                examples:
                - "mycontainer"
                title: "Azure Blob Storage Container Name"
                type: "string"
              bulk_load_data_source:
                always_show: true
                description: "Specifies the external data source name configured in\
                  \ MSSQL, which references the Azure Blob container. See: https://learn.microsoft.com/sql/t-sql/statements/bulk-insert-transact-sql"
                examples:
                - "MyAzureBlobStorage"
                order: 5
                title: "BULK Load Data Source"
                type: "string"
              bulk_load_validate_values_pre_load:
                always_show: false
                default: false
                description: "When enabled, Airbyte will validate all values before\
                  \ loading them into the destination table. This provides stronger\
                  \ data integrity guarantees but may significantly impact performance."
                examples:
                - "false"
                order: 6
                title: "Pre-Load Value Validation"
                type: "boolean"
              load_type:
                default: "BULK"
                enum:
                - "BULK"
                type: "string"
              shared_access_signature:
                airbyte_secret: true
                always_show: true
                description: "A shared access signature (SAS) provides secure delegated\
                  \ access to resources in your storage account. See: https://learn.microsoft.com/azure/storage/common/storage-sas-overview.Mutually\
                  \ exclusive with an account key"
                examples:
                - "sv=2021-08-06&st=2025-04-11T00%3A00%3A00Z&se=2025-04-12T00%3A00%3A00Z&sr=b&sp=rw&sig=abcdefghijklmnopqrstuvwxyz1234567890%2Fabcdefg%3D"
                title: "Shared Access Signature"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "load_type"
            - "azure_blob_storage_account_name"
            - "azure_blob_storage_container_name"
            - "bulk_load_data_source"
            title: "Bulk Load"
            type: "object"
          order: 8
          title: "Load Type"
          type: "object"
        password:
          airbyte_secret: true
          description: "The password associated with this username."
          order: 5
          title: "Password"
          type: "string"
          x-speakeasy-param-sensitive: true
        port:
          description: "The port of the MSSQL database."
          examples:
          - "1433"
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        schema:
          default: "public"
          description: "The default schema tables are written to if the source does\
            \ not specify a namespace. The usual value for this field is \"public\"\
            ."
          examples:
          - "public"
          order: 3
          title: "Default Schema"
          type: "string"
        ssl_method:
          description: "The encryption method which is used to communicate with the\
            \ database."
          oneOf:
          - additionalProperties: true
            description: "The data transfer will not be encrypted."
            properties:
              name:
                default: "unencrypted"
                enum:
                - "unencrypted"
                type: "string"
            required:
            - "name"
            title: "Unencrypted"
            type: "object"
          - additionalProperties: true
            description: "Use the certificate provided by the server without verification.\
              \ (For testing purposes only!)"
            properties:
              name:
                default: "encrypted_trust_server_certificate"
                enum:
                - "encrypted_trust_server_certificate"
                type: "string"
            required:
            - "name"
            title: "Encrypted (trust server certificate)"
            type: "object"
          - additionalProperties: true
            description: "Verify and use the certificate provided by the server."
            properties:
              hostNameInCertificate:
                description: "Specifies the host name of the server. The value of\
                  \ this property must match the subject property of the certificate."
                order: 3
                title: "Host Name In Certificate"
                type: "string"
              name:
                default: "encrypted_verify_certificate"
                enum:
                - "encrypted_verify_certificate"
                type: "string"
              trustStoreName:
                description: "Specifies the name of the trust store."
                order: 1
                title: "Trust Store Name"
                type: "string"
              trustStorePassword:
                airbyte_secret: true
                description: "Specifies the password of the trust store."
                order: 2
                title: "Trust Store Password"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "name"
            title: "Encrypted (verify certificate)"
            type: "object"
          order: 7
          title: "SSL Method"
          type: "object"
        user:
          description: "The username which is used to access the database."
          order: 4
          title: "User"
          type: "string"
        destinationType:
          title: "mssql"
          const: "mssql"
          enum:
          - "mssql"
          order: 0
          type: "string"
      required:
      - "host"
      - "port"
      - "database"
      - "schema"
      - "user"
      - "ssl_method"
      - "load_type"
      - "destinationType"
      title: "MSSQL Destination Specification"
      type: "object"
    destination-mssql-update:
      properties:
        database:
          description: "The name of the MSSQL database."
          order: 2
          title: "DB Name"
          type: "string"
        host:
          description: "The host name of the MSSQL database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 6
          title: "JDBC URL Params"
          type: "string"
        load_type:
          always_show: true
          description: "Specifies the type of load mechanism (e.g., BULK, INSERT)\
            \ and its associated configuration."
          oneOf:
          - additionalProperties: true
            description: "Configuration details for using the INSERT loading mechanism."
            properties:
              load_type:
                default: "INSERT"
                enum:
                - "INSERT"
                type: "string"
            required:
            - "load_type"
            title: "Insert Load"
            type: "object"
          - additionalProperties: true
            description: "Configuration details for using the BULK loading mechanism."
            properties:
              azure_blob_storage_account_key:
                airbyte_secret: true
                always_show: true
                description: "The Azure blob storage account key. Mutually exclusive\
                  \ with a Shared Access Signature"
                examples:
                - "Z8ZkZpteggFx394vm+PJHnGTvdRncaYS+JhLKdj789YNmD+iyGTnG+PV+POiuYNhBg/ACS+LKjd%4FG3FHGN12Nd=="
                title: "Azure Blob Storage account key"
                type: "string"
              azure_blob_storage_account_name:
                description: "The name of the Azure Blob Storage account. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#storage-accounts"
                examples:
                - "mystorageaccount"
                title: "Azure Blob Storage Account Name"
                type: "string"
              azure_blob_storage_container_name:
                description: "The name of the Azure Blob Storage container. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#containers"
                examples:
                - "mycontainer"
                title: "Azure Blob Storage Container Name"
                type: "string"
              bulk_load_data_source:
                always_show: true
                description: "Specifies the external data source name configured in\
                  \ MSSQL, which references the Azure Blob container. See: https://learn.microsoft.com/sql/t-sql/statements/bulk-insert-transact-sql"
                examples:
                - "MyAzureBlobStorage"
                order: 5
                title: "BULK Load Data Source"
                type: "string"
              bulk_load_validate_values_pre_load:
                always_show: false
                default: false
                description: "When enabled, Airbyte will validate all values before\
                  \ loading them into the destination table. This provides stronger\
                  \ data integrity guarantees but may significantly impact performance."
                examples:
                - "false"
                order: 6
                title: "Pre-Load Value Validation"
                type: "boolean"
              load_type:
                default: "BULK"
                enum:
                - "BULK"
                type: "string"
              shared_access_signature:
                airbyte_secret: true
                always_show: true
                description: "A shared access signature (SAS) provides secure delegated\
                  \ access to resources in your storage account. See: https://learn.microsoft.com/azure/storage/common/storage-sas-overview.Mutually\
                  \ exclusive with an account key"
                examples:
                - "sv=2021-08-06&st=2025-04-11T00%3A00%3A00Z&se=2025-04-12T00%3A00%3A00Z&sr=b&sp=rw&sig=abcdefghijklmnopqrstuvwxyz1234567890%2Fabcdefg%3D"
                title: "Shared Access Signature"
                type: "string"
            required:
            - "load_type"
            - "azure_blob_storage_account_name"
            - "azure_blob_storage_container_name"
            - "bulk_load_data_source"
            title: "Bulk Load"
            type: "object"
          order: 8
          title: "Load Type"
          type: "object"
        password:
          airbyte_secret: true
          description: "The password associated with this username."
          order: 5
          title: "Password"
          type: "string"
        port:
          description: "The port of the MSSQL database."
          examples:
          - "1433"
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        schema:
          default: "public"
          description: "The default schema tables are written to if the source does\
            \ not specify a namespace. The usual value for this field is \"public\"\
            ."
          examples:
          - "public"
          order: 3
          title: "Default Schema"
          type: "string"
        ssl_method:
          description: "The encryption method which is used to communicate with the\
            \ database."
          oneOf:
          - additionalProperties: true
            description: "The data transfer will not be encrypted."
            properties:
              name:
                default: "unencrypted"
                enum:
                - "unencrypted"
                type: "string"
            required:
            - "name"
            title: "Unencrypted"
            type: "object"
          - additionalProperties: true
            description: "Use the certificate provided by the server without verification.\
              \ (For testing purposes only!)"
            properties:
              name:
                default: "encrypted_trust_server_certificate"
                enum:
                - "encrypted_trust_server_certificate"
                type: "string"
            required:
            - "name"
            title: "Encrypted (trust server certificate)"
            type: "object"
          - additionalProperties: true
            description: "Verify and use the certificate provided by the server."
            properties:
              hostNameInCertificate:
                description: "Specifies the host name of the server. The value of\
                  \ this property must match the subject property of the certificate."
                order: 3
                title: "Host Name In Certificate"
                type: "string"
              name:
                default: "encrypted_verify_certificate"
                enum:
                - "encrypted_verify_certificate"
                type: "string"
              trustStoreName:
                description: "Specifies the name of the trust store."
                order: 1
                title: "Trust Store Name"
                type: "string"
              trustStorePassword:
                airbyte_secret: true
                description: "Specifies the password of the trust store."
                order: 2
                title: "Trust Store Password"
                type: "string"
            required:
            - "name"
            title: "Encrypted (verify certificate)"
            type: "object"
          order: 7
          title: "SSL Method"
          type: "object"
        user:
          description: "The username which is used to access the database."
          order: 4
          title: "User"
          type: "string"
      required:
      - "host"
      - "port"
      - "database"
      - "schema"
      - "user"
      - "ssl_method"
      - "load_type"
      title: "MSSQL Destination Specification"
      type: "object"
    destination-mysql:
      properties:
        database:
          description: "Name of the database."
          order: 2
          title: "DB Name"
          type: "string"
        disable_type_dedupe:
          default: false
          description: "Disable Writing Final Tables. WARNING! The data format in\
            \ _airbyte_data is likely stable but there are no guarantees that other\
            \ metadata columns will remain the same in future versions"
          order: 8
          title: "Disable Final Tables. (WARNING! Unstable option; Columns in raw\
            \ table schema might change between versions)"
          type: "boolean"
        host:
          description: "Hostname of the database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 6
          title: "JDBC URL Params"
          type: "string"
        password:
          airbyte_secret: true
          description: "Password associated with the username."
          order: 4
          title: "Password"
          type: "string"
          x-speakeasy-param-sensitive: true
        port:
          default: 3306
          description: "Port of the database."
          examples:
          - "3306"
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        raw_data_schema:
          description: "The database to write raw tables into"
          order: 7
          title: "Raw table database (defaults to airbyte_internal)"
          type: "string"
        ssl:
          default: true
          description: "Encrypt data using SSL."
          order: 5
          title: "SSL Connection"
          type: "boolean"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
                x-speakeasy-param-sensitive: true
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        username:
          description: "Username to use to access the database."
          order: 3
          title: "User"
          type: "string"
        destinationType:
          title: "mysql"
          const: "mysql"
          enum:
          - "mysql"
          order: 0
          type: "string"
      required:
      - "host"
      - "port"
      - "username"
      - "database"
      - "destinationType"
      title: "MySQL Destination Spec"
      type: "object"
    destination-mysql-update:
      properties:
        database:
          description: "Name of the database."
          order: 2
          title: "DB Name"
          type: "string"
        disable_type_dedupe:
          default: false
          description: "Disable Writing Final Tables. WARNING! The data format in\
            \ _airbyte_data is likely stable but there are no guarantees that other\
            \ metadata columns will remain the same in future versions"
          order: 8
          title: "Disable Final Tables. (WARNING! Unstable option; Columns in raw\
            \ table schema might change between versions)"
          type: "boolean"
        host:
          description: "Hostname of the database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 6
          title: "JDBC URL Params"
          type: "string"
        password:
          airbyte_secret: true
          description: "Password associated with the username."
          order: 4
          title: "Password"
          type: "string"
        port:
          default: 3306
          description: "Port of the database."
          examples:
          - "3306"
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        raw_data_schema:
          description: "The database to write raw tables into"
          order: 7
          title: "Raw table database (defaults to airbyte_internal)"
          type: "string"
        ssl:
          default: true
          description: "Encrypt data using SSL."
          order: 5
          title: "SSL Connection"
          type: "boolean"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        username:
          description: "Username to use to access the database."
          order: 3
          title: "User"
          type: "string"
      required:
      - "host"
      - "port"
      - "username"
      - "database"
      title: "MySQL Destination Spec"
      type: "object"
    destination-mongodb:
      properties:
        auth_type:
          description: "Authorization type."
          oneOf:
          - description: "None."
            properties:
              authorization:
                const: "none"
                type: "string"
                enum:
                - "none"
            required:
            - "authorization"
            title: "None"
            type: "object"
          - description: "Login/Password."
            properties:
              authorization:
                const: "login/password"
                type: "string"
                enum:
                - "login/password"
              password:
                airbyte_secret: true
                description: "Password associated with the username."
                order: 2
                title: "Password"
                type: "string"
                x-speakeasy-param-sensitive: true
              username:
                description: "Username to use to access the database."
                order: 1
                title: "User"
                type: "string"
            required:
            - "authorization"
            - "username"
            - "password"
            title: "Login/Password"
            type: "object"
          title: "Authorization type"
          type: "object"
        database:
          description: "Name of the database."
          order: 2
          title: "DB Name"
          type: "string"
        instance_type:
          description: "MongoDb instance to connect to. For MongoDB Atlas and Replica\
            \ Set TLS connection is used by default."
          oneOf:
          - properties:
              host:
                description: "The Host of a Mongo database to be replicated."
                order: 0
                title: "Host"
                type: "string"
              instance:
                default: "standalone"
                enum:
                - "standalone"
                type: "string"
              port:
                default: 27017
                description: "The Port of a Mongo database to be replicated."
                examples:
                - "27017"
                maximum: 65536
                minimum: 0
                order: 1
                title: "Port"
                type: "integer"
              tls:
                default: false
                description: "Indicates whether TLS encryption protocol will be used\
                  \ to connect to MongoDB. It is recommended to use TLS connection\
                  \ if possible. For more information see <a href=\"https://docs.airbyte.com/integrations/sources/mongodb-v2\"\
                  >documentation</a>."
                order: 2
                title: "TLS Connection"
                type: "boolean"
            required:
            - "instance"
            - "host"
            - "port"
            title: "Standalone MongoDb Instance"
          - properties:
              instance:
                default: "replica"
                enum:
                - "replica"
                type: "string"
              replica_set:
                description: "A replica set name."
                order: 1
                title: "Replica Set"
                type: "string"
              server_addresses:
                description: "The members of a replica set. Please specify `host`:`port`\
                  \ of each member seperated by comma."
                examples:
                - "host1:27017,host2:27017,host3:27017"
                order: 0
                title: "Server addresses"
                type: "string"
            required:
            - "instance"
            - "server_addresses"
            title: "Replica Set"
          - properties:
              cluster_url:
                description: "URL of a cluster to connect to."
                order: 0
                title: "Cluster URL"
                type: "string"
              instance:
                default: "atlas"
                enum:
                - "atlas"
                type: "string"
            required:
            - "instance"
            - "cluster_url"
            title: "MongoDB Atlas"
          order: 0
          title: "MongoDb Instance Type"
          type: "object"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
                x-speakeasy-param-sensitive: true
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        destinationType:
          title: "mongodb"
          const: "mongodb"
          enum:
          - "mongodb"
          order: 0
          type: "string"
      required:
      - "database"
      - "auth_type"
      - "destinationType"
      title: "MongoDB Destination Spec"
      type: "object"
    destination-mongodb-update:
      properties:
        auth_type:
          description: "Authorization type."
          oneOf:
          - description: "None."
            properties:
              authorization:
                const: "none"
                type: "string"
                enum:
                - "none"
            required:
            - "authorization"
            title: "None"
            type: "object"
          - description: "Login/Password."
            properties:
              authorization:
                const: "login/password"
                type: "string"
                enum:
                - "login/password"
              password:
                airbyte_secret: true
                description: "Password associated with the username."
                order: 2
                title: "Password"
                type: "string"
              username:
                description: "Username to use to access the database."
                order: 1
                title: "User"
                type: "string"
            required:
            - "authorization"
            - "username"
            - "password"
            title: "Login/Password"
            type: "object"
          title: "Authorization type"
          type: "object"
        database:
          description: "Name of the database."
          order: 2
          title: "DB Name"
          type: "string"
        instance_type:
          description: "MongoDb instance to connect to. For MongoDB Atlas and Replica\
            \ Set TLS connection is used by default."
          oneOf:
          - properties:
              host:
                description: "The Host of a Mongo database to be replicated."
                order: 0
                title: "Host"
                type: "string"
              instance:
                default: "standalone"
                enum:
                - "standalone"
                type: "string"
              port:
                default: 27017
                description: "The Port of a Mongo database to be replicated."
                examples:
                - "27017"
                maximum: 65536
                minimum: 0
                order: 1
                title: "Port"
                type: "integer"
              tls:
                default: false
                description: "Indicates whether TLS encryption protocol will be used\
                  \ to connect to MongoDB. It is recommended to use TLS connection\
                  \ if possible. For more information see <a href=\"https://docs.airbyte.com/integrations/sources/mongodb-v2\"\
                  >documentation</a>."
                order: 2
                title: "TLS Connection"
                type: "boolean"
            required:
            - "instance"
            - "host"
            - "port"
            title: "Standalone MongoDb Instance"
          - properties:
              instance:
                default: "replica"
                enum:
                - "replica"
                type: "string"
              replica_set:
                description: "A replica set name."
                order: 1
                title: "Replica Set"
                type: "string"
              server_addresses:
                description: "The members of a replica set. Please specify `host`:`port`\
                  \ of each member seperated by comma."
                examples:
                - "host1:27017,host2:27017,host3:27017"
                order: 0
                title: "Server addresses"
                type: "string"
            required:
            - "instance"
            - "server_addresses"
            title: "Replica Set"
          - properties:
              cluster_url:
                description: "URL of a cluster to connect to."
                order: 0
                title: "Cluster URL"
                type: "string"
              instance:
                default: "atlas"
                enum:
                - "atlas"
                type: "string"
            required:
            - "instance"
            - "cluster_url"
            title: "MongoDB Atlas"
          order: 0
          title: "MongoDb Instance Type"
          type: "object"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
      required:
      - "database"
      - "auth_type"
      title: "MongoDB Destination Spec"
      type: "object"
    destination-redshift:
      groups:
      - id: "connection"
        title: "Connection"
      - id: "tables"
        title: "Tables"
      properties:
        database:
          description: "Name of the database."
          group: "connection"
          order: 5
          title: "Database"
          type: "string"
        disable_type_dedupe:
          default: false
          description: "Disable Writing Final Tables. WARNING! The data format in\
            \ _airbyte_data is likely stable but there are no guarantees that other\
            \ metadata columns will remain the same in future versions"
          group: "tables"
          order: 11
          title: "Disable Final Tables. (WARNING! Unstable option; Columns in raw\
            \ table schema might change between versions)"
          type: "boolean"
        drop_cascade:
          default: false
          description: "Drop tables with CASCADE. WARNING! This will delete all data\
            \ in all dependent objects (views, etc.). Use with caution. This option\
            \ is intended for usecases which can easily rebuild the dependent objects."
          group: "tables"
          order: 12
          title: "Drop tables with CASCADE. (WARNING! Risk of unrecoverable data loss)"
          type: "boolean"
        host:
          description: "Host Endpoint of the Redshift Cluster (must include the cluster-id,\
            \ region and end with .redshift.amazonaws.com)"
          group: "connection"
          order: 1
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          group: "connection"
          order: 7
          title: "JDBC URL Params"
          type: "string"
        password:
          airbyte_secret: true
          description: "Password associated with the username."
          group: "connection"
          order: 4
          title: "Password"
          type: "string"
          x-speakeasy-param-sensitive: true
        port:
          default: 5439
          description: "Port of the database."
          examples:
          - "5439"
          group: "connection"
          maximum: 65536
          minimum: 0
          order: 2
          title: "Port"
          type: "integer"
        raw_data_schema:
          description: "The schema to write raw tables into (default: airbyte_internal)."
          group: "tables"
          order: 9
          title: "Destinations V2 Raw Table Schema"
          type: "string"
        schema:
          default: "public"
          description: "The default schema tables are written to if the source does\
            \ not specify a namespace. Unless specifically configured, the usual value\
            \ for this field is \"public\"."
          examples:
          - "public"
          group: "connection"
          order: 6
          title: "Default Schema"
          type: "string"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
                x-speakeasy-param-sensitive: true
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        uploading_method:
          description: "The way data will be uploaded to Redshift."
          display_type: "radio"
          group: "connection"
          oneOf:
          - description: "<i>(recommended)</i> Uploads data to S3 and then uses a\
              \ COPY to insert the data into Redshift. COPY is recommended for production\
              \ workloads for better speed and scalability. See <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-bucket.html\"\
              >AWS docs</a> for more details."
            properties:
              access_key_id:
                airbyte_secret: true
                description: "This ID grants access to the above S3 staging bucket.\
                  \ Airbyte requires Read and Write permissions to the given bucket.\
                  \ See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\"\
                  >AWS docs</a> on how to generate an access key ID and secret access\
                  \ key."
                order: 3
                title: "S3 Access Key Id"
                type: "string"
                x-speakeasy-param-sensitive: true
              file_name_pattern:
                description: "The pattern allows you to set the file-name format for\
                  \ the S3 staging file(s)"
                examples:
                - "{date}"
                - "{date:yyyy_MM}"
                - "{timestamp}"
                - "{part_number}"
                - "{sync_id}"
                order: 5
                title: "S3 Filename pattern"
                type: "string"
              method:
                const: "S3 Staging"
                type: "string"
                enum:
                - "S3 Staging"
              purge_staging_data:
                default: true
                description: "Whether to delete the staging files from S3 after completing\
                  \ the sync. See <a href=\"https://docs.airbyte.com/integrations/destinations/redshift/#:~:text=the%20root%20directory.-,Purge%20Staging%20Data,-Whether%20to%20delete\"\
                  > docs</a> for details."
                order: 6
                title: "Purge Staging Files and Tables"
                type: "boolean"
              s3_bucket_name:
                description: "The name of the staging S3 bucket."
                examples:
                - "airbyte.staging"
                order: 0
                title: "S3 Bucket Name"
                type: "string"
              s3_bucket_path:
                description: "The directory under the S3 bucket where data will be\
                  \ written. If not provided, then defaults to the root directory.\
                  \ See <a href=\"https://docs.aws.amazon.com/prescriptive-guidance/latest/defining-bucket-names-data-lakes/faq.html#:~:text=be%20globally%20unique.-,For%20S3%20bucket%20paths,-%2C%20you%20can%20use\"\
                  >path's name recommendations</a> for more details."
                examples:
                - "data_sync/test"
                order: 1
                title: "S3 Bucket Path"
                type: "string"
              s3_bucket_region:
                default: ""
                description: "The region of the S3 staging bucket."
                enum:
                - ""
                - "af-south-1"
                - "ap-east-1"
                - "ap-northeast-1"
                - "ap-northeast-2"
                - "ap-northeast-3"
                - "ap-south-1"
                - "ap-south-2"
                - "ap-southeast-1"
                - "ap-southeast-2"
                - "ap-southeast-3"
                - "ap-southeast-4"
                - "ca-central-1"
                - "ca-west-1"
                - "cn-north-1"
                - "cn-northwest-1"
                - "eu-central-1"
                - "eu-central-2"
                - "eu-north-1"
                - "eu-south-1"
                - "eu-south-2"
                - "eu-west-1"
                - "eu-west-2"
                - "eu-west-3"
                - "il-central-1"
                - "me-central-1"
                - "me-south-1"
                - "sa-east-1"
                - "us-east-1"
                - "us-east-2"
                - "us-gov-east-1"
                - "us-gov-west-1"
                - "us-west-1"
                - "us-west-2"
                order: 2
                title: "S3 Bucket Region"
                type: "string"
              secret_access_key:
                airbyte_secret: true
                description: "The corresponding secret to the above access key id.\
                  \ See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\"\
                  >AWS docs</a> on how to generate an access key ID and secret access\
                  \ key."
                order: 4
                title: "S3 Secret Access Key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "method"
            - "s3_bucket_name"
            - "s3_bucket_region"
            - "access_key_id"
            - "secret_access_key"
            title: "AWS S3 Staging"
          order: 8
          title: "Uploading Method"
          type: "object"
        username:
          description: "Username to use to access the database."
          group: "connection"
          order: 3
          title: "Username"
          type: "string"
        destinationType:
          title: "redshift"
          const: "redshift"
          enum:
          - "redshift"
          order: 0
          type: "string"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      - "password"
      - "schema"
      - "destinationType"
      title: "Redshift Destination Spec"
      type: "object"
    destination-redshift-update:
      groups:
      - id: "connection"
        title: "Connection"
      - id: "tables"
        title: "Tables"
      properties:
        database:
          description: "Name of the database."
          group: "connection"
          order: 5
          title: "Database"
          type: "string"
        disable_type_dedupe:
          default: false
          description: "Disable Writing Final Tables. WARNING! The data format in\
            \ _airbyte_data is likely stable but there are no guarantees that other\
            \ metadata columns will remain the same in future versions"
          group: "tables"
          order: 11
          title: "Disable Final Tables. (WARNING! Unstable option; Columns in raw\
            \ table schema might change between versions)"
          type: "boolean"
        drop_cascade:
          default: false
          description: "Drop tables with CASCADE. WARNING! This will delete all data\
            \ in all dependent objects (views, etc.). Use with caution. This option\
            \ is intended for usecases which can easily rebuild the dependent objects."
          group: "tables"
          order: 12
          title: "Drop tables with CASCADE. (WARNING! Risk of unrecoverable data loss)"
          type: "boolean"
        host:
          description: "Host Endpoint of the Redshift Cluster (must include the cluster-id,\
            \ region and end with .redshift.amazonaws.com)"
          group: "connection"
          order: 1
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          group: "connection"
          order: 7
          title: "JDBC URL Params"
          type: "string"
        password:
          airbyte_secret: true
          description: "Password associated with the username."
          group: "connection"
          order: 4
          title: "Password"
          type: "string"
        port:
          default: 5439
          description: "Port of the database."
          examples:
          - "5439"
          group: "connection"
          maximum: 65536
          minimum: 0
          order: 2
          title: "Port"
          type: "integer"
        raw_data_schema:
          description: "The schema to write raw tables into (default: airbyte_internal)."
          group: "tables"
          order: 9
          title: "Destinations V2 Raw Table Schema"
          type: "string"
        schema:
          default: "public"
          description: "The default schema tables are written to if the source does\
            \ not specify a namespace. Unless specifically configured, the usual value\
            \ for this field is \"public\"."
          examples:
          - "public"
          group: "connection"
          order: 6
          title: "Default Schema"
          type: "string"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        uploading_method:
          description: "The way data will be uploaded to Redshift."
          display_type: "radio"
          group: "connection"
          oneOf:
          - description: "<i>(recommended)</i> Uploads data to S3 and then uses a\
              \ COPY to insert the data into Redshift. COPY is recommended for production\
              \ workloads for better speed and scalability. See <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-bucket.html\"\
              >AWS docs</a> for more details."
            properties:
              access_key_id:
                airbyte_secret: true
                description: "This ID grants access to the above S3 staging bucket.\
                  \ Airbyte requires Read and Write permissions to the given bucket.\
                  \ See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\"\
                  >AWS docs</a> on how to generate an access key ID and secret access\
                  \ key."
                order: 3
                title: "S3 Access Key Id"
                type: "string"
              file_name_pattern:
                description: "The pattern allows you to set the file-name format for\
                  \ the S3 staging file(s)"
                examples:
                - "{date}"
                - "{date:yyyy_MM}"
                - "{timestamp}"
                - "{part_number}"
                - "{sync_id}"
                order: 5
                title: "S3 Filename pattern"
                type: "string"
              method:
                const: "S3 Staging"
                type: "string"
                enum:
                - "S3 Staging"
              purge_staging_data:
                default: true
                description: "Whether to delete the staging files from S3 after completing\
                  \ the sync. See <a href=\"https://docs.airbyte.com/integrations/destinations/redshift/#:~:text=the%20root%20directory.-,Purge%20Staging%20Data,-Whether%20to%20delete\"\
                  > docs</a> for details."
                order: 6
                title: "Purge Staging Files and Tables"
                type: "boolean"
              s3_bucket_name:
                description: "The name of the staging S3 bucket."
                examples:
                - "airbyte.staging"
                order: 0
                title: "S3 Bucket Name"
                type: "string"
              s3_bucket_path:
                description: "The directory under the S3 bucket where data will be\
                  \ written. If not provided, then defaults to the root directory.\
                  \ See <a href=\"https://docs.aws.amazon.com/prescriptive-guidance/latest/defining-bucket-names-data-lakes/faq.html#:~:text=be%20globally%20unique.-,For%20S3%20bucket%20paths,-%2C%20you%20can%20use\"\
                  >path's name recommendations</a> for more details."
                examples:
                - "data_sync/test"
                order: 1
                title: "S3 Bucket Path"
                type: "string"
              s3_bucket_region:
                default: ""
                description: "The region of the S3 staging bucket."
                enum:
                - ""
                - "af-south-1"
                - "ap-east-1"
                - "ap-northeast-1"
                - "ap-northeast-2"
                - "ap-northeast-3"
                - "ap-south-1"
                - "ap-south-2"
                - "ap-southeast-1"
                - "ap-southeast-2"
                - "ap-southeast-3"
                - "ap-southeast-4"
                - "ca-central-1"
                - "ca-west-1"
                - "cn-north-1"
                - "cn-northwest-1"
                - "eu-central-1"
                - "eu-central-2"
                - "eu-north-1"
                - "eu-south-1"
                - "eu-south-2"
                - "eu-west-1"
                - "eu-west-2"
                - "eu-west-3"
                - "il-central-1"
                - "me-central-1"
                - "me-south-1"
                - "sa-east-1"
                - "us-east-1"
                - "us-east-2"
                - "us-gov-east-1"
                - "us-gov-west-1"
                - "us-west-1"
                - "us-west-2"
                order: 2
                title: "S3 Bucket Region"
                type: "string"
              secret_access_key:
                airbyte_secret: true
                description: "The corresponding secret to the above access key id.\
                  \ See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\"\
                  >AWS docs</a> on how to generate an access key ID and secret access\
                  \ key."
                order: 4
                title: "S3 Secret Access Key"
                type: "string"
            required:
            - "method"
            - "s3_bucket_name"
            - "s3_bucket_region"
            - "access_key_id"
            - "secret_access_key"
            title: "AWS S3 Staging"
          order: 8
          title: "Uploading Method"
          type: "object"
        username:
          description: "Username to use to access the database."
          group: "connection"
          order: 3
          title: "Username"
          type: "string"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      - "password"
      - "schema"
      title: "Redshift Destination Spec"
      type: "object"
    destination-dynamodb:
      properties:
        access_key_id:
          airbyte_secret: true
          description: "The access key id to access the DynamoDB. Airbyte requires\
            \ Read and Write permissions to the DynamoDB."
          examples:
          - "A012345678910EXAMPLE"
          title: "DynamoDB Key Id"
          type: "string"
          x-speakeasy-param-sensitive: true
        dynamodb_endpoint:
          default: ""
          description: "This is your DynamoDB endpoint url.(if you are working with\
            \ AWS DynamoDB, just leave empty)."
          examples:
          - "http://localhost:9000"
          title: "Endpoint"
          type: "string"
        dynamodb_region:
          default: ""
          description: "The region of the DynamoDB."
          enum:
          - ""
          - "af-south-1"
          - "ap-east-1"
          - "ap-northeast-1"
          - "ap-northeast-2"
          - "ap-northeast-3"
          - "ap-south-1"
          - "ap-south-2"
          - "ap-southeast-1"
          - "ap-southeast-2"
          - "ap-southeast-3"
          - "ap-southeast-4"
          - "ca-central-1"
          - "ca-west-1"
          - "cn-north-1"
          - "cn-northwest-1"
          - "eu-central-1"
          - "eu-central-2"
          - "eu-north-1"
          - "eu-south-1"
          - "eu-south-2"
          - "eu-west-1"
          - "eu-west-2"
          - "eu-west-3"
          - "il-central-1"
          - "me-central-1"
          - "me-south-1"
          - "sa-east-1"
          - "us-east-1"
          - "us-east-2"
          - "us-gov-east-1"
          - "us-gov-west-1"
          - "us-west-1"
          - "us-west-2"
          title: "DynamoDB Region"
          type: "string"
        dynamodb_table_name_prefix:
          description: "The prefix to use when naming DynamoDB tables."
          examples:
          - "airbyte_sync"
          title: "Table name prefix"
          type: "string"
        secret_access_key:
          airbyte_secret: true
          description: "The corresponding secret to the access key id."
          examples:
          - "a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"
          title: "DynamoDB Access Key"
          type: "string"
          x-speakeasy-param-sensitive: true
        destinationType:
          title: "dynamodb"
          const: "dynamodb"
          enum:
          - "dynamodb"
          order: 0
          type: "string"
      required:
      - "dynamodb_table_name_prefix"
      - "dynamodb_region"
      - "access_key_id"
      - "secret_access_key"
      - "destinationType"
      title: "DynamoDB Destination Spec"
      type: "object"
    destination-dynamodb-update:
      properties:
        access_key_id:
          airbyte_secret: true
          description: "The access key id to access the DynamoDB. Airbyte requires\
            \ Read and Write permissions to the DynamoDB."
          examples:
          - "A012345678910EXAMPLE"
          title: "DynamoDB Key Id"
          type: "string"
        dynamodb_endpoint:
          default: ""
          description: "This is your DynamoDB endpoint url.(if you are working with\
            \ AWS DynamoDB, just leave empty)."
          examples:
          - "http://localhost:9000"
          title: "Endpoint"
          type: "string"
        dynamodb_region:
          default: ""
          description: "The region of the DynamoDB."
          enum:
          - ""
          - "af-south-1"
          - "ap-east-1"
          - "ap-northeast-1"
          - "ap-northeast-2"
          - "ap-northeast-3"
          - "ap-south-1"
          - "ap-south-2"
          - "ap-southeast-1"
          - "ap-southeast-2"
          - "ap-southeast-3"
          - "ap-southeast-4"
          - "ca-central-1"
          - "ca-west-1"
          - "cn-north-1"
          - "cn-northwest-1"
          - "eu-central-1"
          - "eu-central-2"
          - "eu-north-1"
          - "eu-south-1"
          - "eu-south-2"
          - "eu-west-1"
          - "eu-west-2"
          - "eu-west-3"
          - "il-central-1"
          - "me-central-1"
          - "me-south-1"
          - "sa-east-1"
          - "us-east-1"
          - "us-east-2"
          - "us-gov-east-1"
          - "us-gov-west-1"
          - "us-west-1"
          - "us-west-2"
          title: "DynamoDB Region"
          type: "string"
        dynamodb_table_name_prefix:
          description: "The prefix to use when naming DynamoDB tables."
          examples:
          - "airbyte_sync"
          title: "Table name prefix"
          type: "string"
        secret_access_key:
          airbyte_secret: true
          description: "The corresponding secret to the access key id."
          examples:
          - "a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"
          title: "DynamoDB Access Key"
          type: "string"
      required:
      - "dynamodb_table_name_prefix"
      - "dynamodb_region"
      - "access_key_id"
      - "secret_access_key"
      title: "DynamoDB Destination Spec"
      type: "object"
    destination-snowflake:
      properties:
        credentials:
          description: ""
          oneOf:
          - order: 0
            properties:
              auth_type:
                const: "Key Pair Authentication"
                default: "Key Pair Authentication"
                enum:
                - "Key Pair Authentication"
                order: 0
                type: "string"
              private_key:
                airbyte_secret: true
                description: "RSA Private key to use for Snowflake connection. See\
                  \ the <a href=\"https://docs.airbyte.com/integrations/destinations/snowflake\"\
                  >docs</a> for more information on how to obtain this key."
                multiline: true
                title: "Private Key"
                type: "string"
                x-speakeasy-param-sensitive: true
              private_key_password:
                airbyte_secret: true
                description: "Passphrase for private key"
                title: "Passphrase"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "private_key"
            title: "Key Pair Authentication"
            type: "object"
          - order: 1
            properties:
              auth_type:
                const: "Username and Password"
                default: "Username and Password"
                enum:
                - "Username and Password"
                order: 0
                type: "string"
              password:
                airbyte_secret: true
                description: "Enter the password associated with the username."
                order: 1
                title: "Password"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "password"
            title: "Username and Password"
            type: "object"
          - airbyte_hidden: true
            order: 2
            properties:
              access_token:
                airbyte_secret: true
                description: "Enter you application's Access Token"
                title: "Access Token"
                type: "string"
                x-speakeasy-param-sensitive: true
              auth_type:
                const: "OAuth2.0"
                default: "OAuth2.0"
                enum:
                - "OAuth2.0"
                order: 0
                type: "string"
              client_id:
                airbyte_secret: true
                description: "Enter your application's Client ID"
                title: "Client ID"
                type: "string"
                x-speakeasy-param-sensitive: true
              client_secret:
                airbyte_secret: true
                description: "Enter your application's Client secret"
                title: "Client Secret"
                type: "string"
                x-speakeasy-param-sensitive: true
              refresh_token:
                airbyte_secret: true
                description: "Enter your application's Refresh Token"
                title: "Refresh Token"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "access_token"
            - "refresh_token"
            title: "OAuth2.0"
            type: "object"
          order: 6
          title: "Authorization Method"
          type: "object"
        database:
          description: "Enter the name of the <a href=\"https://docs.snowflake.com/en/sql-reference/ddl-database.html#database-schema-share-ddl\"\
            >database</a> you want to sync data into"
          examples:
          - "AIRBYTE_DATABASE"
          order: 3
          title: "Database"
          type: "string"
        disable_type_dedupe:
          default: false
          description: "Disable Writing Final Tables. WARNING! The data format in\
            \ _airbyte_data is likely stable but there are no guarantees that other\
            \ metadata columns will remain the same in future versions"
          order: 11
          title: "Disable Final Tables. (WARNING! Unstable option; Columns in raw\
            \ table schema might change between versions)"
          type: "boolean"
        host:
          description: "Enter your Snowflake account's <a href=\"https://docs.snowflake.com/en/user-guide/admin-account-identifier.html#using-an-account-locator-as-an-identifier\"\
            >locator</a> (in the format <account_locator>.<region>.<cloud>.snowflakecomputing.com)"
          examples:
          - "accountname.us-east-2.aws.snowflakecomputing.com"
          - "accountname.snowflakecomputing.com"
          order: 0
          pattern: "^(http(s)?:\\/\\/)?([^./?#]+\\.)?([^./?#]+\\.)?([^./?#]+\\.)?([^./?#]+\\\
            .(snowflakecomputing\\.com|localstack\\.cloud))$"
          pattern_descriptor: "{account_name}.snowflakecomputing.com or {accountname}.{aws_location}.aws.snowflakecomputing.com"
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Enter the additional properties to pass to the JDBC URL string\
            \ when connecting to the database (formatted as key=value pairs separated\
            \ by the symbol &). Example: key1=value1&key2=value2&key3=value3"
          order: 7
          title: "JDBC URL Params"
          type: "string"
        raw_data_schema:
          description: "The schema to write raw tables into (default: airbyte_internal)"
          order: 10
          title: "Raw Table Schema Name"
          type: "string"
        retention_period_days:
          default: 1
          description: "The number of days of Snowflake Time Travel to enable on the\
            \ tables. See <a href=\"https://docs.snowflake.com/en/user-guide/data-time-travel#data-retention-period\"\
            >Snowflake's documentation</a> for more information. Setting a nonzero\
            \ value will incur increased storage costs in your Snowflake instance."
          order: 13
          title: "Data Retention Period (days)"
          type: "integer"
        role:
          description: "Enter the <a href=\"https://docs.snowflake.com/en/user-guide/security-access-control-overview.html#roles\"\
            >role</a> that you want to use to access Snowflake"
          examples:
          - "AIRBYTE_ROLE"
          order: 1
          title: "Role"
          type: "string"
        schema:
          description: "Enter the name of the default <a href=\"https://docs.snowflake.com/en/sql-reference/ddl-database.html#database-schema-share-ddl\"\
            >schema</a>"
          examples:
          - "AIRBYTE_SCHEMA"
          order: 4
          title: "Default Schema"
          type: "string"
        use_merge_for_upsert:
          default: false
          description: "Use MERGE for de-duplication of final tables. This option\
            \ no effect if Final tables are disabled or Sync mode is not DEDUPE"
          order: 14
          title: "Use MERGE for De-duplication of final tables"
          type: "boolean"
        username:
          description: "Enter the name of the user you want to use to access the database"
          examples:
          - "AIRBYTE_USER"
          order: 5
          title: "Username"
          type: "string"
        warehouse:
          description: "Enter the name of the <a href=\"https://docs.snowflake.com/en/user-guide/warehouses-overview.html#overview-of-warehouses\"\
            >warehouse</a> that you want to use as a compute cluster"
          examples:
          - "AIRBYTE_WAREHOUSE"
          order: 2
          title: "Warehouse"
          type: "string"
        destinationType:
          title: "snowflake"
          const: "snowflake"
          enum:
          - "snowflake"
          order: 0
          type: "string"
      required:
      - "host"
      - "role"
      - "warehouse"
      - "database"
      - "schema"
      - "username"
      - "destinationType"
      title: "Snowflake Destination Spec"
      type: "object"
    destination-snowflake-update:
      properties:
        credentials:
          description: ""
          oneOf:
          - order: 0
            properties:
              auth_type:
                const: "Key Pair Authentication"
                default: "Key Pair Authentication"
                enum:
                - "Key Pair Authentication"
                order: 0
                type: "string"
              private_key:
                airbyte_secret: true
                description: "RSA Private key to use for Snowflake connection. See\
                  \ the <a href=\"https://docs.airbyte.com/integrations/destinations/snowflake\"\
                  >docs</a> for more information on how to obtain this key."
                multiline: true
                title: "Private Key"
                type: "string"
              private_key_password:
                airbyte_secret: true
                description: "Passphrase for private key"
                title: "Passphrase"
                type: "string"
            required:
            - "private_key"
            title: "Key Pair Authentication"
            type: "object"
          - order: 1
            properties:
              auth_type:
                const: "Username and Password"
                default: "Username and Password"
                enum:
                - "Username and Password"
                order: 0
                type: "string"
              password:
                airbyte_secret: true
                description: "Enter the password associated with the username."
                order: 1
                title: "Password"
                type: "string"
            required:
            - "password"
            title: "Username and Password"
            type: "object"
          - airbyte_hidden: true
            order: 2
            properties:
              access_token:
                airbyte_secret: true
                description: "Enter you application's Access Token"
                title: "Access Token"
                type: "string"
              auth_type:
                const: "OAuth2.0"
                default: "OAuth2.0"
                enum:
                - "OAuth2.0"
                order: 0
                type: "string"
              client_id:
                airbyte_secret: true
                description: "Enter your application's Client ID"
                title: "Client ID"
                type: "string"
              client_secret:
                airbyte_secret: true
                description: "Enter your application's Client secret"
                title: "Client Secret"
                type: "string"
              refresh_token:
                airbyte_secret: true
                description: "Enter your application's Refresh Token"
                title: "Refresh Token"
                type: "string"
            required:
            - "access_token"
            - "refresh_token"
            title: "OAuth2.0"
            type: "object"
          order: 6
          title: "Authorization Method"
          type: "object"
        database:
          description: "Enter the name of the <a href=\"https://docs.snowflake.com/en/sql-reference/ddl-database.html#database-schema-share-ddl\"\
            >database</a> you want to sync data into"
          examples:
          - "AIRBYTE_DATABASE"
          order: 3
          title: "Database"
          type: "string"
        disable_type_dedupe:
          default: false
          description: "Disable Writing Final Tables. WARNING! The data format in\
            \ _airbyte_data is likely stable but there are no guarantees that other\
            \ metadata columns will remain the same in future versions"
          order: 11
          title: "Disable Final Tables. (WARNING! Unstable option; Columns in raw\
            \ table schema might change between versions)"
          type: "boolean"
        host:
          description: "Enter your Snowflake account's <a href=\"https://docs.snowflake.com/en/user-guide/admin-account-identifier.html#using-an-account-locator-as-an-identifier\"\
            >locator</a> (in the format <account_locator>.<region>.<cloud>.snowflakecomputing.com)"
          examples:
          - "accountname.us-east-2.aws.snowflakecomputing.com"
          - "accountname.snowflakecomputing.com"
          order: 0
          pattern: "^(http(s)?:\\/\\/)?([^./?#]+\\.)?([^./?#]+\\.)?([^./?#]+\\.)?([^./?#]+\\\
            .(snowflakecomputing\\.com|localstack\\.cloud))$"
          pattern_descriptor: "{account_name}.snowflakecomputing.com or {accountname}.{aws_location}.aws.snowflakecomputing.com"
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Enter the additional properties to pass to the JDBC URL string\
            \ when connecting to the database (formatted as key=value pairs separated\
            \ by the symbol &). Example: key1=value1&key2=value2&key3=value3"
          order: 7
          title: "JDBC URL Params"
          type: "string"
        raw_data_schema:
          description: "The schema to write raw tables into (default: airbyte_internal)"
          order: 10
          title: "Raw Table Schema Name"
          type: "string"
        retention_period_days:
          default: 1
          description: "The number of days of Snowflake Time Travel to enable on the\
            \ tables. See <a href=\"https://docs.snowflake.com/en/user-guide/data-time-travel#data-retention-period\"\
            >Snowflake's documentation</a> for more information. Setting a nonzero\
            \ value will incur increased storage costs in your Snowflake instance."
          order: 13
          title: "Data Retention Period (days)"
          type: "integer"
        role:
          description: "Enter the <a href=\"https://docs.snowflake.com/en/user-guide/security-access-control-overview.html#roles\"\
            >role</a> that you want to use to access Snowflake"
          examples:
          - "AIRBYTE_ROLE"
          order: 1
          title: "Role"
          type: "string"
        schema:
          description: "Enter the name of the default <a href=\"https://docs.snowflake.com/en/sql-reference/ddl-database.html#database-schema-share-ddl\"\
            >schema</a>"
          examples:
          - "AIRBYTE_SCHEMA"
          order: 4
          title: "Default Schema"
          type: "string"
        use_merge_for_upsert:
          default: false
          description: "Use MERGE for de-duplication of final tables. This option\
            \ no effect if Final tables are disabled or Sync mode is not DEDUPE"
          order: 14
          title: "Use MERGE for De-duplication of final tables"
          type: "boolean"
        username:
          description: "Enter the name of the user you want to use to access the database"
          examples:
          - "AIRBYTE_USER"
          order: 5
          title: "Username"
          type: "string"
        warehouse:
          description: "Enter the name of the <a href=\"https://docs.snowflake.com/en/user-guide/warehouses-overview.html#overview-of-warehouses\"\
            >warehouse</a> that you want to use as a compute cluster"
          examples:
          - "AIRBYTE_WAREHOUSE"
          order: 2
          title: "Warehouse"
          type: "string"
      required:
      - "host"
      - "role"
      - "warehouse"
      - "database"
      - "schema"
      - "username"
      title: "Snowflake Destination Spec"
      type: "object"
    destination-oracle:
      properties:
        encryption:
          description: "The encryption method which is used when communicating with\
            \ the database."
          oneOf:
          - description: "Data transfer will not be encrypted."
            properties:
              encryption_method:
                const: "unencrypted"
                default: "unencrypted"
                enum:
                - "unencrypted"
                type: "string"
            required:
            - "encryption_method"
            title: "Unencrypted"
          - description: "The native network encryption gives you the ability to encrypt\
              \ database connections, without the configuration overhead of TCP/IP\
              \ and SSL/TLS and without the need to open and listen on different ports."
            properties:
              encryption_algorithm:
                default: "AES256"
                description: "This parameter defines the database encryption algorithm."
                enum:
                - "AES256"
                - "RC4_56"
                - "3DES168"
                title: "Encryption Algorithm"
                type: "string"
              encryption_method:
                const: "client_nne"
                default: "client_nne"
                enum:
                - "client_nne"
                type: "string"
            required:
            - "encryption_method"
            title: "Native Network Encryption (NNE)"
          - description: "Verify and use the certificate provided by the server."
            properties:
              encryption_method:
                const: "encrypted_verify_certificate"
                default: "encrypted_verify_certificate"
                enum:
                - "encrypted_verify_certificate"
                type: "string"
              ssl_certificate:
                airbyte_secret: true
                description: "Privacy Enhanced Mail (PEM) files are concatenated certificate\
                  \ containers frequently used in certificate installations."
                multiline: true
                title: "SSL PEM file"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "encryption_method"
            - "ssl_certificate"
            title: "TLS Encrypted (verify certificate)"
          order: 7
          title: "Encryption"
          type: "object"
        host:
          description: "The hostname of the database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 5
          title: "JDBC URL Params"
          type: "string"
        password:
          airbyte_secret: true
          description: "The password associated with the username."
          order: 4
          title: "Password"
          type: "string"
          x-speakeasy-param-sensitive: true
        port:
          default: 1521
          description: "The port of the database."
          examples:
          - "1521"
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        raw_data_schema:
          description: "The schema to write raw tables into (default: airbyte_internal)"
          order: 7
          title: "Raw Table Schema Name"
          type: "string"
        schema:
          default: "airbyte"
          description: "The default schema is used as the target schema for all statements\
            \ issued from the connection that do not explicitly specify a schema name.\
            \ The usual value for this field is \"airbyte\".  In Oracle, schemas and\
            \ users are the same thing, so the \"user\" parameter is used as the login\
            \ credentials and this is used for the default Airbyte message schema."
          examples:
          - "airbyte"
          order: 6
          title: "Default Schema"
          type: "string"
        sid:
          description: "The System Identifier uniquely distinguishes the instance\
            \ from any other instance on the same computer."
          order: 2
          title: "SID"
          type: "string"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
                x-speakeasy-param-sensitive: true
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        username:
          description: "The username to access the database. This user must have CREATE\
            \ USER privileges in the database."
          order: 3
          title: "User"
          type: "string"
        destinationType:
          title: "oracle"
          const: "oracle"
          enum:
          - "oracle"
          order: 0
          type: "string"
      required:
      - "host"
      - "port"
      - "username"
      - "sid"
      - "destinationType"
      title: "Oracle Destination Spec"
      type: "object"
    destination-oracle-update:
      properties:
        encryption:
          description: "The encryption method which is used when communicating with\
            \ the database."
          oneOf:
          - description: "Data transfer will not be encrypted."
            properties:
              encryption_method:
                const: "unencrypted"
                default: "unencrypted"
                enum:
                - "unencrypted"
                type: "string"
            required:
            - "encryption_method"
            title: "Unencrypted"
          - description: "The native network encryption gives you the ability to encrypt\
              \ database connections, without the configuration overhead of TCP/IP\
              \ and SSL/TLS and without the need to open and listen on different ports."
            properties:
              encryption_algorithm:
                default: "AES256"
                description: "This parameter defines the database encryption algorithm."
                enum:
                - "AES256"
                - "RC4_56"
                - "3DES168"
                title: "Encryption Algorithm"
                type: "string"
              encryption_method:
                const: "client_nne"
                default: "client_nne"
                enum:
                - "client_nne"
                type: "string"
            required:
            - "encryption_method"
            title: "Native Network Encryption (NNE)"
          - description: "Verify and use the certificate provided by the server."
            properties:
              encryption_method:
                const: "encrypted_verify_certificate"
                default: "encrypted_verify_certificate"
                enum:
                - "encrypted_verify_certificate"
                type: "string"
              ssl_certificate:
                airbyte_secret: true
                description: "Privacy Enhanced Mail (PEM) files are concatenated certificate\
                  \ containers frequently used in certificate installations."
                multiline: true
                title: "SSL PEM file"
                type: "string"
            required:
            - "encryption_method"
            - "ssl_certificate"
            title: "TLS Encrypted (verify certificate)"
          order: 7
          title: "Encryption"
          type: "object"
        host:
          description: "The hostname of the database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 5
          title: "JDBC URL Params"
          type: "string"
        password:
          airbyte_secret: true
          description: "The password associated with the username."
          order: 4
          title: "Password"
          type: "string"
        port:
          default: 1521
          description: "The port of the database."
          examples:
          - "1521"
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        raw_data_schema:
          description: "The schema to write raw tables into (default: airbyte_internal)"
          order: 7
          title: "Raw Table Schema Name"
          type: "string"
        schema:
          default: "airbyte"
          description: "The default schema is used as the target schema for all statements\
            \ issued from the connection that do not explicitly specify a schema name.\
            \ The usual value for this field is \"airbyte\".  In Oracle, schemas and\
            \ users are the same thing, so the \"user\" parameter is used as the login\
            \ credentials and this is used for the default Airbyte message schema."
          examples:
          - "airbyte"
          order: 6
          title: "Default Schema"
          type: "string"
        sid:
          description: "The System Identifier uniquely distinguishes the instance\
            \ from any other instance on the same computer."
          order: 2
          title: "SID"
          type: "string"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        username:
          description: "The username to access the database. This user must have CREATE\
            \ USER privileges in the database."
          order: 3
          title: "User"
          type: "string"
      required:
      - "host"
      - "port"
      - "username"
      - "sid"
      title: "Oracle Destination Spec"
      type: "object"
    destination-milvus:
      description: "The configuration model for the Vector DB based destinations.\
        \ This model is used to generate the UI for the destination configuration,\n\
        as well as to provide type safety for the configuration passed to the destination.\n\
        \nThe configuration model is composed of four parts:\n* Processing configuration\n\
        * Embedding configuration\n* Indexing configuration\n* Advanced configuration\n\
        \nProcessing, embedding and advanced configuration are provided by this base\
        \ class, while the indexing configuration is provided by the destination connector\
        \ in the sub class."
      groups:
      - id: "processing"
        title: "Processing"
      - id: "embedding"
        title: "Embedding"
      - id: "indexing"
        title: "Indexing"
      - id: "advanced"
        title: "Advanced"
      properties:
        embedding:
          description: "Embedding configuration"
          group: "embedding"
          oneOf:
          - description: "Use the OpenAI API to embed text. This option is using the\
              \ text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              mode:
                const: "openai"
                default: "openai"
                enum:
                - "openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                title: "OpenAI API key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "openai_key"
            - "mode"
            title: "OpenAI"
            type: "object"
          - description: "Use the Cohere API to embed text."
            properties:
              cohere_key:
                airbyte_secret: true
                title: "Cohere API key"
                type: "string"
                x-speakeasy-param-sensitive: true
              mode:
                const: "cohere"
                default: "cohere"
                enum:
                - "cohere"
                title: "Mode"
                type: "string"
            required:
            - "cohere_key"
            - "mode"
            title: "Cohere"
            type: "object"
          - description: "Use a fake embedding made out of random vectors with 1536\
              \ embedding dimensions. This is useful for testing the data pipeline\
              \ without incurring any costs."
            properties:
              mode:
                const: "fake"
                default: "fake"
                enum:
                - "fake"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "Fake"
            type: "object"
          - description: "Use the Azure-hosted OpenAI API to embed text. This option\
              \ is using the text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              api_base:
                description: "The base URL for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "https://your-resource-name.openai.azure.com"
                title: "Resource base URL"
                type: "string"
              deployment:
                description: "The deployment for your Azure OpenAI resource.  You\
                  \ can find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "your-resource-name"
                title: "Deployment"
                type: "string"
              mode:
                const: "azure_openai"
                default: "azure_openai"
                enum:
                - "azure_openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                description: "The API key for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                title: "Azure OpenAI API key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "openai_key"
            - "api_base"
            - "deployment"
            - "mode"
            title: "Azure OpenAI"
            type: "object"
          - description: "Use a service that's compatible with the OpenAI API to embed\
              \ text."
            properties:
              api_key:
                airbyte_secret: true
                default: ""
                title: "API key"
                type: "string"
                x-speakeasy-param-sensitive: true
              base_url:
                description: "The base URL for your OpenAI-compatible service"
                examples:
                - "https://your-service-name.com"
                title: "Base URL"
                type: "string"
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              mode:
                const: "openai_compatible"
                default: "openai_compatible"
                enum:
                - "openai_compatible"
                title: "Mode"
                type: "string"
              model_name:
                default: "text-embedding-ada-002"
                description: "The name of the model to use for embedding"
                examples:
                - "text-embedding-ada-002"
                title: "Model name"
                type: "string"
            required:
            - "base_url"
            - "dimensions"
            - "mode"
            title: "OpenAI-compatible"
            type: "object"
          title: "Embedding"
          type: "object"
        indexing:
          description: "Indexing configuration"
          group: "indexing"
          properties:
            auth:
              description: "Authentication method"
              oneOf:
              - description: "Authenticate using an API token (suitable for Zilliz\
                  \ Cloud)"
                properties:
                  mode:
                    const: "token"
                    default: "token"
                    enum:
                    - "token"
                    title: "Mode"
                    type: "string"
                  token:
                    airbyte_secret: true
                    description: "API Token for the Milvus instance"
                    title: "API Token"
                    type: "string"
                    x-speakeasy-param-sensitive: true
                required:
                - "token"
                - "mode"
                title: "API Token"
                type: "object"
              - description: "Authenticate using username and password (suitable for\
                  \ self-managed Milvus clusters)"
                properties:
                  mode:
                    const: "username_password"
                    default: "username_password"
                    enum:
                    - "username_password"
                    title: "Mode"
                    type: "string"
                  password:
                    airbyte_secret: true
                    description: "Password for the Milvus instance"
                    order: 2
                    title: "Password"
                    type: "string"
                    x-speakeasy-param-sensitive: true
                  username:
                    description: "Username for the Milvus instance"
                    order: 1
                    title: "Username"
                    type: "string"
                required:
                - "username"
                - "password"
                - "mode"
                title: "Username/Password"
                type: "object"
              - description: "Do not authenticate (suitable for locally running test\
                  \ clusters, do not use for clusters with public IP addresses)"
                properties:
                  mode:
                    const: "no_auth"
                    default: "no_auth"
                    enum:
                    - "no_auth"
                    title: "Mode"
                    type: "string"
                required:
                - "mode"
                title: "No auth"
                type: "object"
              order: 2
              title: "Authentication"
              type: "object"
            collection:
              description: "The collection to load data into"
              order: 3
              title: "Collection Name"
              type: "string"
            db:
              default: ""
              description: "The database to connect to"
              title: "Database Name"
              type: "string"
            host:
              description: "The public endpoint of the Milvus instance. "
              examples:
              - "https://my-instance.zone.zillizcloud.com"
              - "tcp://host.docker.internal:19530"
              - "tcp://my-local-milvus:19530"
              order: 1
              title: "Public Endpoint"
              type: "string"
            text_field:
              default: "text"
              description: "The field in the entity that contains the embedded text"
              title: "Text Field"
              type: "string"
            vector_field:
              default: "vector"
              description: "The field in the entity that contains the vector"
              title: "Vector Field"
              type: "string"
          required:
          - "host"
          - "collection"
          - "auth"
          title: "Indexing"
          type: "object"
        omit_raw_text:
          default: false
          description: "Do not store the text that gets embedded along with the vector\
            \ and the metadata in the destination. If set to true, only the vector\
            \ and the metadata will be stored - in this case raw text for LLM use\
            \ cases needs to be retrieved from another source."
          group: "advanced"
          title: "Do not store raw text"
          type: "boolean"
        processing:
          group: "processing"
          properties:
            chunk_overlap:
              default: 0
              description: "Size of overlap between chunks in tokens to store in vector\
                \ store to better capture relevant context"
              title: "Chunk overlap"
              type: "integer"
            chunk_size:
              description: "Size of chunks in tokens to store in vector store (make\
                \ sure it is not too big for the context if your LLM)"
              maximum: 8191
              minimum: 1
              title: "Chunk size"
              type: "integer"
            field_name_mappings:
              default: []
              description: "List of fields to rename. Not applicable for nested fields,\
                \ but can be used to rename fields already flattened via dot notation."
              items:
                properties:
                  from_field:
                    description: "The field name in the source"
                    title: "From field name"
                    type: "string"
                  to_field:
                    description: "The field name to use in the destination"
                    title: "To field name"
                    type: "string"
                required:
                - "from_field"
                - "to_field"
                title: "FieldNameMappingConfigModel"
                type: "object"
              title: "Field name mappings"
              type: "array"
            metadata_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be stored as\
                \ metadata. The field list is applied to all streams in the same way\
                \ and non-existing fields are ignored. If none are defined, all fields\
                \ are considered metadata fields. When specifying text fields, you\
                \ can access nested fields in the record by using dot notation, e.g.\
                \ `user.name` will access the `name` field in the `user` object. It's\
                \ also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array. When specifying nested paths, all matching\
                \ values are flattened into an array set to a field named by the path."
              examples:
              - "age"
              - "user"
              - "user.name"
              items:
                type: "string"
              title: "Fields to store as metadata"
              type: "array"
            text_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be used to calculate\
                \ the embedding. The field list is applied to all streams in the same\
                \ way and non-existing fields are ignored. If none are defined, all\
                \ fields are considered text fields. When specifying text fields,\
                \ you can access nested fields in the record by using dot notation,\
                \ e.g. `user.name` will access the `name` field in the `user` object.\
                \ It's also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array."
              examples:
              - "text"
              - "user.name"
              - "users.*.name"
              items:
                type: "string"
              title: "Text fields to embed"
              type: "array"
            text_splitter:
              description: "Split text fields into chunks based on the specified method."
              oneOf:
              - description: "Split the text by the list of separators until the chunk\
                  \ size is reached, using the earlier mentioned separators where\
                  \ possible. This is useful for splitting text fields by paragraphs,\
                  \ sentences, words, etc."
                properties:
                  keep_separator:
                    default: false
                    description: "Whether to keep the separator in the resulting chunks"
                    title: "Keep separator"
                    type: "boolean"
                  mode:
                    const: "separator"
                    default: "separator"
                    enum:
                    - "separator"
                    title: "Mode"
                    type: "string"
                  separators:
                    default:
                    - "\"\\n\\n\""
                    - "\"\\n\""
                    - "\" \""
                    - "\"\""
                    description: "List of separator strings to split text fields by.\
                      \ The separator itself needs to be wrapped in double quotes,\
                      \ e.g. to split by the dot character, use \".\". To split by\
                      \ a newline, use \"\\n\"."
                    items:
                      type: "string"
                    title: "Separators"
                    type: "array"
                required:
                - "mode"
                title: "By Separator"
                type: "object"
              - description: "Split the text by Markdown headers down to the specified\
                  \ header level. If the chunk size fits multiple sections, they will\
                  \ be combined into a single chunk."
                properties:
                  mode:
                    const: "markdown"
                    default: "markdown"
                    enum:
                    - "markdown"
                    title: "Mode"
                    type: "string"
                  split_level:
                    default: 1
                    description: "Level of markdown headers to split text fields by.\
                      \ Headings down to the specified level will be used as split\
                      \ points"
                    maximum: 6
                    minimum: 1
                    title: "Split level"
                    type: "integer"
                required:
                - "mode"
                title: "By Markdown header"
                type: "object"
              - description: "Split the text by suitable delimiters based on the programming\
                  \ language. This is useful for splitting code into chunks."
                properties:
                  language:
                    description: "Split code in suitable places based on the programming\
                      \ language"
                    enum:
                    - "cpp"
                    - "go"
                    - "java"
                    - "js"
                    - "php"
                    - "proto"
                    - "python"
                    - "rst"
                    - "ruby"
                    - "rust"
                    - "scala"
                    - "swift"
                    - "markdown"
                    - "latex"
                    - "html"
                    - "sol"
                    title: "Language"
                    type: "string"
                  mode:
                    const: "code"
                    default: "code"
                    enum:
                    - "code"
                    title: "Mode"
                    type: "string"
                required:
                - "language"
                - "mode"
                title: "By Programming Language"
                type: "object"
              title: "Text splitter"
              type: "object"
          required:
          - "chunk_size"
          title: "ProcessingConfigModel"
          type: "object"
        destinationType:
          title: "milvus"
          const: "milvus"
          enum:
          - "milvus"
          order: 0
          type: "string"
      required:
      - "embedding"
      - "processing"
      - "indexing"
      - "destinationType"
      title: "Destination Config"
      type: "object"
    destination-milvus-update:
      description: "The configuration model for the Vector DB based destinations.\
        \ This model is used to generate the UI for the destination configuration,\n\
        as well as to provide type safety for the configuration passed to the destination.\n\
        \nThe configuration model is composed of four parts:\n* Processing configuration\n\
        * Embedding configuration\n* Indexing configuration\n* Advanced configuration\n\
        \nProcessing, embedding and advanced configuration are provided by this base\
        \ class, while the indexing configuration is provided by the destination connector\
        \ in the sub class."
      groups:
      - id: "processing"
        title: "Processing"
      - id: "embedding"
        title: "Embedding"
      - id: "indexing"
        title: "Indexing"
      - id: "advanced"
        title: "Advanced"
      properties:
        embedding:
          description: "Embedding configuration"
          group: "embedding"
          oneOf:
          - description: "Use the OpenAI API to embed text. This option is using the\
              \ text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              mode:
                const: "openai"
                default: "openai"
                enum:
                - "openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                title: "OpenAI API key"
                type: "string"
            required:
            - "openai_key"
            - "mode"
            title: "OpenAI"
            type: "object"
          - description: "Use the Cohere API to embed text."
            properties:
              cohere_key:
                airbyte_secret: true
                title: "Cohere API key"
                type: "string"
              mode:
                const: "cohere"
                default: "cohere"
                enum:
                - "cohere"
                title: "Mode"
                type: "string"
            required:
            - "cohere_key"
            - "mode"
            title: "Cohere"
            type: "object"
          - description: "Use a fake embedding made out of random vectors with 1536\
              \ embedding dimensions. This is useful for testing the data pipeline\
              \ without incurring any costs."
            properties:
              mode:
                const: "fake"
                default: "fake"
                enum:
                - "fake"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "Fake"
            type: "object"
          - description: "Use the Azure-hosted OpenAI API to embed text. This option\
              \ is using the text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              api_base:
                description: "The base URL for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "https://your-resource-name.openai.azure.com"
                title: "Resource base URL"
                type: "string"
              deployment:
                description: "The deployment for your Azure OpenAI resource.  You\
                  \ can find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "your-resource-name"
                title: "Deployment"
                type: "string"
              mode:
                const: "azure_openai"
                default: "azure_openai"
                enum:
                - "azure_openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                description: "The API key for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                title: "Azure OpenAI API key"
                type: "string"
            required:
            - "openai_key"
            - "api_base"
            - "deployment"
            - "mode"
            title: "Azure OpenAI"
            type: "object"
          - description: "Use a service that's compatible with the OpenAI API to embed\
              \ text."
            properties:
              api_key:
                airbyte_secret: true
                default: ""
                title: "API key"
                type: "string"
              base_url:
                description: "The base URL for your OpenAI-compatible service"
                examples:
                - "https://your-service-name.com"
                title: "Base URL"
                type: "string"
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              mode:
                const: "openai_compatible"
                default: "openai_compatible"
                enum:
                - "openai_compatible"
                title: "Mode"
                type: "string"
              model_name:
                default: "text-embedding-ada-002"
                description: "The name of the model to use for embedding"
                examples:
                - "text-embedding-ada-002"
                title: "Model name"
                type: "string"
            required:
            - "base_url"
            - "dimensions"
            - "mode"
            title: "OpenAI-compatible"
            type: "object"
          title: "Embedding"
          type: "object"
        indexing:
          description: "Indexing configuration"
          group: "indexing"
          properties:
            auth:
              description: "Authentication method"
              oneOf:
              - description: "Authenticate using an API token (suitable for Zilliz\
                  \ Cloud)"
                properties:
                  mode:
                    const: "token"
                    default: "token"
                    enum:
                    - "token"
                    title: "Mode"
                    type: "string"
                  token:
                    airbyte_secret: true
                    description: "API Token for the Milvus instance"
                    title: "API Token"
                    type: "string"
                required:
                - "token"
                - "mode"
                title: "API Token"
                type: "object"
              - description: "Authenticate using username and password (suitable for\
                  \ self-managed Milvus clusters)"
                properties:
                  mode:
                    const: "username_password"
                    default: "username_password"
                    enum:
                    - "username_password"
                    title: "Mode"
                    type: "string"
                  password:
                    airbyte_secret: true
                    description: "Password for the Milvus instance"
                    order: 2
                    title: "Password"
                    type: "string"
                  username:
                    description: "Username for the Milvus instance"
                    order: 1
                    title: "Username"
                    type: "string"
                required:
                - "username"
                - "password"
                - "mode"
                title: "Username/Password"
                type: "object"
              - description: "Do not authenticate (suitable for locally running test\
                  \ clusters, do not use for clusters with public IP addresses)"
                properties:
                  mode:
                    const: "no_auth"
                    default: "no_auth"
                    enum:
                    - "no_auth"
                    title: "Mode"
                    type: "string"
                required:
                - "mode"
                title: "No auth"
                type: "object"
              order: 2
              title: "Authentication"
              type: "object"
            collection:
              description: "The collection to load data into"
              order: 3
              title: "Collection Name"
              type: "string"
            db:
              default: ""
              description: "The database to connect to"
              title: "Database Name"
              type: "string"
            host:
              description: "The public endpoint of the Milvus instance. "
              examples:
              - "https://my-instance.zone.zillizcloud.com"
              - "tcp://host.docker.internal:19530"
              - "tcp://my-local-milvus:19530"
              order: 1
              title: "Public Endpoint"
              type: "string"
            text_field:
              default: "text"
              description: "The field in the entity that contains the embedded text"
              title: "Text Field"
              type: "string"
            vector_field:
              default: "vector"
              description: "The field in the entity that contains the vector"
              title: "Vector Field"
              type: "string"
          required:
          - "host"
          - "collection"
          - "auth"
          title: "Indexing"
          type: "object"
        omit_raw_text:
          default: false
          description: "Do not store the text that gets embedded along with the vector\
            \ and the metadata in the destination. If set to true, only the vector\
            \ and the metadata will be stored - in this case raw text for LLM use\
            \ cases needs to be retrieved from another source."
          group: "advanced"
          title: "Do not store raw text"
          type: "boolean"
        processing:
          group: "processing"
          properties:
            chunk_overlap:
              default: 0
              description: "Size of overlap between chunks in tokens to store in vector\
                \ store to better capture relevant context"
              title: "Chunk overlap"
              type: "integer"
            chunk_size:
              description: "Size of chunks in tokens to store in vector store (make\
                \ sure it is not too big for the context if your LLM)"
              maximum: 8191
              minimum: 1
              title: "Chunk size"
              type: "integer"
            field_name_mappings:
              default: []
              description: "List of fields to rename. Not applicable for nested fields,\
                \ but can be used to rename fields already flattened via dot notation."
              items:
                properties:
                  from_field:
                    description: "The field name in the source"
                    title: "From field name"
                    type: "string"
                  to_field:
                    description: "The field name to use in the destination"
                    title: "To field name"
                    type: "string"
                required:
                - "from_field"
                - "to_field"
                title: "FieldNameMappingConfigModel"
                type: "object"
              title: "Field name mappings"
              type: "array"
            metadata_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be stored as\
                \ metadata. The field list is applied to all streams in the same way\
                \ and non-existing fields are ignored. If none are defined, all fields\
                \ are considered metadata fields. When specifying text fields, you\
                \ can access nested fields in the record by using dot notation, e.g.\
                \ `user.name` will access the `name` field in the `user` object. It's\
                \ also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array. When specifying nested paths, all matching\
                \ values are flattened into an array set to a field named by the path."
              examples:
              - "age"
              - "user"
              - "user.name"
              items:
                type: "string"
              title: "Fields to store as metadata"
              type: "array"
            text_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be used to calculate\
                \ the embedding. The field list is applied to all streams in the same\
                \ way and non-existing fields are ignored. If none are defined, all\
                \ fields are considered text fields. When specifying text fields,\
                \ you can access nested fields in the record by using dot notation,\
                \ e.g. `user.name` will access the `name` field in the `user` object.\
                \ It's also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array."
              examples:
              - "text"
              - "user.name"
              - "users.*.name"
              items:
                type: "string"
              title: "Text fields to embed"
              type: "array"
            text_splitter:
              description: "Split text fields into chunks based on the specified method."
              oneOf:
              - description: "Split the text by the list of separators until the chunk\
                  \ size is reached, using the earlier mentioned separators where\
                  \ possible. This is useful for splitting text fields by paragraphs,\
                  \ sentences, words, etc."
                properties:
                  keep_separator:
                    default: false
                    description: "Whether to keep the separator in the resulting chunks"
                    title: "Keep separator"
                    type: "boolean"
                  mode:
                    const: "separator"
                    default: "separator"
                    enum:
                    - "separator"
                    title: "Mode"
                    type: "string"
                  separators:
                    default:
                    - "\"\\n\\n\""
                    - "\"\\n\""
                    - "\" \""
                    - "\"\""
                    description: "List of separator strings to split text fields by.\
                      \ The separator itself needs to be wrapped in double quotes,\
                      \ e.g. to split by the dot character, use \".\". To split by\
                      \ a newline, use \"\\n\"."
                    items:
                      type: "string"
                    title: "Separators"
                    type: "array"
                required:
                - "mode"
                title: "By Separator"
                type: "object"
              - description: "Split the text by Markdown headers down to the specified\
                  \ header level. If the chunk size fits multiple sections, they will\
                  \ be combined into a single chunk."
                properties:
                  mode:
                    const: "markdown"
                    default: "markdown"
                    enum:
                    - "markdown"
                    title: "Mode"
                    type: "string"
                  split_level:
                    default: 1
                    description: "Level of markdown headers to split text fields by.\
                      \ Headings down to the specified level will be used as split\
                      \ points"
                    maximum: 6
                    minimum: 1
                    title: "Split level"
                    type: "integer"
                required:
                - "mode"
                title: "By Markdown header"
                type: "object"
              - description: "Split the text by suitable delimiters based on the programming\
                  \ language. This is useful for splitting code into chunks."
                properties:
                  language:
                    description: "Split code in suitable places based on the programming\
                      \ language"
                    enum:
                    - "cpp"
                    - "go"
                    - "java"
                    - "js"
                    - "php"
                    - "proto"
                    - "python"
                    - "rst"
                    - "ruby"
                    - "rust"
                    - "scala"
                    - "swift"
                    - "markdown"
                    - "latex"
                    - "html"
                    - "sol"
                    title: "Language"
                    type: "string"
                  mode:
                    const: "code"
                    default: "code"
                    enum:
                    - "code"
                    title: "Mode"
                    type: "string"
                required:
                - "language"
                - "mode"
                title: "By Programming Language"
                type: "object"
              title: "Text splitter"
              type: "object"
          required:
          - "chunk_size"
          title: "ProcessingConfigModel"
          type: "object"
      required:
      - "embedding"
      - "processing"
      - "indexing"
      title: "Destination Config"
      type: "object"
    destination-firebolt:
      properties:
        account:
          description: "Firebolt account to login."
          title: "Account"
          type: "string"
        client_id:
          description: "Firebolt service account ID."
          examples:
          - "bbl9qth066hmxkwyb0hy2iwk8ktez9dz"
          order: 0
          title: "Client ID"
          type: "string"
        client_secret:
          airbyte_secret: true
          description: "Firebolt secret, corresponding to the service account ID."
          order: 1
          title: "Client Secret"
          type: "string"
          x-speakeasy-param-sensitive: true
        database:
          description: "The database to connect to."
          title: "Database"
          type: "string"
        engine:
          description: "Engine name to connect to."
          title: "Engine"
          type: "string"
        host:
          description: "The host name of your Firebolt database."
          examples:
          - "api.app.firebolt.io"
          title: "Host"
          type: "string"
        loading_method:
          description: "Loading method used to select the way data will be uploaded\
            \ to Firebolt"
          oneOf:
          - additionalProperties: false
            properties:
              method:
                const: "SQL"
                type: "string"
                enum:
                - "SQL"
            required:
            - "method"
            title: "SQL Inserts"
          - additionalProperties: false
            properties:
              aws_key_id:
                airbyte_secret: true
                description: "AWS access key granting read and write access to S3."
                title: "AWS Key ID"
                type: "string"
                x-speakeasy-param-sensitive: true
              aws_key_secret:
                airbyte_secret: true
                description: "Corresponding secret part of the AWS Key"
                title: "AWS Key Secret"
                type: "string"
                x-speakeasy-param-sensitive: true
              method:
                const: "S3"
                type: "string"
                enum:
                - "S3"
              s3_bucket:
                description: "The name of the S3 bucket."
                title: "S3 bucket name"
                type: "string"
              s3_region:
                description: "Region name of the S3 bucket."
                examples:
                - "us-east-1"
                title: "S3 region name"
                type: "string"
            required:
            - "method"
            - "s3_bucket"
            - "s3_region"
            - "aws_key_id"
            - "aws_key_secret"
            title: "External Table via S3"
          title: "Loading Method"
          type: "object"
        destinationType:
          title: "firebolt"
          const: "firebolt"
          enum:
          - "firebolt"
          order: 0
          type: "string"
      required:
      - "client_id"
      - "client_secret"
      - "account"
      - "database"
      - "engine"
      - "destinationType"
      title: "Firebolt Spec"
      type: "object"
    destination-firebolt-update:
      properties:
        account:
          description: "Firebolt account to login."
          title: "Account"
          type: "string"
        client_id:
          description: "Firebolt service account ID."
          examples:
          - "bbl9qth066hmxkwyb0hy2iwk8ktez9dz"
          order: 0
          title: "Client ID"
          type: "string"
        client_secret:
          airbyte_secret: true
          description: "Firebolt secret, corresponding to the service account ID."
          order: 1
          title: "Client Secret"
          type: "string"
        database:
          description: "The database to connect to."
          title: "Database"
          type: "string"
        engine:
          description: "Engine name to connect to."
          title: "Engine"
          type: "string"
        host:
          description: "The host name of your Firebolt database."
          examples:
          - "api.app.firebolt.io"
          title: "Host"
          type: "string"
        loading_method:
          description: "Loading method used to select the way data will be uploaded\
            \ to Firebolt"
          oneOf:
          - additionalProperties: false
            properties:
              method:
                const: "SQL"
                type: "string"
                enum:
                - "SQL"
            required:
            - "method"
            title: "SQL Inserts"
          - additionalProperties: false
            properties:
              aws_key_id:
                airbyte_secret: true
                description: "AWS access key granting read and write access to S3."
                title: "AWS Key ID"
                type: "string"
              aws_key_secret:
                airbyte_secret: true
                description: "Corresponding secret part of the AWS Key"
                title: "AWS Key Secret"
                type: "string"
              method:
                const: "S3"
                type: "string"
                enum:
                - "S3"
              s3_bucket:
                description: "The name of the S3 bucket."
                title: "S3 bucket name"
                type: "string"
              s3_region:
                description: "Region name of the S3 bucket."
                examples:
                - "us-east-1"
                title: "S3 region name"
                type: "string"
            required:
            - "method"
            - "s3_bucket"
            - "s3_region"
            - "aws_key_id"
            - "aws_key_secret"
            title: "External Table via S3"
          title: "Loading Method"
          type: "object"
      required:
      - "client_id"
      - "client_secret"
      - "account"
      - "database"
      - "engine"
      title: "Firebolt Spec"
      type: "object"
    destination-google-sheets:
      properties:
        credentials:
          description: "Authentication method to access Google Sheets"
          oneOf:
          - properties:
              auth_type:
                const: "oauth2.0"
                default: "oauth2.0"
                order: 0
                type: "string"
                enum:
                - "oauth2.0"
              client_id:
                airbyte_secret: true
                description: "The Client ID of your Google Sheets developer application."
                title: "Client ID"
                type: "string"
                x-speakeasy-param-sensitive: true
              client_secret:
                airbyte_secret: true
                description: "The Client Secret of your Google Sheets developer application."
                title: "Client Secret"
                type: "string"
                x-speakeasy-param-sensitive: true
              refresh_token:
                airbyte_secret: true
                description: "The token for obtaining new access token."
                title: "Refresh Token"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "auth_type"
            - "client_id"
            - "client_secret"
            - "refresh_token"
            title: "Authenticate via Google (OAuth)"
            type: "object"
          - properties:
              auth_type:
                const: "service"
                default: "service"
                order: 0
                type: "string"
                enum:
                - "service"
              service_account_info:
                airbyte_secret: true
                description: "Enter your service account key in JSON format. See the\
                  \ <a href='https://docs.airbyte.com/integrations/destinations/google-sheets#service-account'>docs</a>\
                  \ for more information on how to generate this key."
                title: "Service Account Information"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "auth_type"
            - "service_account_info"
            title: "Service Account Key Authentication"
            type: "object"
          title: "Authentication"
          type: "object"
        spreadsheet_id:
          description: "The link to your spreadsheet. See <a href='https://docs.airbyte.com/integrations/destinations/google-sheets#sheetlink'>this\
            \ guide</a> for more details."
          examples:
          - "https://docs.google.com/spreadsheets/d/1hLd9Qqti3UyLXZB2aFfUWDT7BG/edit"
          title: "Spreadsheet Link"
          type: "string"
        destinationType:
          title: "google-sheets"
          const: "google-sheets"
          enum:
          - "google-sheets"
          order: 0
          type: "string"
      required:
      - "spreadsheet_id"
      - "credentials"
      - "destinationType"
      title: "Destination Google Sheets"
      type: "object"
    destination-google-sheets-update:
      properties:
        credentials:
          description: "Authentication method to access Google Sheets"
          oneOf:
          - properties:
              auth_type:
                const: "oauth2.0"
                default: "oauth2.0"
                order: 0
                type: "string"
                enum:
                - "oauth2.0"
              client_id:
                airbyte_secret: true
                description: "The Client ID of your Google Sheets developer application."
                title: "Client ID"
                type: "string"
              client_secret:
                airbyte_secret: true
                description: "The Client Secret of your Google Sheets developer application."
                title: "Client Secret"
                type: "string"
              refresh_token:
                airbyte_secret: true
                description: "The token for obtaining new access token."
                title: "Refresh Token"
                type: "string"
            required:
            - "auth_type"
            - "client_id"
            - "client_secret"
            - "refresh_token"
            title: "Authenticate via Google (OAuth)"
            type: "object"
          - properties:
              auth_type:
                const: "service"
                default: "service"
                order: 0
                type: "string"
                enum:
                - "service"
              service_account_info:
                airbyte_secret: true
                description: "Enter your service account key in JSON format. See the\
                  \ <a href='https://docs.airbyte.com/integrations/destinations/google-sheets#service-account'>docs</a>\
                  \ for more information on how to generate this key."
                title: "Service Account Information"
                type: "string"
            required:
            - "auth_type"
            - "service_account_info"
            title: "Service Account Key Authentication"
            type: "object"
          title: "Authentication"
          type: "object"
        spreadsheet_id:
          description: "The link to your spreadsheet. See <a href='https://docs.airbyte.com/integrations/destinations/google-sheets#sheetlink'>this\
            \ guide</a> for more details."
          examples:
          - "https://docs.google.com/spreadsheets/d/1hLd9Qqti3UyLXZB2aFfUWDT7BG/edit"
          title: "Spreadsheet Link"
          type: "string"
      required:
      - "spreadsheet_id"
      - "credentials"
      title: "Destination Google Sheets"
      type: "object"
    destination-teradata:
      properties:
        disable_type_dedupe:
          default: false
          description: "Disable Writing Final Tables. WARNING! The data format in\
            \ _airbyte_data is likely stable but there are no guarantees that other\
            \ metadata columns will remain the same in future versions"
          order: 8
          title: "Disable Final Tables. (WARNING! Unstable option; Columns in raw\
            \ table schema might change between versions)"
          type: "boolean"
        drop_cascade:
          default: false
          description: "Drop tables with CASCADE. WARNING! This will delete all data\
            \ in all dependent objects (views, etc.). Use with caution. This option\
            \ is intended for usecases which can easily rebuild the dependent objects."
          order: 9
          title: "Drop tables with CASCADE. (WARNING! Risk of unrecoverable data loss)"
          type: "boolean"
        host:
          description: "Hostname of the database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 6
          title: "JDBC URL Params"
          type: "string"
        logmech:
          description: ""
          oneOf:
          - order: 0
            properties:
              auth_type:
                const: "TD2"
                default: "TD2"
                enum:
                - "TD2"
                order: 0
                type: "string"
              password:
                airbyte_secret: true
                description: "Enter the password associated with the username."
                order: 2
                title: "Password"
                type: "string"
                x-speakeasy-param-sensitive: true
              username:
                description: "Username to use to access the database."
                order: 1
                title: "User"
                type: "string"
            required:
            - "username"
            - "password"
            title: "TD2"
            type: "object"
          - order: 1
            properties:
              auth_type:
                const: "LDAP"
                default: "LDAP"
                enum:
                - "LDAP"
                order: 0
                type: "string"
              password:
                airbyte_secret: true
                description: "Enter the password associated with the username."
                order: 2
                title: "Password"
                type: "string"
                x-speakeasy-param-sensitive: true
              username:
                description: "Username to use to access the database."
                order: 1
                title: "User"
                type: "string"
            required:
            - "username"
            - "password"
            title: "LDAP"
            type: "object"
          order: 1
          title: "Authorization Mechanism"
          type: "object"
        query_band:
          description: "Defines the custom session query band using name-value pairs.\
            \ For example, 'org=Finance;report=Fin123;'"
          order: 5
          title: "Query Band"
          type: "string"
        raw_data_schema:
          description: "The database to write raw tables into"
          order: 7
          title: "Raw table database (defaults to airbyte_internal)"
          type: "string"
        schema:
          default: "airbyte_td"
          description: "The default schema tables are written to if the source does\
            \ not specify a namespace. The usual value for this field is \"public\"\
            ."
          examples:
          - "airbyte_td"
          order: 2
          title: "Default Schema"
          type: "string"
        ssl:
          default: false
          description: "Encrypt data using SSL. When activating SSL, please select\
            \ one of the SSL modes."
          order: 3
          title: "SSL Connection"
          type: "boolean"
        ssl_mode:
          description: "SSL connection modes. \n <b>disable</b> - Chose this mode\
            \ to disable encryption of communication between Airbyte and destination\
            \ database\n <b>allow</b> - Chose this mode to enable encryption only\
            \ when required by the destination database\n <b>prefer</b> - Chose this\
            \ mode to allow unencrypted connection only if the destination database\
            \ does not support encryption\n <b>require</b> - Chose this mode to always\
            \ require encryption. If the destination database server does not support\
            \ encryption, connection will fail\n  <b>verify-ca</b> - Chose this mode\
            \ to always require encryption and to verify that the destination database\
            \ server has a valid SSL certificate\n  <b>verify-full</b> - This is the\
            \ most secure mode. Chose this mode to always require encryption and to\
            \ verify the identity of the destination database server\n See more information\
            \ - <a href=\"https://teradata-docs.s3.amazonaws.com/doc/connectivity/jdbc/reference/current/jdbcug_chapter_2.html#URL_SSLMODE\"\
            > in the docs</a>."
          oneOf:
          - additionalProperties: false
            description: "Disable SSL."
            properties:
              mode:
                const: "disable"
                default: "disable"
                enum:
                - "disable"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "disable"
          - additionalProperties: false
            description: "Allow SSL mode."
            properties:
              mode:
                const: "allow"
                default: "allow"
                enum:
                - "allow"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "allow"
          - additionalProperties: false
            description: "Prefer SSL mode."
            properties:
              mode:
                const: "prefer"
                default: "prefer"
                enum:
                - "prefer"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "prefer"
          - additionalProperties: false
            description: "Require SSL mode."
            properties:
              mode:
                const: "require"
                default: "require"
                enum:
                - "require"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "require"
          - additionalProperties: false
            description: "Verify-ca SSL mode."
            properties:
              mode:
                const: "verify-ca"
                default: "verify-ca"
                enum:
                - "verify-ca"
                order: 0
                type: "string"
              ssl_ca_certificate:
                airbyte_secret: true
                description: "Specifies the file name of a PEM file that contains\
                  \ Certificate Authority (CA) certificates for use with SSLMODE=verify-ca.\n\
                  \ See more information - <a href=\"https://teradata-docs.s3.amazonaws.com/doc/connectivity/jdbc/reference/current/jdbcug_chapter_2.html#URL_SSLCA\"\
                  > in the docs</a>."
                multiline: true
                order: 1
                title: "CA certificate"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "mode"
            - "ssl_ca_certificate"
            title: "verify-ca"
          - additionalProperties: false
            description: "Verify-full SSL mode."
            properties:
              mode:
                const: "verify-full"
                default: "verify-full"
                enum:
                - "verify-full"
                order: 0
                type: "string"
              ssl_ca_certificate:
                airbyte_secret: true
                description: "Specifies the file name of a PEM file that contains\
                  \ Certificate Authority (CA) certificates for use with SSLMODE=verify-full.\n\
                  \ See more information - <a href=\"https://teradata-docs.s3.amazonaws.com/doc/connectivity/jdbc/reference/current/jdbcug_chapter_2.html#URL_SSLCA\"\
                  > in the docs</a>."
                multiline: true
                order: 1
                title: "CA certificate"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "mode"
            - "ssl_ca_certificate"
            title: "verify-full"
          order: 4
          title: "SSL modes"
          type: "object"
        destinationType:
          title: "teradata"
          const: "teradata"
          enum:
          - "teradata"
          order: 0
          type: "string"
      required:
      - "host"
      - "destinationType"
      title: "Teradata Destination Spec"
      type: "object"
    destination-teradata-update:
      properties:
        disable_type_dedupe:
          default: false
          description: "Disable Writing Final Tables. WARNING! The data format in\
            \ _airbyte_data is likely stable but there are no guarantees that other\
            \ metadata columns will remain the same in future versions"
          order: 8
          title: "Disable Final Tables. (WARNING! Unstable option; Columns in raw\
            \ table schema might change between versions)"
          type: "boolean"
        drop_cascade:
          default: false
          description: "Drop tables with CASCADE. WARNING! This will delete all data\
            \ in all dependent objects (views, etc.). Use with caution. This option\
            \ is intended for usecases which can easily rebuild the dependent objects."
          order: 9
          title: "Drop tables with CASCADE. (WARNING! Risk of unrecoverable data loss)"
          type: "boolean"
        host:
          description: "Hostname of the database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 6
          title: "JDBC URL Params"
          type: "string"
        logmech:
          description: ""
          oneOf:
          - order: 0
            properties:
              auth_type:
                const: "TD2"
                default: "TD2"
                enum:
                - "TD2"
                order: 0
                type: "string"
              password:
                airbyte_secret: true
                description: "Enter the password associated with the username."
                order: 2
                title: "Password"
                type: "string"
              username:
                description: "Username to use to access the database."
                order: 1
                title: "User"
                type: "string"
            required:
            - "username"
            - "password"
            title: "TD2"
            type: "object"
          - order: 1
            properties:
              auth_type:
                const: "LDAP"
                default: "LDAP"
                enum:
                - "LDAP"
                order: 0
                type: "string"
              password:
                airbyte_secret: true
                description: "Enter the password associated with the username."
                order: 2
                title: "Password"
                type: "string"
              username:
                description: "Username to use to access the database."
                order: 1
                title: "User"
                type: "string"
            required:
            - "username"
            - "password"
            title: "LDAP"
            type: "object"
          order: 1
          title: "Authorization Mechanism"
          type: "object"
        query_band:
          description: "Defines the custom session query band using name-value pairs.\
            \ For example, 'org=Finance;report=Fin123;'"
          order: 5
          title: "Query Band"
          type: "string"
        raw_data_schema:
          description: "The database to write raw tables into"
          order: 7
          title: "Raw table database (defaults to airbyte_internal)"
          type: "string"
        schema:
          default: "airbyte_td"
          description: "The default schema tables are written to if the source does\
            \ not specify a namespace. The usual value for this field is \"public\"\
            ."
          examples:
          - "airbyte_td"
          order: 2
          title: "Default Schema"
          type: "string"
        ssl:
          default: false
          description: "Encrypt data using SSL. When activating SSL, please select\
            \ one of the SSL modes."
          order: 3
          title: "SSL Connection"
          type: "boolean"
        ssl_mode:
          description: "SSL connection modes. \n <b>disable</b> - Chose this mode\
            \ to disable encryption of communication between Airbyte and destination\
            \ database\n <b>allow</b> - Chose this mode to enable encryption only\
            \ when required by the destination database\n <b>prefer</b> - Chose this\
            \ mode to allow unencrypted connection only if the destination database\
            \ does not support encryption\n <b>require</b> - Chose this mode to always\
            \ require encryption. If the destination database server does not support\
            \ encryption, connection will fail\n  <b>verify-ca</b> - Chose this mode\
            \ to always require encryption and to verify that the destination database\
            \ server has a valid SSL certificate\n  <b>verify-full</b> - This is the\
            \ most secure mode. Chose this mode to always require encryption and to\
            \ verify the identity of the destination database server\n See more information\
            \ - <a href=\"https://teradata-docs.s3.amazonaws.com/doc/connectivity/jdbc/reference/current/jdbcug_chapter_2.html#URL_SSLMODE\"\
            > in the docs</a>."
          oneOf:
          - additionalProperties: false
            description: "Disable SSL."
            properties:
              mode:
                const: "disable"
                default: "disable"
                enum:
                - "disable"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "disable"
          - additionalProperties: false
            description: "Allow SSL mode."
            properties:
              mode:
                const: "allow"
                default: "allow"
                enum:
                - "allow"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "allow"
          - additionalProperties: false
            description: "Prefer SSL mode."
            properties:
              mode:
                const: "prefer"
                default: "prefer"
                enum:
                - "prefer"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "prefer"
          - additionalProperties: false
            description: "Require SSL mode."
            properties:
              mode:
                const: "require"
                default: "require"
                enum:
                - "require"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "require"
          - additionalProperties: false
            description: "Verify-ca SSL mode."
            properties:
              mode:
                const: "verify-ca"
                default: "verify-ca"
                enum:
                - "verify-ca"
                order: 0
                type: "string"
              ssl_ca_certificate:
                airbyte_secret: true
                description: "Specifies the file name of a PEM file that contains\
                  \ Certificate Authority (CA) certificates for use with SSLMODE=verify-ca.\n\
                  \ See more information - <a href=\"https://teradata-docs.s3.amazonaws.com/doc/connectivity/jdbc/reference/current/jdbcug_chapter_2.html#URL_SSLCA\"\
                  > in the docs</a>."
                multiline: true
                order: 1
                title: "CA certificate"
                type: "string"
            required:
            - "mode"
            - "ssl_ca_certificate"
            title: "verify-ca"
          - additionalProperties: false
            description: "Verify-full SSL mode."
            properties:
              mode:
                const: "verify-full"
                default: "verify-full"
                enum:
                - "verify-full"
                order: 0
                type: "string"
              ssl_ca_certificate:
                airbyte_secret: true
                description: "Specifies the file name of a PEM file that contains\
                  \ Certificate Authority (CA) certificates for use with SSLMODE=verify-full.\n\
                  \ See more information - <a href=\"https://teradata-docs.s3.amazonaws.com/doc/connectivity/jdbc/reference/current/jdbcug_chapter_2.html#URL_SSLCA\"\
                  > in the docs</a>."
                multiline: true
                order: 1
                title: "CA certificate"
                type: "string"
            required:
            - "mode"
            - "ssl_ca_certificate"
            title: "verify-full"
          order: 4
          title: "SSL modes"
          type: "object"
      required:
      - "host"
      title: "Teradata Destination Spec"
      type: "object"
    destination-duckdb:
      properties:
        destination_path:
          description: "Path to the .duckdb file, or the text 'md:' to connect to\
            \ MotherDuck. The file will be placed inside that local mount. For more\
            \ information check out our <a href=\"https://docs.airbyte.io/integrations/destinations/duckdb\"\
            >docs</a>"
          examples:
          - "/local/destination.duckdb"
          - "md:"
          - "motherduck:"
          title: "Destination DB"
          type: "string"
        motherduck_api_key:
          airbyte_secret: true
          description: "API key to use for authentication to a MotherDuck database."
          title: "MotherDuck API Key"
          type: "string"
          x-speakeasy-param-sensitive: true
        schema:
          description: "Database schema name, default for duckdb is 'main'."
          example: "main"
          title: "Destination Schema"
          type: "string"
        destinationType:
          title: "duckdb"
          const: "duckdb"
          enum:
          - "duckdb"
          order: 0
          type: "string"
      required:
      - "destination_path"
      - "destinationType"
      title: "Destination Duckdb"
      type: "object"
    destination-duckdb-update:
      properties:
        destination_path:
          description: "Path to the .duckdb file, or the text 'md:' to connect to\
            \ MotherDuck. The file will be placed inside that local mount. For more\
            \ information check out our <a href=\"https://docs.airbyte.io/integrations/destinations/duckdb\"\
            >docs</a>"
          examples:
          - "/local/destination.duckdb"
          - "md:"
          - "motherduck:"
          title: "Destination DB"
          type: "string"
        motherduck_api_key:
          airbyte_secret: true
          description: "API key to use for authentication to a MotherDuck database."
          title: "MotherDuck API Key"
          type: "string"
        schema:
          description: "Database schema name, default for duckdb is 'main'."
          example: "main"
          title: "Destination Schema"
          type: "string"
      required:
      - "destination_path"
      title: "Destination Duckdb"
      type: "object"
    destination-mssql-v2:
      properties:
        database:
          description: "The name of the MSSQL database."
          order: 2
          title: "DB Name"
          type: "string"
        host:
          description: "The host name of the MSSQL database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 6
          title: "JDBC URL Params"
          type: "string"
        load_type:
          always_show: true
          description: "Specifies the type of load mechanism (e.g., BULK, INSERT)\
            \ and its associated configuration."
          oneOf:
          - additionalProperties: true
            description: "Configuration details for using the INSERT loading mechanism."
            properties:
              load_type:
                default: "INSERT"
                enum:
                - "INSERT"
                type: "string"
            required:
            - "load_type"
            title: "Insert Load"
            type: "object"
          - additionalProperties: true
            description: "Configuration details for using the BULK loading mechanism."
            properties:
              azure_blob_storage_account_name:
                description: "The name of the Azure Blob Storage account. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#storage-accounts"
                examples:
                - "mystorageaccount"
                title: "Azure Blob Storage Account Name"
                type: "string"
              azure_blob_storage_container_name:
                description: "The name of the Azure Blob Storage container. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#containers"
                examples:
                - "mycontainer"
                title: "Azure Blob Storage Container Name"
                type: "string"
              bulk_load_data_source:
                always_show: true
                description: "Specifies the external data source name configured in\
                  \ MSSQL, which references the Azure Blob container. See: https://learn.microsoft.com/sql/t-sql/statements/bulk-insert-transact-sql"
                examples:
                - "MyAzureBlobStorage"
                order: 4
                title: "BULK Load Data Source"
                type: "string"
              bulk_load_validate_values_pre_load:
                always_show: false
                default: false
                description: "When enabled, Airbyte will validate all values before\
                  \ loading them into the destination table. This provides stronger\
                  \ data integrity guarantees but may significantly impact performance."
                examples:
                - "false"
                order: 5
                title: "Pre-Load Value Validation"
                type: "boolean"
              load_type:
                default: "BULK"
                enum:
                - "BULK"
                type: "string"
              shared_access_signature:
                airbyte_secret: true
                always_show: true
                description: "A shared access signature (SAS) provides secure delegated\
                  \ access to resources in your storage account. See: https://learn.microsoft.com/azure/storage/common/storage-sas-overview"
                examples:
                - "a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"
                title: "Shared Access Signature"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "load_type"
            - "azure_blob_storage_account_name"
            - "azure_blob_storage_container_name"
            - "shared_access_signature"
            - "bulk_load_data_source"
            title: "Bulk Load"
            type: "object"
          order: 8
          title: "Load Type"
          type: "object"
        password:
          airbyte_secret: true
          description: "The password associated with this username."
          order: 5
          title: "Password"
          type: "string"
          x-speakeasy-param-sensitive: true
        port:
          description: "The port of the MSSQL database."
          examples:
          - "1433"
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        schema:
          default: "public"
          description: "The default schema tables are written to if the source does\
            \ not specify a namespace. The usual value for this field is \"public\"\
            ."
          examples:
          - "public"
          order: 3
          title: "Default Schema"
          type: "string"
        ssl_method:
          description: "The encryption method which is used to communicate with the\
            \ database."
          oneOf:
          - additionalProperties: true
            description: "The data transfer will not be encrypted."
            properties:
              name:
                default: "unencrypted"
                enum:
                - "unencrypted"
                type: "string"
            required:
            - "name"
            title: "Unencrypted"
            type: "object"
          - additionalProperties: true
            description: "Use the certificate provided by the server without verification.\
              \ (For testing purposes only!)"
            properties:
              name:
                default: "encrypted_trust_server_certificate"
                enum:
                - "encrypted_trust_server_certificate"
                type: "string"
            required:
            - "name"
            title: "Encrypted (trust server certificate)"
            type: "object"
          - additionalProperties: true
            description: "Verify and use the certificate provided by the server."
            properties:
              hostNameInCertificate:
                description: "Specifies the host name of the server. The value of\
                  \ this property must match the subject property of the certificate."
                order: 3
                title: "Host Name In Certificate"
                type: "string"
              name:
                default: "encrypted_verify_certificate"
                enum:
                - "encrypted_verify_certificate"
                type: "string"
              trustStoreName:
                description: "Specifies the name of the trust store."
                order: 1
                title: "Trust Store Name"
                type: "string"
              trustStorePassword:
                airbyte_secret: true
                description: "Specifies the password of the trust store."
                order: 2
                title: "Trust Store Password"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "name"
            title: "Encrypted (verify certificate)"
            type: "object"
          order: 7
          title: "SSL Method"
          type: "object"
        user:
          description: "The username which is used to access the database."
          order: 4
          title: "User"
          type: "string"
        destinationType:
          title: "mssql-v2"
          const: "mssql-v2"
          enum:
          - "mssql-v2"
          order: 0
          type: "string"
      required:
      - "host"
      - "port"
      - "database"
      - "schema"
      - "user"
      - "ssl_method"
      - "load_type"
      - "destinationType"
      title: "MSSQL V2 Destination Specification"
      type: "object"
    destination-mssql-v2-update:
      properties:
        database:
          description: "The name of the MSSQL database."
          order: 2
          title: "DB Name"
          type: "string"
        host:
          description: "The host name of the MSSQL database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 6
          title: "JDBC URL Params"
          type: "string"
        load_type:
          always_show: true
          description: "Specifies the type of load mechanism (e.g., BULK, INSERT)\
            \ and its associated configuration."
          oneOf:
          - additionalProperties: true
            description: "Configuration details for using the INSERT loading mechanism."
            properties:
              load_type:
                default: "INSERT"
                enum:
                - "INSERT"
                type: "string"
            required:
            - "load_type"
            title: "Insert Load"
            type: "object"
          - additionalProperties: true
            description: "Configuration details for using the BULK loading mechanism."
            properties:
              azure_blob_storage_account_name:
                description: "The name of the Azure Blob Storage account. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#storage-accounts"
                examples:
                - "mystorageaccount"
                title: "Azure Blob Storage Account Name"
                type: "string"
              azure_blob_storage_container_name:
                description: "The name of the Azure Blob Storage container. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#containers"
                examples:
                - "mycontainer"
                title: "Azure Blob Storage Container Name"
                type: "string"
              bulk_load_data_source:
                always_show: true
                description: "Specifies the external data source name configured in\
                  \ MSSQL, which references the Azure Blob container. See: https://learn.microsoft.com/sql/t-sql/statements/bulk-insert-transact-sql"
                examples:
                - "MyAzureBlobStorage"
                order: 4
                title: "BULK Load Data Source"
                type: "string"
              bulk_load_validate_values_pre_load:
                always_show: false
                default: false
                description: "When enabled, Airbyte will validate all values before\
                  \ loading them into the destination table. This provides stronger\
                  \ data integrity guarantees but may significantly impact performance."
                examples:
                - "false"
                order: 5
                title: "Pre-Load Value Validation"
                type: "boolean"
              load_type:
                default: "BULK"
                enum:
                - "BULK"
                type: "string"
              shared_access_signature:
                airbyte_secret: true
                always_show: true
                description: "A shared access signature (SAS) provides secure delegated\
                  \ access to resources in your storage account. See: https://learn.microsoft.com/azure/storage/common/storage-sas-overview"
                examples:
                - "a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"
                title: "Shared Access Signature"
                type: "string"
            required:
            - "load_type"
            - "azure_blob_storage_account_name"
            - "azure_blob_storage_container_name"
            - "shared_access_signature"
            - "bulk_load_data_source"
            title: "Bulk Load"
            type: "object"
          order: 8
          title: "Load Type"
          type: "object"
        password:
          airbyte_secret: true
          description: "The password associated with this username."
          order: 5
          title: "Password"
          type: "string"
        port:
          description: "The port of the MSSQL database."
          examples:
          - "1433"
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        schema:
          default: "public"
          description: "The default schema tables are written to if the source does\
            \ not specify a namespace. The usual value for this field is \"public\"\
            ."
          examples:
          - "public"
          order: 3
          title: "Default Schema"
          type: "string"
        ssl_method:
          description: "The encryption method which is used to communicate with the\
            \ database."
          oneOf:
          - additionalProperties: true
            description: "The data transfer will not be encrypted."
            properties:
              name:
                default: "unencrypted"
                enum:
                - "unencrypted"
                type: "string"
            required:
            - "name"
            title: "Unencrypted"
            type: "object"
          - additionalProperties: true
            description: "Use the certificate provided by the server without verification.\
              \ (For testing purposes only!)"
            properties:
              name:
                default: "encrypted_trust_server_certificate"
                enum:
                - "encrypted_trust_server_certificate"
                type: "string"
            required:
            - "name"
            title: "Encrypted (trust server certificate)"
            type: "object"
          - additionalProperties: true
            description: "Verify and use the certificate provided by the server."
            properties:
              hostNameInCertificate:
                description: "Specifies the host name of the server. The value of\
                  \ this property must match the subject property of the certificate."
                order: 3
                title: "Host Name In Certificate"
                type: "string"
              name:
                default: "encrypted_verify_certificate"
                enum:
                - "encrypted_verify_certificate"
                type: "string"
              trustStoreName:
                description: "Specifies the name of the trust store."
                order: 1
                title: "Trust Store Name"
                type: "string"
              trustStorePassword:
                airbyte_secret: true
                description: "Specifies the password of the trust store."
                order: 2
                title: "Trust Store Password"
                type: "string"
            required:
            - "name"
            title: "Encrypted (verify certificate)"
            type: "object"
          order: 7
          title: "SSL Method"
          type: "object"
        user:
          description: "The username which is used to access the database."
          order: 4
          title: "User"
          type: "string"
      required:
      - "host"
      - "port"
      - "database"
      - "schema"
      - "user"
      - "ssl_method"
      - "load_type"
      title: "MSSQL V2 Destination Specification"
      type: "object"
    destination-sftp-json:
      properties:
        destination_path:
          description: "Path to the directory where json files will be written."
          examples:
          - "/json_data"
          order: 4
          title: "Destination path"
          type: "string"
        host:
          description: "Hostname of the SFTP server."
          order: 0
          title: "Host"
          type: "string"
        password:
          airbyte_secret: true
          description: "Password associated with the username."
          order: 3
          title: "Password"
          type: "string"
          x-speakeasy-param-sensitive: true
        port:
          default: 22
          description: "Port of the SFTP server."
          examples:
          - 22
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        username:
          description: "Username to use to access the SFTP server."
          order: 2
          title: "User"
          type: "string"
        destinationType:
          title: "sftp-json"
          const: "sftp-json"
          enum:
          - "sftp-json"
          order: 0
          type: "string"
      required:
      - "host"
      - "username"
      - "password"
      - "destination_path"
      - "destinationType"
      title: "Destination SFTP JSON"
      type: "object"
    destination-sftp-json-update:
      properties:
        destination_path:
          description: "Path to the directory where json files will be written."
          examples:
          - "/json_data"
          order: 4
          title: "Destination path"
          type: "string"
        host:
          description: "Hostname of the SFTP server."
          order: 0
          title: "Host"
          type: "string"
        password:
          airbyte_secret: true
          description: "Password associated with the username."
          order: 3
          title: "Password"
          type: "string"
        port:
          default: 22
          description: "Port of the SFTP server."
          examples:
          - 22
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        username:
          description: "Username to use to access the SFTP server."
          order: 2
          title: "User"
          type: "string"
      required:
      - "host"
      - "username"
      - "password"
      - "destination_path"
      title: "Destination SFTP JSON"
      type: "object"
    destination-motherduck:
      properties:
        destination_path:
          default: "md:"
          description: "Path to a .duckdb file or 'md:<DATABASE_NAME>' to connect\
            \ to a MotherDuck database. If 'md:' is specified without a database name,\
            \ the default MotherDuck database name ('my_db') will be used."
          examples:
          - "/local/destination.duckdb"
          - "md:"
          - "md:data_db"
          - "md:my_db"
          title: "Destination DB"
          type: "string"
        motherduck_api_key:
          airbyte_secret: true
          description: "API access token to use for authentication to a MotherDuck\
            \ database."
          title: "MotherDuck Access Token"
          type: "string"
          x-speakeasy-param-sensitive: true
        schema:
          description: "Database schema name, defaults to 'main' if not specified."
          examples:
          - "main"
          - "airbyte_raw"
          - "my_schema"
          title: "Schema Name"
          type: "string"
        destinationType:
          title: "motherduck"
          const: "motherduck"
          enum:
          - "motherduck"
          order: 0
          type: "string"
      required:
      - "motherduck_api_key"
      - "destinationType"
      title: "Destination MotherDuck"
      type: "object"
    destination-motherduck-update:
      properties:
        destination_path:
          default: "md:"
          description: "Path to a .duckdb file or 'md:<DATABASE_NAME>' to connect\
            \ to a MotherDuck database. If 'md:' is specified without a database name,\
            \ the default MotherDuck database name ('my_db') will be used."
          examples:
          - "/local/destination.duckdb"
          - "md:"
          - "md:data_db"
          - "md:my_db"
          title: "Destination DB"
          type: "string"
        motherduck_api_key:
          airbyte_secret: true
          description: "API access token to use for authentication to a MotherDuck\
            \ database."
          title: "MotherDuck Access Token"
          type: "string"
        schema:
          description: "Database schema name, defaults to 'main' if not specified."
          examples:
          - "main"
          - "airbyte_raw"
          - "my_schema"
          title: "Schema Name"
          type: "string"
      required:
      - "motherduck_api_key"
      title: "Destination MotherDuck"
      type: "object"
    destination-s3:
      properties:
        access_key_id:
          airbyte_secret: true
          always_show: true
          description: "The access key ID to access the S3 bucket. Airbyte requires\
            \ Read and Write permissions to the given bucket. Read more <a href=\"\
            https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\"\
            >here</a>."
          examples:
          - "A012345678910EXAMPLE"
          order: 0
          title: "Access Key ID"
          type: "string"
          x-speakeasy-param-sensitive: true
        file_name_pattern:
          description: "Pattern to match file names in the bucket directory. Read\
            \ more <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ListingKeysUsingAPIs.html\"\
            >here</a>"
          examples:
          - "{date}"
          - "{date:yyyy_MM}"
          - "{timestamp}"
          - "{part_number}"
          - "{sync_id}"
          order: 9
          title: "File Name Pattern"
          type: "string"
        format:
          description: "Format of the data output. See <a href=\"https://docs.airbyte.com/integrations/destinations/s3/#supported-output-schema\"\
            >here</a> for more details"
          oneOf:
          - additionalProperties: true
            properties:
              compression:
                description: "Whether the output files should be compressed. If compression\
                  \ is selected, the output filename will have an extra extension\
                  \ (GZIP: \".jsonl.gz\")."
                oneOf:
                - additionalProperties: true
                  properties:
                    compression_type:
                      default: "No Compression"
                      enum:
                      - "No Compression"
                      type: "string"
                  required:
                  - "compression_type"
                  title: "No Compression"
                  type: "object"
                - additionalProperties: true
                  properties:
                    compression_type:
                      default: "GZIP"
                      enum:
                      - "GZIP"
                      type: "string"
                  required:
                  - "compression_type"
                  title: "GZIP"
                  type: "object"
                title: "Compression"
                type: "object"
              flattening:
                default: "No flattening"
                enum:
                - "No flattening"
                - "Root level flattening"
                title: "Flattening"
                type: "string"
              format_type:
                default: "CSV"
                enum:
                - "CSV"
                type: "string"
            required:
            - "format_type"
            - "flattening"
            title: "CSV: Comma-Separated Values"
            type: "object"
          - additionalProperties: true
            properties:
              compression:
                description: "Whether the output files should be compressed. If compression\
                  \ is selected, the output filename will have an extra extension\
                  \ (GZIP: \".jsonl.gz\")."
                oneOf:
                - additionalProperties: true
                  properties:
                    compression_type:
                      default: "No Compression"
                      enum:
                      - "No Compression"
                      type: "string"
                  required:
                  - "compression_type"
                  title: "No Compression"
                  type: "object"
                - additionalProperties: true
                  properties:
                    compression_type:
                      default: "GZIP"
                      enum:
                      - "GZIP"
                      type: "string"
                  required:
                  - "compression_type"
                  title: "GZIP"
                  type: "object"
                title: "Compression"
                type: "object"
              flattening:
                default: "No flattening"
                enum:
                - "No flattening"
                - "Root level flattening"
                title: "Flattening"
                type: "string"
              format_type:
                default: "JSONL"
                enum:
                - "JSONL"
                type: "string"
            required:
            - "format_type"
            title: "JSON Lines: Newline-delimited JSON"
            type: "object"
          - additionalProperties: true
            properties:
              compression_codec:
                description: "The compression algorithm used to compress data. Default\
                  \ to no compression."
                oneOf:
                - additionalProperties: true
                  properties:
                    codec:
                      default: "no compression"
                      enum:
                      - "no compression"
                      type: "string"
                  required:
                  - "codec"
                  title: "no compression"
                  type: "object"
                - additionalProperties: true
                  properties:
                    codec:
                      default: "Deflate"
                      enum:
                      - "Deflate"
                      type: "string"
                    compression_level:
                      title: "Deflate Level"
                      type: "integer"
                  required:
                  - "codec"
                  - "compression_level"
                  title: "Deflate"
                  type: "object"
                - additionalProperties: true
                  properties:
                    codec:
                      default: "bzip2"
                      enum:
                      - "bzip2"
                      type: "string"
                  required:
                  - "codec"
                  title: "bzip2"
                  type: "object"
                - additionalProperties: true
                  properties:
                    codec:
                      default: "xz"
                      enum:
                      - "xz"
                      type: "string"
                    compression_level:
                      title: "Compression Level"
                      type: "integer"
                  required:
                  - "codec"
                  - "compression_level"
                  title: "xz"
                  type: "object"
                - additionalProperties: true
                  properties:
                    codec:
                      default: "zstandard"
                      enum:
                      - "zstandard"
                      type: "string"
                    compression_level:
                      title: "Compression Level"
                      type: "integer"
                    include_checksum:
                      title: "Include Checksum"
                      type: "boolean"
                  required:
                  - "codec"
                  - "compression_level"
                  - "include_checksum"
                  title: "zstandard"
                  type: "object"
                - additionalProperties: true
                  properties:
                    codec:
                      default: "snappy"
                      enum:
                      - "snappy"
                      type: "string"
                  required:
                  - "codec"
                  title: "snappy"
                  type: "object"
                order: 1
                title: "Compression Codec"
                type: "object"
              format_type:
                default: "Avro"
                enum:
                - "Avro"
                type: "string"
            required:
            - "format_type"
            - "compression_codec"
            title: "Avro: Apache Avro"
            type: "object"
          - additionalProperties: true
            properties:
              block_size_mb:
                default: 128
                description: "This is the size of a row group being buffered in memory.\
                  \ It limits the memory usage when writing. Larger values will improve\
                  \ the IO when reading, but consume more memory when writing. Default:\
                  \ 128 MB."
                title: "Block Size (Row Group Size) (MB)"
                type: "integer"
              compression_codec:
                default: "UNCOMPRESSED"
                description: "The compression algorithm used to compress data pages."
                enum:
                - "UNCOMPRESSED"
                - "SNAPPY"
                - "GZIP"
                - "LZO"
                - "BROTLI"
                - "LZ4"
                - "ZSTD"
                title: "Compression Codec"
                type: "string"
              dictionary_encoding:
                description: "Default: true."
                title: "Dictionary Encoding"
                type: "boolean"
              dictionary_page_size_kb:
                default: 1024
                description: "There is one dictionary page per column per row group\
                  \ when dictionary encoding is used. The dictionary page size works\
                  \ like the page size but for dictionary. Default: 1024 KB."
                title: "Dictionary Page Size (KB)"
                type: "integer"
              format_type:
                default: "Parquet"
                enum:
                - "Parquet"
                type: "string"
              max_padding_size_mb:
                default: 8
                description: "Maximum size allowed as padding to align row groups.\
                  \ This is also the minimum size of a row group. Default: 8 MB."
                title: "Max Padding Size (MB)"
                type: "integer"
              page_size_kb:
                default: 1024
                description: "The page size is for compression. A block is composed\
                  \ of pages. A page is the smallest unit that must be read fully\
                  \ to access a single record. If this value is too small, the compression\
                  \ will deteriorate. Default: 1024 KB."
                title: "Page Size (KB)"
                type: "integer"
            required:
            - "format_type"
            title: "Parquet: Columnar Storage"
            type: "object"
          order: 6
          title: "Output Format"
          type: "object"
        role_arn:
          description: "The ARN of the AWS role to assume. Only usable in Airbyte\
            \ Cloud."
          examples:
          - "arn:aws:iam::123456789:role/ExternalIdIsYourWorkspaceId"
          order: 2
          title: "Role ARN"
          type: "string"
        s3_bucket_name:
          description: "The name of the S3 bucket. Read more <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html\"\
            >here</a>."
          examples:
          - "airbyte_sync"
          order: 3
          title: "S3 Bucket Name"
          type: "string"
        s3_bucket_path:
          description: "Directory under the S3 bucket where data will be written.\
            \ Read more <a href=\"https://docs.airbyte.com/integrations/destinations/s3#:~:text=to%20format%20the-,bucket%20path,-%3A\"\
            >here</a>"
          examples:
          - "data_sync/test"
          order: 4
          title: "S3 Bucket Path"
          type: "string"
        s3_bucket_region:
          default: ""
          description: "The region of the S3 bucket. See <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\"\
            >here</a> for all region codes."
          enum:
          - ""
          - "af-south-1"
          - "ap-east-1"
          - "ap-northeast-1"
          - "ap-northeast-2"
          - "ap-northeast-3"
          - "ap-south-1"
          - "ap-south-2"
          - "ap-southeast-1"
          - "ap-southeast-2"
          - "ap-southeast-3"
          - "ap-southeast-4"
          - "ca-central-1"
          - "ca-west-1"
          - "cn-north-1"
          - "cn-northwest-1"
          - "eu-central-1"
          - "eu-central-2"
          - "eu-north-1"
          - "eu-south-1"
          - "eu-south-2"
          - "eu-west-1"
          - "eu-west-2"
          - "eu-west-3"
          - "il-central-1"
          - "me-central-1"
          - "me-south-1"
          - "sa-east-1"
          - "us-east-1"
          - "us-east-2"
          - "us-gov-east-1"
          - "us-gov-west-1"
          - "us-west-1"
          - "us-west-2"
          examples:
          - "us-east-1"
          order: 5
          title: "S3 Bucket Region"
          type: "string"
        s3_endpoint:
          description: "Your S3 endpoint url. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/s3.html#:~:text=Service%20endpoints-,Amazon%20S3%20endpoints,-When%20you%20use\"\
            >here</a>"
          examples:
          - "http://localhost:9000"
          order: 7
          title: "S3 Endpoint"
          type: "string"
        s3_path_format:
          description: "Format string on how data will be organized inside the bucket\
            \ directory. Read more <a href=\"https://docs.airbyte.com/integrations/destinations/s3#:~:text=The%20full%20path%20of%20the%20output%20data%20with%20the%20default%20S3%20path%20format\"\
            >here</a>"
          examples:
          - "${NAMESPACE}/${STREAM_NAME}/${YEAR}_${MONTH}_${DAY}_${EPOCH}_"
          order: 8
          title: "S3 Path Format"
          type: "string"
        secret_access_key:
          airbyte_secret: true
          always_show: true
          description: "The corresponding secret to the access key ID. Read more <a\
            \ href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\"\
            >here</a>"
          examples:
          - "a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"
          order: 1
          title: "Secret Access Key"
          type: "string"
          x-speakeasy-param-sensitive: true
        destinationType:
          title: "s3"
          const: "s3"
          enum:
          - "s3"
          order: 0
          type: "string"
      required:
      - "s3_bucket_name"
      - "s3_bucket_path"
      - "s3_bucket_region"
      - "format"
      - "destinationType"
      title: "S3 V2 Destination Spec"
      type: "object"
    destination-s3-update:
      properties:
        access_key_id:
          airbyte_secret: true
          always_show: true
          description: "The access key ID to access the S3 bucket. Airbyte requires\
            \ Read and Write permissions to the given bucket. Read more <a href=\"\
            https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\"\
            >here</a>."
          examples:
          - "A012345678910EXAMPLE"
          order: 0
          title: "Access Key ID"
          type: "string"
        file_name_pattern:
          description: "Pattern to match file names in the bucket directory. Read\
            \ more <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ListingKeysUsingAPIs.html\"\
            >here</a>"
          examples:
          - "{date}"
          - "{date:yyyy_MM}"
          - "{timestamp}"
          - "{part_number}"
          - "{sync_id}"
          order: 9
          title: "File Name Pattern"
          type: "string"
        format:
          description: "Format of the data output. See <a href=\"https://docs.airbyte.com/integrations/destinations/s3/#supported-output-schema\"\
            >here</a> for more details"
          oneOf:
          - additionalProperties: true
            properties:
              compression:
                description: "Whether the output files should be compressed. If compression\
                  \ is selected, the output filename will have an extra extension\
                  \ (GZIP: \".jsonl.gz\")."
                oneOf:
                - additionalProperties: true
                  properties:
                    compression_type:
                      default: "No Compression"
                      enum:
                      - "No Compression"
                      type: "string"
                  required:
                  - "compression_type"
                  title: "No Compression"
                  type: "object"
                - additionalProperties: true
                  properties:
                    compression_type:
                      default: "GZIP"
                      enum:
                      - "GZIP"
                      type: "string"
                  required:
                  - "compression_type"
                  title: "GZIP"
                  type: "object"
                title: "Compression"
                type: "object"
              flattening:
                default: "No flattening"
                enum:
                - "No flattening"
                - "Root level flattening"
                title: "Flattening"
                type: "string"
              format_type:
                default: "CSV"
                enum:
                - "CSV"
                type: "string"
            required:
            - "format_type"
            - "flattening"
            title: "CSV: Comma-Separated Values"
            type: "object"
          - additionalProperties: true
            properties:
              compression:
                description: "Whether the output files should be compressed. If compression\
                  \ is selected, the output filename will have an extra extension\
                  \ (GZIP: \".jsonl.gz\")."
                oneOf:
                - additionalProperties: true
                  properties:
                    compression_type:
                      default: "No Compression"
                      enum:
                      - "No Compression"
                      type: "string"
                  required:
                  - "compression_type"
                  title: "No Compression"
                  type: "object"
                - additionalProperties: true
                  properties:
                    compression_type:
                      default: "GZIP"
                      enum:
                      - "GZIP"
                      type: "string"
                  required:
                  - "compression_type"
                  title: "GZIP"
                  type: "object"
                title: "Compression"
                type: "object"
              flattening:
                default: "No flattening"
                enum:
                - "No flattening"
                - "Root level flattening"
                title: "Flattening"
                type: "string"
              format_type:
                default: "JSONL"
                enum:
                - "JSONL"
                type: "string"
            required:
            - "format_type"
            title: "JSON Lines: Newline-delimited JSON"
            type: "object"
          - additionalProperties: true
            properties:
              compression_codec:
                description: "The compression algorithm used to compress data. Default\
                  \ to no compression."
                oneOf:
                - additionalProperties: true
                  properties:
                    codec:
                      default: "no compression"
                      enum:
                      - "no compression"
                      type: "string"
                  required:
                  - "codec"
                  title: "no compression"
                  type: "object"
                - additionalProperties: true
                  properties:
                    codec:
                      default: "Deflate"
                      enum:
                      - "Deflate"
                      type: "string"
                    compression_level:
                      title: "Deflate Level"
                      type: "integer"
                  required:
                  - "codec"
                  - "compression_level"
                  title: "Deflate"
                  type: "object"
                - additionalProperties: true
                  properties:
                    codec:
                      default: "bzip2"
                      enum:
                      - "bzip2"
                      type: "string"
                  required:
                  - "codec"
                  title: "bzip2"
                  type: "object"
                - additionalProperties: true
                  properties:
                    codec:
                      default: "xz"
                      enum:
                      - "xz"
                      type: "string"
                    compression_level:
                      title: "Compression Level"
                      type: "integer"
                  required:
                  - "codec"
                  - "compression_level"
                  title: "xz"
                  type: "object"
                - additionalProperties: true
                  properties:
                    codec:
                      default: "zstandard"
                      enum:
                      - "zstandard"
                      type: "string"
                    compression_level:
                      title: "Compression Level"
                      type: "integer"
                    include_checksum:
                      title: "Include Checksum"
                      type: "boolean"
                  required:
                  - "codec"
                  - "compression_level"
                  - "include_checksum"
                  title: "zstandard"
                  type: "object"
                - additionalProperties: true
                  properties:
                    codec:
                      default: "snappy"
                      enum:
                      - "snappy"
                      type: "string"
                  required:
                  - "codec"
                  title: "snappy"
                  type: "object"
                order: 1
                title: "Compression Codec"
                type: "object"
              format_type:
                default: "Avro"
                enum:
                - "Avro"
                type: "string"
            required:
            - "format_type"
            - "compression_codec"
            title: "Avro: Apache Avro"
            type: "object"
          - additionalProperties: true
            properties:
              block_size_mb:
                default: 128
                description: "This is the size of a row group being buffered in memory.\
                  \ It limits the memory usage when writing. Larger values will improve\
                  \ the IO when reading, but consume more memory when writing. Default:\
                  \ 128 MB."
                title: "Block Size (Row Group Size) (MB)"
                type: "integer"
              compression_codec:
                default: "UNCOMPRESSED"
                description: "The compression algorithm used to compress data pages."
                enum:
                - "UNCOMPRESSED"
                - "SNAPPY"
                - "GZIP"
                - "LZO"
                - "BROTLI"
                - "LZ4"
                - "ZSTD"
                title: "Compression Codec"
                type: "string"
              dictionary_encoding:
                description: "Default: true."
                title: "Dictionary Encoding"
                type: "boolean"
              dictionary_page_size_kb:
                default: 1024
                description: "There is one dictionary page per column per row group\
                  \ when dictionary encoding is used. The dictionary page size works\
                  \ like the page size but for dictionary. Default: 1024 KB."
                title: "Dictionary Page Size (KB)"
                type: "integer"
              format_type:
                default: "Parquet"
                enum:
                - "Parquet"
                type: "string"
              max_padding_size_mb:
                default: 8
                description: "Maximum size allowed as padding to align row groups.\
                  \ This is also the minimum size of a row group. Default: 8 MB."
                title: "Max Padding Size (MB)"
                type: "integer"
              page_size_kb:
                default: 1024
                description: "The page size is for compression. A block is composed\
                  \ of pages. A page is the smallest unit that must be read fully\
                  \ to access a single record. If this value is too small, the compression\
                  \ will deteriorate. Default: 1024 KB."
                title: "Page Size (KB)"
                type: "integer"
            required:
            - "format_type"
            title: "Parquet: Columnar Storage"
            type: "object"
          order: 6
          title: "Output Format"
          type: "object"
        role_arn:
          description: "The ARN of the AWS role to assume. Only usable in Airbyte\
            \ Cloud."
          examples:
          - "arn:aws:iam::123456789:role/ExternalIdIsYourWorkspaceId"
          order: 2
          title: "Role ARN"
          type: "string"
        s3_bucket_name:
          description: "The name of the S3 bucket. Read more <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html\"\
            >here</a>."
          examples:
          - "airbyte_sync"
          order: 3
          title: "S3 Bucket Name"
          type: "string"
        s3_bucket_path:
          description: "Directory under the S3 bucket where data will be written.\
            \ Read more <a href=\"https://docs.airbyte.com/integrations/destinations/s3#:~:text=to%20format%20the-,bucket%20path,-%3A\"\
            >here</a>"
          examples:
          - "data_sync/test"
          order: 4
          title: "S3 Bucket Path"
          type: "string"
        s3_bucket_region:
          default: ""
          description: "The region of the S3 bucket. See <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\"\
            >here</a> for all region codes."
          enum:
          - ""
          - "af-south-1"
          - "ap-east-1"
          - "ap-northeast-1"
          - "ap-northeast-2"
          - "ap-northeast-3"
          - "ap-south-1"
          - "ap-south-2"
          - "ap-southeast-1"
          - "ap-southeast-2"
          - "ap-southeast-3"
          - "ap-southeast-4"
          - "ca-central-1"
          - "ca-west-1"
          - "cn-north-1"
          - "cn-northwest-1"
          - "eu-central-1"
          - "eu-central-2"
          - "eu-north-1"
          - "eu-south-1"
          - "eu-south-2"
          - "eu-west-1"
          - "eu-west-2"
          - "eu-west-3"
          - "il-central-1"
          - "me-central-1"
          - "me-south-1"
          - "sa-east-1"
          - "us-east-1"
          - "us-east-2"
          - "us-gov-east-1"
          - "us-gov-west-1"
          - "us-west-1"
          - "us-west-2"
          examples:
          - "us-east-1"
          order: 5
          title: "S3 Bucket Region"
          type: "string"
        s3_endpoint:
          description: "Your S3 endpoint url. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/s3.html#:~:text=Service%20endpoints-,Amazon%20S3%20endpoints,-When%20you%20use\"\
            >here</a>"
          examples:
          - "http://localhost:9000"
          order: 7
          title: "S3 Endpoint"
          type: "string"
        s3_path_format:
          description: "Format string on how data will be organized inside the bucket\
            \ directory. Read more <a href=\"https://docs.airbyte.com/integrations/destinations/s3#:~:text=The%20full%20path%20of%20the%20output%20data%20with%20the%20default%20S3%20path%20format\"\
            >here</a>"
          examples:
          - "${NAMESPACE}/${STREAM_NAME}/${YEAR}_${MONTH}_${DAY}_${EPOCH}_"
          order: 8
          title: "S3 Path Format"
          type: "string"
        secret_access_key:
          airbyte_secret: true
          always_show: true
          description: "The corresponding secret to the access key ID. Read more <a\
            \ href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\"\
            >here</a>"
          examples:
          - "a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"
          order: 1
          title: "Secret Access Key"
          type: "string"
      required:
      - "s3_bucket_name"
      - "s3_bucket_path"
      - "s3_bucket_region"
      - "format"
      title: "S3 V2 Destination Spec"
      type: "object"
    destination-redis:
      properties:
        cache_type:
          default: "hash"
          description: "Redis cache type to store data in."
          enum:
          - "hash"
          order: 7
          title: "Cache type"
          type: "string"
        host:
          description: "Redis host to connect to."
          examples:
          - "localhost,127.0.0.1"
          order: 1
          title: "Host"
          type: "string"
        password:
          airbyte_secret: true
          description: "Password associated with Redis."
          order: 4
          title: "Password"
          type: "string"
          x-speakeasy-param-sensitive: true
        port:
          default: 6379
          description: "Port of Redis."
          maximum: 65536
          minimum: 0
          order: 2
          title: "Port"
          type: "integer"
        ssl:
          default: false
          description: "Indicates whether SSL encryption protocol will be used to\
            \ connect to Redis. It is recommended to use SSL connection if possible."
          order: 5
          title: "SSL Connection"
          type: "boolean"
        ssl_mode:
          description: "SSL connection modes. \n  <li><b>verify-full</b> - This is\
            \ the most secure mode. Always require encryption and verifies the identity\
            \ of the source database server"
          oneOf:
          - additionalProperties: false
            description: "Disable SSL."
            properties:
              mode:
                const: "disable"
                default: "disable"
                enum:
                - "disable"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "disable"
          - additionalProperties: false
            description: "Verify-full SSL mode."
            properties:
              ca_certificate:
                airbyte_secret: true
                description: "CA certificate"
                multiline: true
                order: 1
                title: "CA Certificate"
                type: "string"
                x-speakeasy-param-sensitive: true
              client_certificate:
                airbyte_secret: true
                description: "Client certificate"
                multiline: true
                order: 2
                title: "Client Certificate"
                type: "string"
                x-speakeasy-param-sensitive: true
              client_key:
                airbyte_secret: true
                description: "Client key"
                multiline: true
                order: 3
                title: "Client Key"
                type: "string"
                x-speakeasy-param-sensitive: true
              client_key_password:
                airbyte_secret: true
                description: "Password for keystorage. If you do not add it - the\
                  \ password will be generated automatically."
                order: 4
                title: "Client key password"
                type: "string"
                x-speakeasy-param-sensitive: true
              mode:
                const: "verify-full"
                default: "verify-full"
                enum:
                - "verify-full"
                order: 0
                type: "string"
            required:
            - "mode"
            - "ca_certificate"
            - "client_certificate"
            - "client_key"
            title: "verify-full"
          order: 6
          title: "SSL Modes"
          type: "object"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
                x-speakeasy-param-sensitive: true
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        username:
          description: "Username associated with Redis."
          order: 3
          title: "Username"
          type: "string"
        destinationType:
          title: "redis"
          const: "redis"
          enum:
          - "redis"
          order: 0
          type: "string"
      required:
      - "host"
      - "username"
      - "port"
      - "cache_type"
      - "destinationType"
      title: "Redis Destination Spec"
      type: "object"
    destination-redis-update:
      properties:
        cache_type:
          default: "hash"
          description: "Redis cache type to store data in."
          enum:
          - "hash"
          order: 7
          title: "Cache type"
          type: "string"
        host:
          description: "Redis host to connect to."
          examples:
          - "localhost,127.0.0.1"
          order: 1
          title: "Host"
          type: "string"
        password:
          airbyte_secret: true
          description: "Password associated with Redis."
          order: 4
          title: "Password"
          type: "string"
        port:
          default: 6379
          description: "Port of Redis."
          maximum: 65536
          minimum: 0
          order: 2
          title: "Port"
          type: "integer"
        ssl:
          default: false
          description: "Indicates whether SSL encryption protocol will be used to\
            \ connect to Redis. It is recommended to use SSL connection if possible."
          order: 5
          title: "SSL Connection"
          type: "boolean"
        ssl_mode:
          description: "SSL connection modes. \n  <li><b>verify-full</b> - This is\
            \ the most secure mode. Always require encryption and verifies the identity\
            \ of the source database server"
          oneOf:
          - additionalProperties: false
            description: "Disable SSL."
            properties:
              mode:
                const: "disable"
                default: "disable"
                enum:
                - "disable"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "disable"
          - additionalProperties: false
            description: "Verify-full SSL mode."
            properties:
              ca_certificate:
                airbyte_secret: true
                description: "CA certificate"
                multiline: true
                order: 1
                title: "CA Certificate"
                type: "string"
              client_certificate:
                airbyte_secret: true
                description: "Client certificate"
                multiline: true
                order: 2
                title: "Client Certificate"
                type: "string"
              client_key:
                airbyte_secret: true
                description: "Client key"
                multiline: true
                order: 3
                title: "Client Key"
                type: "string"
              client_key_password:
                airbyte_secret: true
                description: "Password for keystorage. If you do not add it - the\
                  \ password will be generated automatically."
                order: 4
                title: "Client key password"
                type: "string"
              mode:
                const: "verify-full"
                default: "verify-full"
                enum:
                - "verify-full"
                order: 0
                type: "string"
            required:
            - "mode"
            - "ca_certificate"
            - "client_certificate"
            - "client_key"
            title: "verify-full"
          order: 6
          title: "SSL Modes"
          type: "object"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        username:
          description: "Username associated with Redis."
          order: 3
          title: "Username"
          type: "string"
      required:
      - "host"
      - "username"
      - "port"
      - "cache_type"
      title: "Redis Destination Spec"
      type: "object"
    destination-typesense:
      properties:
        api_key:
          description: "Typesense API Key"
          order: 0
          title: "API Key"
          type: "string"
        batch_size:
          description: "How many documents should be imported together. Default 1000"
          order: 4
          title: "Batch size"
          type: "integer"
        host:
          description: "Hostname of the Typesense instance without protocol. Accept\
            \ multiple hosts separated by comma."
          order: 1
          title: "Host"
          type: "string"
        path:
          description: "Path of the Typesense instance. Default is none"
          order: 5
          title: "Path"
          type: "string"
        port:
          description: "Port of the Typesense instance. Ex: 8108, 80, 443. Default\
            \ is 8108"
          order: 2
          title: "Port"
          type: "string"
        protocol:
          description: "Protocol of the Typesense instance. Ex: http or https. Default\
            \ is https"
          order: 3
          title: "Protocol"
          type: "string"
        destinationType:
          title: "typesense"
          const: "typesense"
          enum:
          - "typesense"
          order: 0
          type: "string"
      required:
      - "api_key"
      - "host"
      - "destinationType"
      title: "Destination Typesense"
      type: "object"
    destination-typesense-update:
      properties:
        api_key:
          description: "Typesense API Key"
          order: 0
          title: "API Key"
          type: "string"
        batch_size:
          description: "How many documents should be imported together. Default 1000"
          order: 4
          title: "Batch size"
          type: "integer"
        host:
          description: "Hostname of the Typesense instance without protocol. Accept\
            \ multiple hosts separated by comma."
          order: 1
          title: "Host"
          type: "string"
        path:
          description: "Path of the Typesense instance. Default is none"
          order: 5
          title: "Path"
          type: "string"
        port:
          description: "Port of the Typesense instance. Ex: 8108, 80, 443. Default\
            \ is 8108"
          order: 2
          title: "Port"
          type: "string"
        protocol:
          description: "Protocol of the Typesense instance. Ex: http or https. Default\
            \ is https"
          order: 3
          title: "Protocol"
          type: "string"
      required:
      - "api_key"
      - "host"
      title: "Destination Typesense"
      type: "object"
    destination-elasticsearch:
      properties:
        authenticationMethod:
          description: "The type of authentication to be used"
          oneOf:
          - additionalProperties: false
            description: "No authentication will be used"
            properties:
              method:
                const: "none"
                type: "string"
                enum:
                - "none"
            required:
            - "method"
            title: "None"
          - additionalProperties: false
            description: "Use a api key and secret combination to authenticate"
            properties:
              apiKeyId:
                description: "The Key ID to used when accessing an enterprise Elasticsearch\
                  \ instance."
                title: "API Key ID"
                type: "string"
              apiKeySecret:
                airbyte_secret: true
                description: "The secret associated with the API Key ID."
                title: "API Key Secret"
                type: "string"
                x-speakeasy-param-sensitive: true
              method:
                const: "secret"
                type: "string"
                enum:
                - "secret"
            required:
            - "method"
            - "apiKeyId"
            - "apiKeySecret"
            title: "Api Key/Secret"
          - additionalProperties: false
            description: "Basic auth header with a username and password"
            properties:
              method:
                const: "basic"
                type: "string"
                enum:
                - "basic"
              password:
                airbyte_secret: true
                description: "Basic auth password to access a secure Elasticsearch\
                  \ server"
                title: "Password"
                type: "string"
                x-speakeasy-param-sensitive: true
              username:
                description: "Basic auth username to access a secure Elasticsearch\
                  \ server"
                title: "Username"
                type: "string"
            required:
            - "method"
            - "username"
            - "password"
            title: "Username/Password"
          title: "Authentication Method"
          type: "object"
        ca_certificate:
          airbyte_secret: true
          description: "CA certificate"
          multiline: true
          title: "CA certificate"
          type: "string"
          x-speakeasy-param-sensitive: true
        endpoint:
          description: "The full url of the Elasticsearch server"
          title: "Server Endpoint"
          type: "string"
        pathPrefix:
          description: "The Path Prefix of the Elasticsearch server"
          title: "Server path prefix"
          type: "string"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
                x-speakeasy-param-sensitive: true
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        upsert:
          default: true
          description: "If a primary key identifier is defined in the source, an upsert\
            \ will be performed using the primary key value as the elasticsearch doc\
            \ id. Does not support composite primary keys."
          title: "Upsert Records"
          type: "boolean"
        destinationType:
          title: "elasticsearch"
          const: "elasticsearch"
          enum:
          - "elasticsearch"
          order: 0
          type: "string"
      required:
      - "endpoint"
      - "destinationType"
      title: "Elasticsearch Connection Configuration"
      type: "object"
    destination-elasticsearch-update:
      properties:
        authenticationMethod:
          description: "The type of authentication to be used"
          oneOf:
          - additionalProperties: false
            description: "No authentication will be used"
            properties:
              method:
                const: "none"
                type: "string"
                enum:
                - "none"
            required:
            - "method"
            title: "None"
          - additionalProperties: false
            description: "Use a api key and secret combination to authenticate"
            properties:
              apiKeyId:
                description: "The Key ID to used when accessing an enterprise Elasticsearch\
                  \ instance."
                title: "API Key ID"
                type: "string"
              apiKeySecret:
                airbyte_secret: true
                description: "The secret associated with the API Key ID."
                title: "API Key Secret"
                type: "string"
              method:
                const: "secret"
                type: "string"
                enum:
                - "secret"
            required:
            - "method"
            - "apiKeyId"
            - "apiKeySecret"
            title: "Api Key/Secret"
          - additionalProperties: false
            description: "Basic auth header with a username and password"
            properties:
              method:
                const: "basic"
                type: "string"
                enum:
                - "basic"
              password:
                airbyte_secret: true
                description: "Basic auth password to access a secure Elasticsearch\
                  \ server"
                title: "Password"
                type: "string"
              username:
                description: "Basic auth username to access a secure Elasticsearch\
                  \ server"
                title: "Username"
                type: "string"
            required:
            - "method"
            - "username"
            - "password"
            title: "Username/Password"
          title: "Authentication Method"
          type: "object"
        ca_certificate:
          airbyte_secret: true
          description: "CA certificate"
          multiline: true
          title: "CA certificate"
          type: "string"
        endpoint:
          description: "The full url of the Elasticsearch server"
          title: "Server Endpoint"
          type: "string"
        pathPrefix:
          description: "The Path Prefix of the Elasticsearch server"
          title: "Server path prefix"
          type: "string"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        upsert:
          default: true
          description: "If a primary key identifier is defined in the source, an upsert\
            \ will be performed using the primary key value as the elasticsearch doc\
            \ id. Does not support composite primary keys."
          title: "Upsert Records"
          type: "boolean"
      required:
      - "endpoint"
      title: "Elasticsearch Connection Configuration"
      type: "object"
    destination-azure-blob-storage:
      properties:
        azure_blob_storage_account_key:
          airbyte_secret: true
          always_show: true
          description: "The Azure blob storage account key. If you set this value,\
            \ you must not set the Shared Access Signature."
          examples:
          - "Z8ZkZpteggFx394vm+PJHnGTvdRncaYS+JhLKdj789YNmD+iyGTnG+PV+POiuYNhBg/ACS+LKjd%4FG3FHGN12Nd=="
          title: "Azure Blob Storage account key"
          type: "string"
          x-speakeasy-param-sensitive: true
        azure_blob_storage_account_name:
          description: "The name of the Azure Blob Storage Account. Read more <a href=\"\
            https://learn.microsoft.com/en-gb/azure/storage/blobs/storage-blobs-introduction#storage-accounts\"\
            >here</a>."
          examples:
          - "mystorageaccount"
          title: "Azure Blob Storage Account Name"
          type: "string"
        azure_blob_storage_container_name:
          description: "The name of the Azure Blob Storage Container. Read more <a\
            \ href=\"https://learn.microsoft.com/en-gb/azure/storage/blobs/storage-blobs-introduction#containers\"\
            >here</a>."
          examples:
          - "mycontainer"
          title: "Azure Blob Storage Container Name"
          type: "string"
        azure_blob_storage_endpoint_domain_name:
          description: "This is Azure Blob Storage endpoint domain name. Leave default\
            \ value (or leave it empty if run container from command line) to use\
            \ Microsoft native from example."
          title: "Azure Blob Storage Endpoint Domain Name"
          type: "string"
        azure_blob_storage_spill_size:
          default: 500
          description: "The amount of megabytes after which the connector should spill\
            \ the records in a new blob object. Make sure to configure size greater\
            \ than individual records. Enter 0 if not applicable."
          title: "Azure Blob Storage target blob size (Megabytes)"
          type: "integer"
        format:
          description: "Format of the data output."
          oneOf:
          - additionalProperties: true
            properties:
              flattening:
                default: "No flattening"
                enum:
                - "No flattening"
                - "Root level flattening"
                title: "Flattening"
                type: "string"
              format_type:
                default: "CSV"
                enum:
                - "CSV"
                type: "string"
            required:
            - "format_type"
            - "flattening"
            title: "CSV: Comma-Separated Values"
            type: "object"
          - additionalProperties: true
            properties:
              flattening:
                default: "No flattening"
                enum:
                - "No flattening"
                - "Root level flattening"
                title: "Flattening"
                type: "string"
              format_type:
                default: "JSONL"
                enum:
                - "JSONL"
                type: "string"
            required:
            - "format_type"
            title: "JSON Lines: Newline-delimited JSON"
            type: "object"
          title: "Output Format"
          type: "object"
        shared_access_signature:
          airbyte_secret: true
          always_show: true
          description: "A shared access signature (SAS) provides secure delegated\
            \ access to resources in your storage account. Read more <a href=\"https://learn.microsoft.com/en-gb/azure/storage/common/storage-sas-overview?toc=%2Fazure%2Fstorage%2Fblobs%2Ftoc.json&bc=%2Fazure%2Fstorage%2Fblobs%2Fbreadcrumb%2Ftoc.json\"\
            >here</a>. If you set this value, you must not set the account key."
          examples:
          - "sv=2021-08-06&st=2025-04-11T00%3A00%3A00Z&se=2025-04-12T00%3A00%3A00Z&sr=b&sp=rw&sig=abcdefghijklmnopqrstuvwxyz1234567890%2Fabcdefg%3D"
          title: "Shared Access Signature"
          type: "string"
          x-speakeasy-param-sensitive: true
        destinationType:
          title: "azure-blob-storage"
          const: "azure-blob-storage"
          enum:
          - "azure-blob-storage"
          order: 0
          type: "string"
      required:
      - "azure_blob_storage_account_name"
      - "azure_blob_storage_container_name"
      - "format"
      - "destinationType"
      title: "Azure Blob Storage Destination Spec"
      type: "object"
    destination-azure-blob-storage-update:
      properties:
        azure_blob_storage_account_key:
          airbyte_secret: true
          always_show: true
          description: "The Azure blob storage account key. If you set this value,\
            \ you must not set the Shared Access Signature."
          examples:
          - "Z8ZkZpteggFx394vm+PJHnGTvdRncaYS+JhLKdj789YNmD+iyGTnG+PV+POiuYNhBg/ACS+LKjd%4FG3FHGN12Nd=="
          title: "Azure Blob Storage account key"
          type: "string"
        azure_blob_storage_account_name:
          description: "The name of the Azure Blob Storage Account. Read more <a href=\"\
            https://learn.microsoft.com/en-gb/azure/storage/blobs/storage-blobs-introduction#storage-accounts\"\
            >here</a>."
          examples:
          - "mystorageaccount"
          title: "Azure Blob Storage Account Name"
          type: "string"
        azure_blob_storage_container_name:
          description: "The name of the Azure Blob Storage Container. Read more <a\
            \ href=\"https://learn.microsoft.com/en-gb/azure/storage/blobs/storage-blobs-introduction#containers\"\
            >here</a>."
          examples:
          - "mycontainer"
          title: "Azure Blob Storage Container Name"
          type: "string"
        azure_blob_storage_endpoint_domain_name:
          description: "This is Azure Blob Storage endpoint domain name. Leave default\
            \ value (or leave it empty if run container from command line) to use\
            \ Microsoft native from example."
          title: "Azure Blob Storage Endpoint Domain Name"
          type: "string"
        azure_blob_storage_spill_size:
          default: 500
          description: "The amount of megabytes after which the connector should spill\
            \ the records in a new blob object. Make sure to configure size greater\
            \ than individual records. Enter 0 if not applicable."
          title: "Azure Blob Storage target blob size (Megabytes)"
          type: "integer"
        format:
          description: "Format of the data output."
          oneOf:
          - additionalProperties: true
            properties:
              flattening:
                default: "No flattening"
                enum:
                - "No flattening"
                - "Root level flattening"
                title: "Flattening"
                type: "string"
              format_type:
                default: "CSV"
                enum:
                - "CSV"
                type: "string"
            required:
            - "format_type"
            - "flattening"
            title: "CSV: Comma-Separated Values"
            type: "object"
          - additionalProperties: true
            properties:
              flattening:
                default: "No flattening"
                enum:
                - "No flattening"
                - "Root level flattening"
                title: "Flattening"
                type: "string"
              format_type:
                default: "JSONL"
                enum:
                - "JSONL"
                type: "string"
            required:
            - "format_type"
            title: "JSON Lines: Newline-delimited JSON"
            type: "object"
          title: "Output Format"
          type: "object"
        shared_access_signature:
          airbyte_secret: true
          always_show: true
          description: "A shared access signature (SAS) provides secure delegated\
            \ access to resources in your storage account. Read more <a href=\"https://learn.microsoft.com/en-gb/azure/storage/common/storage-sas-overview?toc=%2Fazure%2Fstorage%2Fblobs%2Ftoc.json&bc=%2Fazure%2Fstorage%2Fblobs%2Fbreadcrumb%2Ftoc.json\"\
            >here</a>. If you set this value, you must not set the account key."
          examples:
          - "sv=2021-08-06&st=2025-04-11T00%3A00%3A00Z&se=2025-04-12T00%3A00%3A00Z&sr=b&sp=rw&sig=abcdefghijklmnopqrstuvwxyz1234567890%2Fabcdefg%3D"
          title: "Shared Access Signature"
          type: "string"
      required:
      - "azure_blob_storage_account_name"
      - "azure_blob_storage_container_name"
      - "format"
      title: "Azure Blob Storage Destination Spec"
      type: "object"
    destination-yellowbrick:
      properties:
        database:
          description: "Name of the database."
          order: 2
          title: "DB Name"
          type: "string"
        host:
          description: "Hostname of the database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 8
          title: "JDBC URL Params"
          type: "string"
        password:
          airbyte_secret: true
          description: "Password associated with the username."
          order: 5
          title: "Password"
          type: "string"
          x-speakeasy-param-sensitive: true
        port:
          default: 5432
          description: "Port of the database."
          examples:
          - "5432"
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        schema:
          default: "public"
          description: "The default schema tables are written to if the source does\
            \ not specify a namespace. The usual value for this field is \"public\"\
            ."
          examples:
          - "public"
          order: 3
          title: "Default Schema"
          type: "string"
        ssl:
          default: false
          description: "Encrypt data using SSL. When activating SSL, please select\
            \ one of the connection modes."
          order: 6
          title: "SSL Connection"
          type: "boolean"
        ssl_mode:
          description: "SSL connection modes. \n <b>disable</b> - Chose this mode\
            \ to disable encryption of communication between Airbyte and destination\
            \ database\n <b>allow</b> - Chose this mode to enable encryption only\
            \ when required by the source database\n <b>prefer</b> - Chose this mode\
            \ to allow unencrypted connection only if the source database does not\
            \ support encryption\n <b>require</b> - Chose this mode to always require\
            \ encryption. If the source database server does not support encryption,\
            \ connection will fail\n  <b>verify-ca</b> - Chose this mode to always\
            \ require encryption and to verify that the source database server has\
            \ a valid SSL certificate\n  <b>verify-full</b> - This is the most secure\
            \ mode. Chose this mode to always require encryption and to verify the\
            \ identity of the source database server\n See more information - <a href=\"\
            https://jdbc.postgresql.org/documentation/head/ssl-client.html\"> in the\
            \ docs</a>."
          oneOf:
          - additionalProperties: false
            description: "Disable SSL."
            properties:
              mode:
                const: "disable"
                default: "disable"
                enum:
                - "disable"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "disable"
          - additionalProperties: false
            description: "Allow SSL mode."
            properties:
              mode:
                const: "allow"
                default: "allow"
                enum:
                - "allow"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "allow"
          - additionalProperties: false
            description: "Prefer SSL mode."
            properties:
              mode:
                const: "prefer"
                default: "prefer"
                enum:
                - "prefer"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "prefer"
          - additionalProperties: false
            description: "Require SSL mode."
            properties:
              mode:
                const: "require"
                default: "require"
                enum:
                - "require"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "require"
          - additionalProperties: false
            description: "Verify-ca SSL mode."
            properties:
              ca_certificate:
                airbyte_secret: true
                description: "CA certificate"
                multiline: true
                order: 1
                title: "CA certificate"
                type: "string"
                x-speakeasy-param-sensitive: true
              client_key_password:
                airbyte_secret: true
                description: "Password for keystorage. This field is optional. If\
                  \ you do not add it - the password will be generated automatically."
                order: 4
                title: "Client key password"
                type: "string"
                x-speakeasy-param-sensitive: true
              mode:
                const: "verify-ca"
                default: "verify-ca"
                enum:
                - "verify-ca"
                order: 0
                type: "string"
            required:
            - "mode"
            - "ca_certificate"
            title: "verify-ca"
          - additionalProperties: false
            description: "Verify-full SSL mode."
            properties:
              ca_certificate:
                airbyte_secret: true
                description: "CA certificate"
                multiline: true
                order: 1
                title: "CA certificate"
                type: "string"
                x-speakeasy-param-sensitive: true
              client_certificate:
                airbyte_secret: true
                description: "Client certificate"
                multiline: true
                order: 2
                title: "Client certificate"
                type: "string"
                x-speakeasy-param-sensitive: true
              client_key:
                airbyte_secret: true
                description: "Client key"
                multiline: true
                order: 3
                title: "Client key"
                type: "string"
                x-speakeasy-param-sensitive: true
              client_key_password:
                airbyte_secret: true
                description: "Password for keystorage. This field is optional. If\
                  \ you do not add it - the password will be generated automatically."
                order: 4
                title: "Client key password"
                type: "string"
                x-speakeasy-param-sensitive: true
              mode:
                const: "verify-full"
                default: "verify-full"
                enum:
                - "verify-full"
                order: 0
                type: "string"
            required:
            - "mode"
            - "ca_certificate"
            - "client_certificate"
            - "client_key"
            title: "verify-full"
          order: 7
          title: "SSL modes"
          type: "object"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
                x-speakeasy-param-sensitive: true
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        username:
          description: "Username to use to access the database."
          order: 4
          title: "User"
          type: "string"
        destinationType:
          title: "yellowbrick"
          const: "yellowbrick"
          enum:
          - "yellowbrick"
          order: 0
          type: "string"
      required:
      - "host"
      - "port"
      - "username"
      - "database"
      - "schema"
      - "destinationType"
      title: "Yellowbrick Destination Spec"
      type: "object"
    destination-yellowbrick-update:
      properties:
        database:
          description: "Name of the database."
          order: 2
          title: "DB Name"
          type: "string"
        host:
          description: "Hostname of the database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 8
          title: "JDBC URL Params"
          type: "string"
        password:
          airbyte_secret: true
          description: "Password associated with the username."
          order: 5
          title: "Password"
          type: "string"
        port:
          default: 5432
          description: "Port of the database."
          examples:
          - "5432"
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        schema:
          default: "public"
          description: "The default schema tables are written to if the source does\
            \ not specify a namespace. The usual value for this field is \"public\"\
            ."
          examples:
          - "public"
          order: 3
          title: "Default Schema"
          type: "string"
        ssl:
          default: false
          description: "Encrypt data using SSL. When activating SSL, please select\
            \ one of the connection modes."
          order: 6
          title: "SSL Connection"
          type: "boolean"
        ssl_mode:
          description: "SSL connection modes. \n <b>disable</b> - Chose this mode\
            \ to disable encryption of communication between Airbyte and destination\
            \ database\n <b>allow</b> - Chose this mode to enable encryption only\
            \ when required by the source database\n <b>prefer</b> - Chose this mode\
            \ to allow unencrypted connection only if the source database does not\
            \ support encryption\n <b>require</b> - Chose this mode to always require\
            \ encryption. If the source database server does not support encryption,\
            \ connection will fail\n  <b>verify-ca</b> - Chose this mode to always\
            \ require encryption and to verify that the source database server has\
            \ a valid SSL certificate\n  <b>verify-full</b> - This is the most secure\
            \ mode. Chose this mode to always require encryption and to verify the\
            \ identity of the source database server\n See more information - <a href=\"\
            https://jdbc.postgresql.org/documentation/head/ssl-client.html\"> in the\
            \ docs</a>."
          oneOf:
          - additionalProperties: false
            description: "Disable SSL."
            properties:
              mode:
                const: "disable"
                default: "disable"
                enum:
                - "disable"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "disable"
          - additionalProperties: false
            description: "Allow SSL mode."
            properties:
              mode:
                const: "allow"
                default: "allow"
                enum:
                - "allow"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "allow"
          - additionalProperties: false
            description: "Prefer SSL mode."
            properties:
              mode:
                const: "prefer"
                default: "prefer"
                enum:
                - "prefer"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "prefer"
          - additionalProperties: false
            description: "Require SSL mode."
            properties:
              mode:
                const: "require"
                default: "require"
                enum:
                - "require"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "require"
          - additionalProperties: false
            description: "Verify-ca SSL mode."
            properties:
              ca_certificate:
                airbyte_secret: true
                description: "CA certificate"
                multiline: true
                order: 1
                title: "CA certificate"
                type: "string"
              client_key_password:
                airbyte_secret: true
                description: "Password for keystorage. This field is optional. If\
                  \ you do not add it - the password will be generated automatically."
                order: 4
                title: "Client key password"
                type: "string"
              mode:
                const: "verify-ca"
                default: "verify-ca"
                enum:
                - "verify-ca"
                order: 0
                type: "string"
            required:
            - "mode"
            - "ca_certificate"
            title: "verify-ca"
          - additionalProperties: false
            description: "Verify-full SSL mode."
            properties:
              ca_certificate:
                airbyte_secret: true
                description: "CA certificate"
                multiline: true
                order: 1
                title: "CA certificate"
                type: "string"
              client_certificate:
                airbyte_secret: true
                description: "Client certificate"
                multiline: true
                order: 2
                title: "Client certificate"
                type: "string"
              client_key:
                airbyte_secret: true
                description: "Client key"
                multiline: true
                order: 3
                title: "Client key"
                type: "string"
              client_key_password:
                airbyte_secret: true
                description: "Password for keystorage. This field is optional. If\
                  \ you do not add it - the password will be generated automatically."
                order: 4
                title: "Client key password"
                type: "string"
              mode:
                const: "verify-full"
                default: "verify-full"
                enum:
                - "verify-full"
                order: 0
                type: "string"
            required:
            - "mode"
            - "ca_certificate"
            - "client_certificate"
            - "client_key"
            title: "verify-full"
          order: 7
          title: "SSL modes"
          type: "object"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        username:
          description: "Username to use to access the database."
          order: 4
          title: "User"
          type: "string"
      required:
      - "host"
      - "port"
      - "username"
      - "database"
      - "schema"
      title: "Yellowbrick Destination Spec"
      type: "object"
    destination-postgres:
      properties:
        database:
          description: "Name of the database."
          order: 2
          title: "DB Name"
          type: "string"
        disable_type_dedupe:
          default: false
          description: "Disable Writing Final Tables. WARNING! The data format in\
            \ _airbyte_data is likely stable but there are no guarantees that other\
            \ metadata columns will remain the same in future versions"
          order: 10
          title: "Disable Final Tables. (WARNING! Unstable option; Columns in raw\
            \ table schema might change between versions)"
          type: "boolean"
        drop_cascade:
          default: false
          description: "Drop tables with CASCADE. WARNING! This will delete all data\
            \ in all dependent objects (views, etc.). Use with caution. This option\
            \ is intended for usecases which can easily rebuild the dependent objects."
          order: 11
          title: "Drop tables with CASCADE. (WARNING! Risk of unrecoverable data loss)"
          type: "boolean"
        host:
          description: "Hostname of the database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 8
          title: "JDBC URL Params"
          type: "string"
        password:
          airbyte_secret: true
          description: "Password associated with the username."
          order: 5
          title: "Password"
          type: "string"
          x-speakeasy-param-sensitive: true
        port:
          default: 5432
          description: "Port of the database."
          examples:
          - "5432"
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        raw_data_schema:
          description: "The schema to write raw tables into"
          order: 9
          title: "Raw table schema (defaults to airbyte_internal)"
          type: "string"
        schema:
          default: "public"
          description: "The default schema tables are written to if the source does\
            \ not specify a namespace. The usual value for this field is \"public\"\
            ."
          examples:
          - "public"
          order: 3
          title: "Default Schema"
          type: "string"
        ssl:
          default: false
          description: "Encrypt data using SSL. When activating SSL, please select\
            \ one of the connection modes."
          order: 6
          title: "SSL Connection"
          type: "boolean"
        ssl_mode:
          description: "SSL connection modes. \n <b>disable</b> - Chose this mode\
            \ to disable encryption of communication between Airbyte and destination\
            \ database\n <b>allow</b> - Chose this mode to enable encryption only\
            \ when required by the source database\n <b>prefer</b> - Chose this mode\
            \ to allow unencrypted connection only if the source database does not\
            \ support encryption\n <b>require</b> - Chose this mode to always require\
            \ encryption. If the source database server does not support encryption,\
            \ connection will fail\n  <b>verify-ca</b> - Chose this mode to always\
            \ require encryption and to verify that the source database server has\
            \ a valid SSL certificate\n  <b>verify-full</b> - This is the most secure\
            \ mode. Chose this mode to always require encryption and to verify the\
            \ identity of the source database server\n See more information - <a href=\"\
            https://jdbc.postgresql.org/documentation/head/ssl-client.html\"> in the\
            \ docs</a>."
          oneOf:
          - additionalProperties: false
            description: "Disable SSL."
            properties:
              mode:
                const: "disable"
                default: "disable"
                enum:
                - "disable"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "disable"
          - additionalProperties: false
            description: "Allow SSL mode."
            properties:
              mode:
                const: "allow"
                default: "allow"
                enum:
                - "allow"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "allow"
          - additionalProperties: false
            description: "Prefer SSL mode."
            properties:
              mode:
                const: "prefer"
                default: "prefer"
                enum:
                - "prefer"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "prefer"
          - additionalProperties: false
            description: "Require SSL mode."
            properties:
              mode:
                const: "require"
                default: "require"
                enum:
                - "require"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "require"
          - additionalProperties: false
            description: "Verify-ca SSL mode."
            properties:
              ca_certificate:
                airbyte_secret: true
                description: "CA certificate"
                multiline: true
                order: 1
                title: "CA certificate"
                type: "string"
                x-speakeasy-param-sensitive: true
              client_key_password:
                airbyte_secret: true
                description: "Password for keystorage. This field is optional. If\
                  \ you do not add it - the password will be generated automatically."
                order: 4
                title: "Client key password"
                type: "string"
                x-speakeasy-param-sensitive: true
              mode:
                const: "verify-ca"
                default: "verify-ca"
                enum:
                - "verify-ca"
                order: 0
                type: "string"
            required:
            - "mode"
            - "ca_certificate"
            title: "verify-ca"
          - additionalProperties: false
            description: "Verify-full SSL mode."
            properties:
              ca_certificate:
                airbyte_secret: true
                description: "CA certificate"
                multiline: true
                order: 1
                title: "CA certificate"
                type: "string"
                x-speakeasy-param-sensitive: true
              client_certificate:
                airbyte_secret: true
                description: "Client certificate"
                multiline: true
                order: 2
                title: "Client certificate"
                type: "string"
                x-speakeasy-param-sensitive: true
              client_key:
                airbyte_secret: true
                description: "Client key"
                multiline: true
                order: 3
                title: "Client key"
                type: "string"
                x-speakeasy-param-sensitive: true
              client_key_password:
                airbyte_secret: true
                description: "Password for keystorage. This field is optional. If\
                  \ you do not add it - the password will be generated automatically."
                order: 4
                title: "Client key password"
                type: "string"
                x-speakeasy-param-sensitive: true
              mode:
                const: "verify-full"
                default: "verify-full"
                enum:
                - "verify-full"
                order: 0
                type: "string"
            required:
            - "mode"
            - "ca_certificate"
            - "client_certificate"
            - "client_key"
            title: "verify-full"
          order: 7
          title: "SSL modes"
          type: "object"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
                x-speakeasy-param-sensitive: true
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        unconstrained_number:
          default: false
          description: "Create numeric columns as unconstrained DECIMAL instead of\
            \ NUMBER(38, 9). This will allow increased precision in numeric values.\
            \ (this is disabled by default for backwards compatibility, but is recommended\
            \ to enable)"
          order: 12
          title: "Unconstrained numeric columns"
          type: "boolean"
        username:
          description: "Username to use to access the database."
          order: 4
          title: "User"
          type: "string"
        destinationType:
          title: "postgres"
          const: "postgres"
          enum:
          - "postgres"
          order: 0
          type: "string"
      required:
      - "host"
      - "port"
      - "username"
      - "database"
      - "schema"
      - "destinationType"
      title: "Postgres Destination Spec"
      type: "object"
    destination-postgres-update:
      properties:
        database:
          description: "Name of the database."
          order: 2
          title: "DB Name"
          type: "string"
        disable_type_dedupe:
          default: false
          description: "Disable Writing Final Tables. WARNING! The data format in\
            \ _airbyte_data is likely stable but there are no guarantees that other\
            \ metadata columns will remain the same in future versions"
          order: 10
          title: "Disable Final Tables. (WARNING! Unstable option; Columns in raw\
            \ table schema might change between versions)"
          type: "boolean"
        drop_cascade:
          default: false
          description: "Drop tables with CASCADE. WARNING! This will delete all data\
            \ in all dependent objects (views, etc.). Use with caution. This option\
            \ is intended for usecases which can easily rebuild the dependent objects."
          order: 11
          title: "Drop tables with CASCADE. (WARNING! Risk of unrecoverable data loss)"
          type: "boolean"
        host:
          description: "Hostname of the database."
          order: 0
          title: "Host"
          type: "string"
        jdbc_url_params:
          description: "Additional properties to pass to the JDBC URL string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
          order: 8
          title: "JDBC URL Params"
          type: "string"
        password:
          airbyte_secret: true
          description: "Password associated with the username."
          order: 5
          title: "Password"
          type: "string"
        port:
          default: 5432
          description: "Port of the database."
          examples:
          - "5432"
          maximum: 65536
          minimum: 0
          order: 1
          title: "Port"
          type: "integer"
        raw_data_schema:
          description: "The schema to write raw tables into"
          order: 9
          title: "Raw table schema (defaults to airbyte_internal)"
          type: "string"
        schema:
          default: "public"
          description: "The default schema tables are written to if the source does\
            \ not specify a namespace. The usual value for this field is \"public\"\
            ."
          examples:
          - "public"
          order: 3
          title: "Default Schema"
          type: "string"
        ssl:
          default: false
          description: "Encrypt data using SSL. When activating SSL, please select\
            \ one of the connection modes."
          order: 6
          title: "SSL Connection"
          type: "boolean"
        ssl_mode:
          description: "SSL connection modes. \n <b>disable</b> - Chose this mode\
            \ to disable encryption of communication between Airbyte and destination\
            \ database\n <b>allow</b> - Chose this mode to enable encryption only\
            \ when required by the source database\n <b>prefer</b> - Chose this mode\
            \ to allow unencrypted connection only if the source database does not\
            \ support encryption\n <b>require</b> - Chose this mode to always require\
            \ encryption. If the source database server does not support encryption,\
            \ connection will fail\n  <b>verify-ca</b> - Chose this mode to always\
            \ require encryption and to verify that the source database server has\
            \ a valid SSL certificate\n  <b>verify-full</b> - This is the most secure\
            \ mode. Chose this mode to always require encryption and to verify the\
            \ identity of the source database server\n See more information - <a href=\"\
            https://jdbc.postgresql.org/documentation/head/ssl-client.html\"> in the\
            \ docs</a>."
          oneOf:
          - additionalProperties: false
            description: "Disable SSL."
            properties:
              mode:
                const: "disable"
                default: "disable"
                enum:
                - "disable"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "disable"
          - additionalProperties: false
            description: "Allow SSL mode."
            properties:
              mode:
                const: "allow"
                default: "allow"
                enum:
                - "allow"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "allow"
          - additionalProperties: false
            description: "Prefer SSL mode."
            properties:
              mode:
                const: "prefer"
                default: "prefer"
                enum:
                - "prefer"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "prefer"
          - additionalProperties: false
            description: "Require SSL mode."
            properties:
              mode:
                const: "require"
                default: "require"
                enum:
                - "require"
                order: 0
                type: "string"
            required:
            - "mode"
            title: "require"
          - additionalProperties: false
            description: "Verify-ca SSL mode."
            properties:
              ca_certificate:
                airbyte_secret: true
                description: "CA certificate"
                multiline: true
                order: 1
                title: "CA certificate"
                type: "string"
              client_key_password:
                airbyte_secret: true
                description: "Password for keystorage. This field is optional. If\
                  \ you do not add it - the password will be generated automatically."
                order: 4
                title: "Client key password"
                type: "string"
              mode:
                const: "verify-ca"
                default: "verify-ca"
                enum:
                - "verify-ca"
                order: 0
                type: "string"
            required:
            - "mode"
            - "ca_certificate"
            title: "verify-ca"
          - additionalProperties: false
            description: "Verify-full SSL mode."
            properties:
              ca_certificate:
                airbyte_secret: true
                description: "CA certificate"
                multiline: true
                order: 1
                title: "CA certificate"
                type: "string"
              client_certificate:
                airbyte_secret: true
                description: "Client certificate"
                multiline: true
                order: 2
                title: "Client certificate"
                type: "string"
              client_key:
                airbyte_secret: true
                description: "Client key"
                multiline: true
                order: 3
                title: "Client key"
                type: "string"
              client_key_password:
                airbyte_secret: true
                description: "Password for keystorage. This field is optional. If\
                  \ you do not add it - the password will be generated automatically."
                order: 4
                title: "Client key password"
                type: "string"
              mode:
                const: "verify-full"
                default: "verify-full"
                enum:
                - "verify-full"
                order: 0
                type: "string"
            required:
            - "mode"
            - "ca_certificate"
            - "client_certificate"
            - "client_key"
            title: "verify-full"
          order: 7
          title: "SSL modes"
          type: "object"
        tunnel_method:
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - properties:
              tunnel_method:
                const: "NO_TUNNEL"
                description: "No ssh tunnel needed to connect to database"
                order: 0
                type: "string"
                enum:
                - "NO_TUNNEL"
            required:
            - "tunnel_method"
            title: "No Tunnel"
          - properties:
              ssh_key:
                airbyte_secret: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                multiline: true
                order: 4
                title: "SSH Private Key"
                type: "string"
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_KEY_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                order: 0
                type: "string"
                enum:
                - "SSH_KEY_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host."
                order: 3
                title: "SSH Login Username"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            title: "SSH Key Authentication"
          - properties:
              tunnel_host:
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                order: 1
                title: "SSH Tunnel Jump Server Host"
                type: "string"
              tunnel_method:
                const: "SSH_PASSWORD_AUTH"
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                order: 0
                type: "string"
                enum:
                - "SSH_PASSWORD_AUTH"
              tunnel_port:
                default: 22
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                examples:
                - "22"
                maximum: 65536
                minimum: 0
                order: 2
                title: "SSH Connection Port"
                type: "integer"
              tunnel_user:
                description: "OS-level username for logging into the jump server host"
                order: 3
                title: "SSH Login Username"
                type: "string"
              tunnel_user_password:
                airbyte_secret: true
                description: "OS-level password for logging into the jump server host"
                order: 4
                title: "Password"
                type: "string"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            title: "Password Authentication"
          title: "SSH Tunnel Method"
          type: "object"
        unconstrained_number:
          default: false
          description: "Create numeric columns as unconstrained DECIMAL instead of\
            \ NUMBER(38, 9). This will allow increased precision in numeric values.\
            \ (this is disabled by default for backwards compatibility, but is recommended\
            \ to enable)"
          order: 12
          title: "Unconstrained numeric columns"
          type: "boolean"
        username:
          description: "Username to use to access the database."
          order: 4
          title: "User"
          type: "string"
      required:
      - "host"
      - "port"
      - "username"
      - "database"
      - "schema"
      title: "Postgres Destination Spec"
      type: "object"
    destination-s3-data-lake:
      description: "Defines the configurations required to connect to an Iceberg catalog,\
        \ including warehouse location, main branch name, and catalog type specifics."
      properties:
        access_key_id:
          airbyte_secret: true
          always_show: true
          description: "The AWS Access Key ID with permissions for S3 and Glue operations."
          order: 0
          title: "AWS Access Key ID"
          type: "string"
          x-speakeasy-param-sensitive: true
        catalog_type:
          always_show: true
          description: "Specifies the type of Iceberg catalog (e.g., NESSIE, GLUE,\
            \ REST) and its associated configuration."
          oneOf:
          - additionalProperties: true
            description: "Configuration details for connecting to a Nessie-based Iceberg\
              \ catalog."
            properties:
              access_token:
                airbyte_secret: true
                description: "Optional token for authentication with the Nessie server."
                examples:
                - "a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"
                order: 2
                title: "Nessie Access Token"
                type: "string"
                x-speakeasy-param-sensitive: true
              catalog_type:
                default: "NESSIE"
                enum:
                - "NESSIE"
                type: "string"
              namespace:
                description: "The Nessie namespace to be used in the Table identifier.\
                  \ \n           This will ONLY be used if the `Destination Namespace`\
                  \ setting for the connection is set to\n           `Destination-defined`\
                  \ or `Source-defined`"
                title: "Default namespace"
                type: "string"
              server_uri:
                description: "The base URL of the Nessie server used to connect to\
                  \ the Nessie catalog."
                order: 1
                title: "Nessie Server URI"
                type: "string"
            required:
            - "catalog_type"
            - "server_uri"
            - "namespace"
            title: "Nessie Catalog"
            type: "object"
          - additionalProperties: true
            description: "Configuration details for connecting to an AWS Glue-based\
              \ Iceberg catalog."
            properties:
              catalog_type:
                default: "GLUE"
                enum:
                - "GLUE"
                type: "string"
              database_name:
                description: "The Glue database name. This will ONLY be used if the\
                  \ `Destination Namespace` setting for the connection is set to `Destination-defined`\
                  \ or `Source-defined`"
                title: "Default database"
                type: "string"
              glue_id:
                description: "The AWS Account ID associated with the Glue service\
                  \ used by the Iceberg catalog."
                order: 1
                title: "AWS Account ID"
                type: "string"
              role_arn:
                description: "The ARN of the AWS role to assume. Only usable in Airbyte\
                  \ Cloud."
                title: "Role ARN"
                type: "string"
            required:
            - "catalog_type"
            - "glue_id"
            - "database_name"
            title: "Glue Catalog"
            type: "object"
          - additionalProperties: true
            description: "Configuration details for connecting to a REST catalog."
            properties:
              catalog_type:
                default: "REST"
                enum:
                - "REST"
                type: "string"
              namespace:
                description: "The namespace to be used in the Table identifier. \n\
                  \           This will ONLY be used if the `Destination Namespace`\
                  \ setting for the connection is set to\n           `Destination-defined`\
                  \ or `Source-defined`"
                title: "Default namespace"
                type: "string"
              server_uri:
                description: "The base URL of the Rest server used to connect to the\
                  \ Rest catalog."
                order: 1
                title: "Rest Server URI"
                type: "string"
            required:
            - "catalog_type"
            - "server_uri"
            - "namespace"
            title: "Rest Catalog"
            type: "object"
          order: 7
          title: "Catalog Type"
          type: "object"
        main_branch_name:
          always_show: true
          default: "main"
          description: "The primary or default branch name in the catalog. Most query\
            \ engines will use \"main\" by default. See <a href=\"https://iceberg.apache.org/docs/latest/branching/\"\
            >Iceberg documentation</a> for more information."
          order: 6
          title: "Main Branch Name"
          type: "string"
        s3_bucket_name:
          always_show: true
          description: "The name of the S3 bucket that will host the Iceberg data."
          order: 2
          title: "S3 Bucket Name"
          type: "string"
        s3_bucket_region:
          always_show: true
          description: "The region of the S3 bucket. See <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\"\
            >here</a> for all region codes."
          enum:
          - ""
          - "af-south-1"
          - "ap-east-1"
          - "ap-northeast-1"
          - "ap-northeast-2"
          - "ap-northeast-3"
          - "ap-south-1"
          - "ap-south-2"
          - "ap-southeast-1"
          - "ap-southeast-2"
          - "ap-southeast-3"
          - "ap-southeast-4"
          - "ca-central-1"
          - "ca-west-1"
          - "cn-north-1"
          - "cn-northwest-1"
          - "eu-central-1"
          - "eu-central-2"
          - "eu-north-1"
          - "eu-south-1"
          - "eu-south-2"
          - "eu-west-1"
          - "eu-west-2"
          - "eu-west-3"
          - "il-central-1"
          - "me-central-1"
          - "me-south-1"
          - "sa-east-1"
          - "us-east-1"
          - "us-east-2"
          - "us-gov-east-1"
          - "us-gov-west-1"
          - "us-west-1"
          - "us-west-2"
          examples:
          - "us-east-1"
          order: 3
          title: "S3 Bucket Region"
          type: "string"
        s3_endpoint:
          description: "Your S3 endpoint url. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/s3.html#:~:text=Service%20endpoints-,Amazon%20S3%20endpoints,-When%20you%20use\"\
            >here</a>"
          order: 4
          title: "S3 Endpoint"
          type: "string"
        secret_access_key:
          airbyte_secret: true
          always_show: true
          description: "The AWS Secret Access Key paired with the Access Key ID for\
            \ AWS authentication."
          order: 1
          title: "AWS Secret Access Key"
          type: "string"
          x-speakeasy-param-sensitive: true
        warehouse_location:
          always_show: true
          description: "The root location of the data warehouse used by the Iceberg\
            \ catalog. Typically includes a bucket name and path within that bucket.\
            \ For AWS Glue and Nessie, must include the storage protocol (such as\
            \ \"s3://\" for Amazon S3)."
          examples:
          - "s3://your-bucket/path/to/store/files/in"
          order: 5
          title: "Warehouse Location"
          type: "string"
        destinationType:
          title: "s3-data-lake"
          const: "s3-data-lake"
          enum:
          - "s3-data-lake"
          order: 0
          type: "string"
      required:
      - "s3_bucket_name"
      - "s3_bucket_region"
      - "warehouse_location"
      - "main_branch_name"
      - "catalog_type"
      - "destinationType"
      title: "Iceberg V2 Destination Specification"
      type: "object"
    destination-s3-data-lake-update:
      description: "Defines the configurations required to connect to an Iceberg catalog,\
        \ including warehouse location, main branch name, and catalog type specifics."
      properties:
        access_key_id:
          airbyte_secret: true
          always_show: true
          description: "The AWS Access Key ID with permissions for S3 and Glue operations."
          order: 0
          title: "AWS Access Key ID"
          type: "string"
        catalog_type:
          always_show: true
          description: "Specifies the type of Iceberg catalog (e.g., NESSIE, GLUE,\
            \ REST) and its associated configuration."
          oneOf:
          - additionalProperties: true
            description: "Configuration details for connecting to a Nessie-based Iceberg\
              \ catalog."
            properties:
              access_token:
                airbyte_secret: true
                description: "Optional token for authentication with the Nessie server."
                examples:
                - "a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"
                order: 2
                title: "Nessie Access Token"
                type: "string"
              catalog_type:
                default: "NESSIE"
                enum:
                - "NESSIE"
                type: "string"
              namespace:
                description: "The Nessie namespace to be used in the Table identifier.\
                  \ \n           This will ONLY be used if the `Destination Namespace`\
                  \ setting for the connection is set to\n           `Destination-defined`\
                  \ or `Source-defined`"
                title: "Default namespace"
                type: "string"
              server_uri:
                description: "The base URL of the Nessie server used to connect to\
                  \ the Nessie catalog."
                order: 1
                title: "Nessie Server URI"
                type: "string"
            required:
            - "catalog_type"
            - "server_uri"
            - "namespace"
            title: "Nessie Catalog"
            type: "object"
          - additionalProperties: true
            description: "Configuration details for connecting to an AWS Glue-based\
              \ Iceberg catalog."
            properties:
              catalog_type:
                default: "GLUE"
                enum:
                - "GLUE"
                type: "string"
              database_name:
                description: "The Glue database name. This will ONLY be used if the\
                  \ `Destination Namespace` setting for the connection is set to `Destination-defined`\
                  \ or `Source-defined`"
                title: "Default database"
                type: "string"
              glue_id:
                description: "The AWS Account ID associated with the Glue service\
                  \ used by the Iceberg catalog."
                order: 1
                title: "AWS Account ID"
                type: "string"
              role_arn:
                description: "The ARN of the AWS role to assume. Only usable in Airbyte\
                  \ Cloud."
                title: "Role ARN"
                type: "string"
            required:
            - "catalog_type"
            - "glue_id"
            - "database_name"
            title: "Glue Catalog"
            type: "object"
          - additionalProperties: true
            description: "Configuration details for connecting to a REST catalog."
            properties:
              catalog_type:
                default: "REST"
                enum:
                - "REST"
                type: "string"
              namespace:
                description: "The namespace to be used in the Table identifier. \n\
                  \           This will ONLY be used if the `Destination Namespace`\
                  \ setting for the connection is set to\n           `Destination-defined`\
                  \ or `Source-defined`"
                title: "Default namespace"
                type: "string"
              server_uri:
                description: "The base URL of the Rest server used to connect to the\
                  \ Rest catalog."
                order: 1
                title: "Rest Server URI"
                type: "string"
            required:
            - "catalog_type"
            - "server_uri"
            - "namespace"
            title: "Rest Catalog"
            type: "object"
          order: 7
          title: "Catalog Type"
          type: "object"
        main_branch_name:
          always_show: true
          default: "main"
          description: "The primary or default branch name in the catalog. Most query\
            \ engines will use \"main\" by default. See <a href=\"https://iceberg.apache.org/docs/latest/branching/\"\
            >Iceberg documentation</a> for more information."
          order: 6
          title: "Main Branch Name"
          type: "string"
        s3_bucket_name:
          always_show: true
          description: "The name of the S3 bucket that will host the Iceberg data."
          order: 2
          title: "S3 Bucket Name"
          type: "string"
        s3_bucket_region:
          always_show: true
          description: "The region of the S3 bucket. See <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\"\
            >here</a> for all region codes."
          enum:
          - ""
          - "af-south-1"
          - "ap-east-1"
          - "ap-northeast-1"
          - "ap-northeast-2"
          - "ap-northeast-3"
          - "ap-south-1"
          - "ap-south-2"
          - "ap-southeast-1"
          - "ap-southeast-2"
          - "ap-southeast-3"
          - "ap-southeast-4"
          - "ca-central-1"
          - "ca-west-1"
          - "cn-north-1"
          - "cn-northwest-1"
          - "eu-central-1"
          - "eu-central-2"
          - "eu-north-1"
          - "eu-south-1"
          - "eu-south-2"
          - "eu-west-1"
          - "eu-west-2"
          - "eu-west-3"
          - "il-central-1"
          - "me-central-1"
          - "me-south-1"
          - "sa-east-1"
          - "us-east-1"
          - "us-east-2"
          - "us-gov-east-1"
          - "us-gov-west-1"
          - "us-west-1"
          - "us-west-2"
          examples:
          - "us-east-1"
          order: 3
          title: "S3 Bucket Region"
          type: "string"
        s3_endpoint:
          description: "Your S3 endpoint url. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/s3.html#:~:text=Service%20endpoints-,Amazon%20S3%20endpoints,-When%20you%20use\"\
            >here</a>"
          order: 4
          title: "S3 Endpoint"
          type: "string"
        secret_access_key:
          airbyte_secret: true
          always_show: true
          description: "The AWS Secret Access Key paired with the Access Key ID for\
            \ AWS authentication."
          order: 1
          title: "AWS Secret Access Key"
          type: "string"
        warehouse_location:
          always_show: true
          description: "The root location of the data warehouse used by the Iceberg\
            \ catalog. Typically includes a bucket name and path within that bucket.\
            \ For AWS Glue and Nessie, must include the storage protocol (such as\
            \ \"s3://\" for Amazon S3)."
          examples:
          - "s3://your-bucket/path/to/store/files/in"
          order: 5
          title: "Warehouse Location"
          type: "string"
      required:
      - "s3_bucket_name"
      - "s3_bucket_region"
      - "warehouse_location"
      - "main_branch_name"
      - "catalog_type"
      title: "Iceberg V2 Destination Specification"
      type: "object"
    destination-gcs:
      properties:
        credential:
          description: "An HMAC key is a type of credential and can be associated\
            \ with a service account or a user account in Cloud Storage. Read more\
            \ <a href=\"https://cloud.google.com/storage/docs/authentication/hmackeys\"\
            >here</a>."
          oneOf:
          - properties:
              credential_type:
                default: "HMAC_KEY"
                enum:
                - "HMAC_KEY"
                type: "string"
              hmac_key_access_id:
                airbyte_secret: true
                description: "When linked to a service account, this ID is 61 characters\
                  \ long; when linked to a user account, it is 24 characters long.\
                  \ Read more <a href=\"https://cloud.google.com/storage/docs/authentication/hmackeys#overview\"\
                  >here</a>."
                examples:
                - "1234567890abcdefghij1234"
                order: 0
                title: "Access ID"
                type: "string"
                x-speakeasy-param-sensitive: true
              hmac_key_secret:
                airbyte_secret: true
                description: "The corresponding secret for the access ID. It is a\
                  \ 40-character base-64 encoded string.  Read more <a href=\"https://cloud.google.com/storage/docs/authentication/hmackeys#secrets\"\
                  >here</a>."
                examples:
                - "1234567890abcdefghij1234567890ABCDEFGHIJ"
                order: 1
                title: "Secret"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "credential_type"
            - "hmac_key_access_id"
            - "hmac_key_secret"
            title: "HMAC Key"
          order: 0
          title: "Authentication"
          type: "object"
        format:
          description: "Output data format. One of the following formats must be selected\
            \ - <a href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-avro#advantages_of_avro\"\
            >AVRO</a> format, <a href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-parquet#parquet_schemas\"\
            >PARQUET</a> format, <a href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-csv#loading_csv_data_into_a_table\"\
            >CSV</a> format, or <a href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-json#loading_json_data_into_a_new_table\"\
            >JSONL</a> format."
          oneOf:
          - properties:
              compression_codec:
                description: "The compression algorithm used to compress data. Default\
                  \ to no compression."
                oneOf:
                - properties:
                    codec:
                      default: "no compression"
                      enum:
                      - "no compression"
                      type: "string"
                  required:
                  - "codec"
                  title: "No Compression"
                - properties:
                    codec:
                      default: "Deflate"
                      enum:
                      - "Deflate"
                      type: "string"
                    compression_level:
                      default: 0
                      description: "0: no compression & fastest, 9: best compression\
                        \ & slowest."
                      maximum: 9
                      minimum: 0
                      title: "Deflate level"
                      type: "integer"
                  required:
                  - "codec"
                  title: "Deflate"
                - properties:
                    codec:
                      default: "bzip2"
                      enum:
                      - "bzip2"
                      type: "string"
                  required:
                  - "codec"
                  title: "bzip2"
                - properties:
                    codec:
                      default: "xz"
                      enum:
                      - "xz"
                      type: "string"
                    compression_level:
                      default: 6
                      description: "The presets 0-3 are fast presets with medium compression.\
                        \ The presets 4-6 are fairly slow presets with high compression.\
                        \ The default preset is 6. The presets 7-9 are like the preset\
                        \ 6 but use bigger dictionaries and have higher compressor\
                        \ and decompressor memory requirements. Unless the uncompressed\
                        \ size of the file exceeds 8 MiB, 16 MiB, or 32 MiB, it is\
                        \ waste of memory to use the presets 7, 8, or 9, respectively.\
                        \ Read more <a href=\"https://commons.apache.org/proper/commons-compress/apidocs/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.html#XZCompressorOutputStream-java.io.OutputStream-int-\"\
                        >here</a> for details."
                      maximum: 9
                      minimum: 0
                      title: "Compression Level"
                      type: "integer"
                  required:
                  - "codec"
                  title: "xz"
                - properties:
                    codec:
                      default: "zstandard"
                      enum:
                      - "zstandard"
                      type: "string"
                    compression_level:
                      default: 3
                      description: "Negative levels are 'fast' modes akin to lz4 or\
                        \ snappy, levels above 9 are generally for archival purposes,\
                        \ and levels above 18 use a lot of memory."
                      maximum: 22
                      minimum: -5
                      title: "Compression Level"
                      type: "integer"
                    include_checksum:
                      default: false
                      description: "If true, include a checksum with each data block."
                      title: "Include Checksum"
                      type: "boolean"
                  required:
                  - "codec"
                  title: "zstandard"
                - properties:
                    codec:
                      default: "snappy"
                      enum:
                      - "snappy"
                      type: "string"
                  required:
                  - "codec"
                  title: "snappy"
                title: "Compression Codec"
                type: "object"
              format_type:
                default: "Avro"
                enum:
                - "Avro"
                type: "string"
            required:
            - "format_type"
            - "compression_codec"
            title: "Avro: Apache Avro"
          - properties:
              compression:
                description: "Whether the output files should be compressed. If compression\
                  \ is selected, the output filename will have an extra extension\
                  \ (GZIP: \".csv.gz\")."
                oneOf:
                - properties:
                    compression_type:
                      default: "No Compression"
                      enum:
                      - "No Compression"
                      type: "string"
                  requires:
                  - "compression_type"
                  title: "No Compression"
                - properties:
                    compression_type:
                      default: "GZIP"
                      enum:
                      - "GZIP"
                      type: "string"
                  requires:
                  - "compression_type"
                  title: "GZIP"
                title: "Compression"
                type: "object"
              flattening:
                default: "No flattening"
                description: "Whether the input JSON data should be normalized (flattened)\
                  \ in the output CSV. Please refer to docs for details."
                enum:
                - "No flattening"
                - "Root level flattening"
                title: "Normalization"
                type: "string"
              format_type:
                default: "CSV"
                enum:
                - "CSV"
                type: "string"
            required:
            - "format_type"
            title: "CSV: Comma-Separated Values"
          - properties:
              compression:
                description: "Whether the output files should be compressed. If compression\
                  \ is selected, the output filename will have an extra extension\
                  \ (GZIP: \".jsonl.gz\")."
                oneOf:
                - properties:
                    compression_type:
                      default: "No Compression"
                      enum:
                      - "No Compression"
                      type: "string"
                  requires: "compression_type"
                  title: "No Compression"
                - properties:
                    compression_type:
                      default: "GZIP"
                      enum:
                      - "GZIP"
                      type: "string"
                  requires: "compression_type"
                  title: "GZIP"
                title: "Compression"
                type: "object"
              format_type:
                default: "JSONL"
                enum:
                - "JSONL"
                type: "string"
            required:
            - "format_type"
            title: "JSON Lines: newline-delimited JSON"
          - properties:
              block_size_mb:
                default: 128
                description: "This is the size of a row group being buffered in memory.\
                  \ It limits the memory usage when writing. Larger values will improve\
                  \ the IO when reading, but consume more memory when writing. Default:\
                  \ 128 MB."
                examples:
                - 128
                title: "Block Size (Row Group Size) (MB)"
                type: "integer"
              compression_codec:
                default: "UNCOMPRESSED"
                description: "The compression algorithm used to compress data pages."
                enum:
                - "UNCOMPRESSED"
                - "SNAPPY"
                - "GZIP"
                - "LZO"
                - "BROTLI"
                - "LZ4"
                - "ZSTD"
                title: "Compression Codec"
                type: "string"
              dictionary_encoding:
                default: true
                description: "Default: true."
                title: "Dictionary Encoding"
                type: "boolean"
              dictionary_page_size_kb:
                default: 1024
                description: "There is one dictionary page per column per row group\
                  \ when dictionary encoding is used. The dictionary page size works\
                  \ like the page size but for dictionary. Default: 1024 KB."
                examples:
                - 1024
                title: "Dictionary Page Size (KB)"
                type: "integer"
              format_type:
                default: "Parquet"
                enum:
                - "Parquet"
                type: "string"
              max_padding_size_mb:
                default: 8
                description: "Maximum size allowed as padding to align row groups.\
                  \ This is also the minimum size of a row group. Default: 8 MB."
                examples:
                - 8
                title: "Max Padding Size (MB)"
                type: "integer"
              page_size_kb:
                default: 1024
                description: "The page size is for compression. A block is composed\
                  \ of pages. A page is the smallest unit that must be read fully\
                  \ to access a single record. If this value is too small, the compression\
                  \ will deteriorate. Default: 1024 KB."
                examples:
                - 1024
                title: "Page Size (KB)"
                type: "integer"
            required:
            - "format_type"
            title: "Parquet: Columnar Storage"
          order: 4
          title: "Output Format"
          type: "object"
        gcs_bucket_name:
          description: "You can find the bucket name in the App Engine Admin console\
            \ Application Settings page, under the label Google Cloud Storage Bucket.\
            \ Read more <a href=\"https://cloud.google.com/storage/docs/naming-buckets\"\
            >here</a>."
          examples:
          - "airbyte_sync"
          order: 1
          title: "GCS Bucket Name"
          type: "string"
        gcs_bucket_path:
          description: "GCS Bucket Path string Subdirectory under the above bucket\
            \ to sync the data into."
          examples:
          - "data_sync/test"
          order: 2
          title: "GCS Bucket Path"
          type: "string"
        gcs_bucket_region:
          default: "us"
          description: "Select a Region of the GCS Bucket. Read more <a href=\"https://cloud.google.com/storage/docs/locations\"\
            >here</a>."
          enum:
          - "northamerica-northeast1"
          - "northamerica-northeast2"
          - "us-central1"
          - "us-east1"
          - "us-east4"
          - "us-west1"
          - "us-west2"
          - "us-west3"
          - "us-west4"
          - "southamerica-east1"
          - "southamerica-west1"
          - "europe-central2"
          - "europe-north1"
          - "europe-west1"
          - "europe-west2"
          - "europe-west3"
          - "europe-west4"
          - "europe-west6"
          - "asia-east1"
          - "asia-east2"
          - "asia-northeast1"
          - "asia-northeast2"
          - "asia-northeast3"
          - "asia-south1"
          - "asia-south2"
          - "asia-southeast1"
          - "asia-southeast2"
          - "australia-southeast1"
          - "australia-southeast2"
          - "asia"
          - "eu"
          - "us"
          - "asia1"
          - "eur4"
          - "nam4"
          order: 3
          title: "GCS Bucket Region"
          type: "string"
        destinationType:
          title: "gcs"
          const: "gcs"
          enum:
          - "gcs"
          order: 0
          type: "string"
      required:
      - "gcs_bucket_name"
      - "gcs_bucket_path"
      - "credential"
      - "format"
      - "destinationType"
      title: "GCS Destination Spec"
      type: "object"
    destination-gcs-update:
      properties:
        credential:
          description: "An HMAC key is a type of credential and can be associated\
            \ with a service account or a user account in Cloud Storage. Read more\
            \ <a href=\"https://cloud.google.com/storage/docs/authentication/hmackeys\"\
            >here</a>."
          oneOf:
          - properties:
              credential_type:
                default: "HMAC_KEY"
                enum:
                - "HMAC_KEY"
                type: "string"
              hmac_key_access_id:
                airbyte_secret: true
                description: "When linked to a service account, this ID is 61 characters\
                  \ long; when linked to a user account, it is 24 characters long.\
                  \ Read more <a href=\"https://cloud.google.com/storage/docs/authentication/hmackeys#overview\"\
                  >here</a>."
                examples:
                - "1234567890abcdefghij1234"
                order: 0
                title: "Access ID"
                type: "string"
              hmac_key_secret:
                airbyte_secret: true
                description: "The corresponding secret for the access ID. It is a\
                  \ 40-character base-64 encoded string.  Read more <a href=\"https://cloud.google.com/storage/docs/authentication/hmackeys#secrets\"\
                  >here</a>."
                examples:
                - "1234567890abcdefghij1234567890ABCDEFGHIJ"
                order: 1
                title: "Secret"
                type: "string"
            required:
            - "credential_type"
            - "hmac_key_access_id"
            - "hmac_key_secret"
            title: "HMAC Key"
          order: 0
          title: "Authentication"
          type: "object"
        format:
          description: "Output data format. One of the following formats must be selected\
            \ - <a href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-avro#advantages_of_avro\"\
            >AVRO</a> format, <a href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-parquet#parquet_schemas\"\
            >PARQUET</a> format, <a href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-csv#loading_csv_data_into_a_table\"\
            >CSV</a> format, or <a href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-json#loading_json_data_into_a_new_table\"\
            >JSONL</a> format."
          oneOf:
          - properties:
              compression_codec:
                description: "The compression algorithm used to compress data. Default\
                  \ to no compression."
                oneOf:
                - properties:
                    codec:
                      default: "no compression"
                      enum:
                      - "no compression"
                      type: "string"
                  required:
                  - "codec"
                  title: "No Compression"
                - properties:
                    codec:
                      default: "Deflate"
                      enum:
                      - "Deflate"
                      type: "string"
                    compression_level:
                      default: 0
                      description: "0: no compression & fastest, 9: best compression\
                        \ & slowest."
                      maximum: 9
                      minimum: 0
                      title: "Deflate level"
                      type: "integer"
                  required:
                  - "codec"
                  title: "Deflate"
                - properties:
                    codec:
                      default: "bzip2"
                      enum:
                      - "bzip2"
                      type: "string"
                  required:
                  - "codec"
                  title: "bzip2"
                - properties:
                    codec:
                      default: "xz"
                      enum:
                      - "xz"
                      type: "string"
                    compression_level:
                      default: 6
                      description: "The presets 0-3 are fast presets with medium compression.\
                        \ The presets 4-6 are fairly slow presets with high compression.\
                        \ The default preset is 6. The presets 7-9 are like the preset\
                        \ 6 but use bigger dictionaries and have higher compressor\
                        \ and decompressor memory requirements. Unless the uncompressed\
                        \ size of the file exceeds 8 MiB, 16 MiB, or 32 MiB, it is\
                        \ waste of memory to use the presets 7, 8, or 9, respectively.\
                        \ Read more <a href=\"https://commons.apache.org/proper/commons-compress/apidocs/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.html#XZCompressorOutputStream-java.io.OutputStream-int-\"\
                        >here</a> for details."
                      maximum: 9
                      minimum: 0
                      title: "Compression Level"
                      type: "integer"
                  required:
                  - "codec"
                  title: "xz"
                - properties:
                    codec:
                      default: "zstandard"
                      enum:
                      - "zstandard"
                      type: "string"
                    compression_level:
                      default: 3
                      description: "Negative levels are 'fast' modes akin to lz4 or\
                        \ snappy, levels above 9 are generally for archival purposes,\
                        \ and levels above 18 use a lot of memory."
                      maximum: 22
                      minimum: -5
                      title: "Compression Level"
                      type: "integer"
                    include_checksum:
                      default: false
                      description: "If true, include a checksum with each data block."
                      title: "Include Checksum"
                      type: "boolean"
                  required:
                  - "codec"
                  title: "zstandard"
                - properties:
                    codec:
                      default: "snappy"
                      enum:
                      - "snappy"
                      type: "string"
                  required:
                  - "codec"
                  title: "snappy"
                title: "Compression Codec"
                type: "object"
              format_type:
                default: "Avro"
                enum:
                - "Avro"
                type: "string"
            required:
            - "format_type"
            - "compression_codec"
            title: "Avro: Apache Avro"
          - properties:
              compression:
                description: "Whether the output files should be compressed. If compression\
                  \ is selected, the output filename will have an extra extension\
                  \ (GZIP: \".csv.gz\")."
                oneOf:
                - properties:
                    compression_type:
                      default: "No Compression"
                      enum:
                      - "No Compression"
                      type: "string"
                  requires:
                  - "compression_type"
                  title: "No Compression"
                - properties:
                    compression_type:
                      default: "GZIP"
                      enum:
                      - "GZIP"
                      type: "string"
                  requires:
                  - "compression_type"
                  title: "GZIP"
                title: "Compression"
                type: "object"
              flattening:
                default: "No flattening"
                description: "Whether the input JSON data should be normalized (flattened)\
                  \ in the output CSV. Please refer to docs for details."
                enum:
                - "No flattening"
                - "Root level flattening"
                title: "Normalization"
                type: "string"
              format_type:
                default: "CSV"
                enum:
                - "CSV"
                type: "string"
            required:
            - "format_type"
            title: "CSV: Comma-Separated Values"
          - properties:
              compression:
                description: "Whether the output files should be compressed. If compression\
                  \ is selected, the output filename will have an extra extension\
                  \ (GZIP: \".jsonl.gz\")."
                oneOf:
                - properties:
                    compression_type:
                      default: "No Compression"
                      enum:
                      - "No Compression"
                      type: "string"
                  requires: "compression_type"
                  title: "No Compression"
                - properties:
                    compression_type:
                      default: "GZIP"
                      enum:
                      - "GZIP"
                      type: "string"
                  requires: "compression_type"
                  title: "GZIP"
                title: "Compression"
                type: "object"
              format_type:
                default: "JSONL"
                enum:
                - "JSONL"
                type: "string"
            required:
            - "format_type"
            title: "JSON Lines: newline-delimited JSON"
          - properties:
              block_size_mb:
                default: 128
                description: "This is the size of a row group being buffered in memory.\
                  \ It limits the memory usage when writing. Larger values will improve\
                  \ the IO when reading, but consume more memory when writing. Default:\
                  \ 128 MB."
                examples:
                - 128
                title: "Block Size (Row Group Size) (MB)"
                type: "integer"
              compression_codec:
                default: "UNCOMPRESSED"
                description: "The compression algorithm used to compress data pages."
                enum:
                - "UNCOMPRESSED"
                - "SNAPPY"
                - "GZIP"
                - "LZO"
                - "BROTLI"
                - "LZ4"
                - "ZSTD"
                title: "Compression Codec"
                type: "string"
              dictionary_encoding:
                default: true
                description: "Default: true."
                title: "Dictionary Encoding"
                type: "boolean"
              dictionary_page_size_kb:
                default: 1024
                description: "There is one dictionary page per column per row group\
                  \ when dictionary encoding is used. The dictionary page size works\
                  \ like the page size but for dictionary. Default: 1024 KB."
                examples:
                - 1024
                title: "Dictionary Page Size (KB)"
                type: "integer"
              format_type:
                default: "Parquet"
                enum:
                - "Parquet"
                type: "string"
              max_padding_size_mb:
                default: 8
                description: "Maximum size allowed as padding to align row groups.\
                  \ This is also the minimum size of a row group. Default: 8 MB."
                examples:
                - 8
                title: "Max Padding Size (MB)"
                type: "integer"
              page_size_kb:
                default: 1024
                description: "The page size is for compression. A block is composed\
                  \ of pages. A page is the smallest unit that must be read fully\
                  \ to access a single record. If this value is too small, the compression\
                  \ will deteriorate. Default: 1024 KB."
                examples:
                - 1024
                title: "Page Size (KB)"
                type: "integer"
            required:
            - "format_type"
            title: "Parquet: Columnar Storage"
          order: 4
          title: "Output Format"
          type: "object"
        gcs_bucket_name:
          description: "You can find the bucket name in the App Engine Admin console\
            \ Application Settings page, under the label Google Cloud Storage Bucket.\
            \ Read more <a href=\"https://cloud.google.com/storage/docs/naming-buckets\"\
            >here</a>."
          examples:
          - "airbyte_sync"
          order: 1
          title: "GCS Bucket Name"
          type: "string"
        gcs_bucket_path:
          description: "GCS Bucket Path string Subdirectory under the above bucket\
            \ to sync the data into."
          examples:
          - "data_sync/test"
          order: 2
          title: "GCS Bucket Path"
          type: "string"
        gcs_bucket_region:
          default: "us"
          description: "Select a Region of the GCS Bucket. Read more <a href=\"https://cloud.google.com/storage/docs/locations\"\
            >here</a>."
          enum:
          - "northamerica-northeast1"
          - "northamerica-northeast2"
          - "us-central1"
          - "us-east1"
          - "us-east4"
          - "us-west1"
          - "us-west2"
          - "us-west3"
          - "us-west4"
          - "southamerica-east1"
          - "southamerica-west1"
          - "europe-central2"
          - "europe-north1"
          - "europe-west1"
          - "europe-west2"
          - "europe-west3"
          - "europe-west4"
          - "europe-west6"
          - "asia-east1"
          - "asia-east2"
          - "asia-northeast1"
          - "asia-northeast2"
          - "asia-northeast3"
          - "asia-south1"
          - "asia-south2"
          - "asia-southeast1"
          - "asia-southeast2"
          - "australia-southeast1"
          - "australia-southeast2"
          - "asia"
          - "eu"
          - "us"
          - "asia1"
          - "eur4"
          - "nam4"
          order: 3
          title: "GCS Bucket Region"
          type: "string"
      required:
      - "gcs_bucket_name"
      - "gcs_bucket_path"
      - "credential"
      - "format"
      title: "GCS Destination Spec"
      type: "object"
    destination-pubsub:
      properties:
        batching_delay_threshold:
          default: 1
          description: "Number of ms before the buffer is flushed"
          minimum: 1
          title: "Message Batching: Delay Threshold"
          type: "integer"
        batching_element_count_threshold:
          default: 1
          description: "Number of messages before the buffer is flushed"
          minimum: 1
          title: "Message Batching: Element Count Threshold"
          type: "integer"
        batching_enabled:
          default: false
          description: "If TRUE messages will be buffered instead of sending them\
            \ one by one"
          title: "Message Batching Enabled"
          type: "boolean"
        batching_request_bytes_threshold:
          default: 1
          description: "Number of bytes before the buffer is flushed"
          minimum: 1
          title: "Message Batching: Request Bytes Threshold"
          type: "integer"
        credentials_json:
          airbyte_secret: true
          description: "The contents of the JSON service account key. Check out the\
            \ <a href=\"https://docs.airbyte.com/integrations/destinations/pubsub\"\
            >docs</a> if you need help generating this key."
          title: "Credentials JSON"
          type: "string"
          x-speakeasy-param-sensitive: true
        ordering_enabled:
          default: false
          description: "If TRUE PubSub publisher will have <a href=\"https://cloud.google.com/pubsub/docs/ordering\"\
            >message ordering</a> enabled. Every message will have an ordering key\
            \ of stream"
          title: "Message Ordering Enabled"
          type: "boolean"
        project_id:
          description: "The GCP project ID for the project containing the target PubSub."
          title: "Project ID"
          type: "string"
        topic_id:
          description: "The PubSub topic ID in the given GCP project ID."
          title: "PubSub Topic ID"
          type: "string"
        destinationType:
          title: "pubsub"
          const: "pubsub"
          enum:
          - "pubsub"
          order: 0
          type: "string"
      required:
      - "project_id"
      - "topic_id"
      - "credentials_json"
      - "ordering_enabled"
      - "batching_enabled"
      - "destinationType"
      title: "Google PubSub Destination Spec"
      type: "object"
    destination-pubsub-update:
      properties:
        batching_delay_threshold:
          default: 1
          description: "Number of ms before the buffer is flushed"
          minimum: 1
          title: "Message Batching: Delay Threshold"
          type: "integer"
        batching_element_count_threshold:
          default: 1
          description: "Number of messages before the buffer is flushed"
          minimum: 1
          title: "Message Batching: Element Count Threshold"
          type: "integer"
        batching_enabled:
          default: false
          description: "If TRUE messages will be buffered instead of sending them\
            \ one by one"
          title: "Message Batching Enabled"
          type: "boolean"
        batching_request_bytes_threshold:
          default: 1
          description: "Number of bytes before the buffer is flushed"
          minimum: 1
          title: "Message Batching: Request Bytes Threshold"
          type: "integer"
        credentials_json:
          airbyte_secret: true
          description: "The contents of the JSON service account key. Check out the\
            \ <a href=\"https://docs.airbyte.com/integrations/destinations/pubsub\"\
            >docs</a> if you need help generating this key."
          title: "Credentials JSON"
          type: "string"
        ordering_enabled:
          default: false
          description: "If TRUE PubSub publisher will have <a href=\"https://cloud.google.com/pubsub/docs/ordering\"\
            >message ordering</a> enabled. Every message will have an ordering key\
            \ of stream"
          title: "Message Ordering Enabled"
          type: "boolean"
        project_id:
          description: "The GCP project ID for the project containing the target PubSub."
          title: "Project ID"
          type: "string"
        topic_id:
          description: "The PubSub topic ID in the given GCP project ID."
          title: "PubSub Topic ID"
          type: "string"
      required:
      - "project_id"
      - "topic_id"
      - "credentials_json"
      - "ordering_enabled"
      - "batching_enabled"
      title: "Google PubSub Destination Spec"
      type: "object"
    destination-deepset:
      properties:
        api_key:
          airbyte_secret: true
          description: "Your deepset cloud API key"
          order: 0
          title: "API Key"
          type: "string"
          x-speakeasy-param-sensitive: true
        base_url:
          default: "https://api.cloud.deepset.ai"
          description: "URL of deepset Cloud API (e.g. https://api.cloud.deepset.ai,\
            \ https://api.us.deepset.ai, etc). Defaults to https://api.cloud.deepset.ai."
          order: 1
          title: "Base URL"
          type: "string"
        retries:
          default: 5
          description: "Number of times to retry an action before giving up."
          order: 3
          title: "Retry Count"
          type: "number"
        workspace:
          description: "Name of workspace to which to sync the data."
          order: 2
          title: "Workspace Name"
          type: "string"
        destinationType:
          title: "deepset"
          const: "deepset"
          enum:
          - "deepset"
          order: 0
          type: "string"
      required:
      - "api_key"
      - "workspace"
      - "destinationType"
      title: "Deepset Destination Spec"
      type: "object"
    destination-deepset-update:
      properties:
        api_key:
          airbyte_secret: true
          description: "Your deepset cloud API key"
          order: 0
          title: "API Key"
          type: "string"
        base_url:
          default: "https://api.cloud.deepset.ai"
          description: "URL of deepset Cloud API (e.g. https://api.cloud.deepset.ai,\
            \ https://api.us.deepset.ai, etc). Defaults to https://api.cloud.deepset.ai."
          order: 1
          title: "Base URL"
          type: "string"
        retries:
          default: 5
          description: "Number of times to retry an action before giving up."
          order: 3
          title: "Retry Count"
          type: "number"
        workspace:
          description: "Name of workspace to which to sync the data."
          order: 2
          title: "Workspace Name"
          type: "string"
      required:
      - "api_key"
      - "workspace"
      title: "Deepset Destination Spec"
      type: "object"
    destination-weaviate:
      description: "The configuration model for the Vector DB based destinations.\
        \ This model is used to generate the UI for the destination configuration,\n\
        as well as to provide type safety for the configuration passed to the destination.\n\
        \nThe configuration model is composed of four parts:\n* Processing configuration\n\
        * Embedding configuration\n* Indexing configuration\n* Advanced configuration\n\
        \nProcessing, embedding and advanced configuration are provided by this base\
        \ class, while the indexing configuration is provided by the destination connector\
        \ in the sub class."
      groups:
      - id: "processing"
        title: "Processing"
      - id: "embedding"
        title: "Embedding"
      - id: "indexing"
        title: "Indexing"
      - id: "advanced"
        title: "Advanced"
      properties:
        embedding:
          description: "Embedding configuration"
          group: "embedding"
          oneOf:
          - description: "Do not calculate and pass embeddings to Weaviate. Suitable\
              \ for clusters with configured vectorizers to calculate embeddings within\
              \ Weaviate or for classes that should only support regular text search."
            properties:
              mode:
                const: "no_embedding"
                default: "no_embedding"
                enum:
                - "no_embedding"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "No external embedding"
            type: "object"
          - description: "Use the Azure-hosted OpenAI API to embed text. This option\
              \ is using the text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              api_base:
                description: "The base URL for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "https://your-resource-name.openai.azure.com"
                title: "Resource base URL"
                type: "string"
              deployment:
                description: "The deployment for your Azure OpenAI resource.  You\
                  \ can find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "your-resource-name"
                title: "Deployment"
                type: "string"
              mode:
                const: "azure_openai"
                default: "azure_openai"
                enum:
                - "azure_openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                description: "The API key for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                title: "Azure OpenAI API key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "openai_key"
            - "api_base"
            - "deployment"
            - "mode"
            title: "Azure OpenAI"
            type: "object"
          - description: "Use the OpenAI API to embed text. This option is using the\
              \ text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              mode:
                const: "openai"
                default: "openai"
                enum:
                - "openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                title: "OpenAI API key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "openai_key"
            - "mode"
            title: "OpenAI"
            type: "object"
          - description: "Use the Cohere API to embed text."
            properties:
              cohere_key:
                airbyte_secret: true
                title: "Cohere API key"
                type: "string"
                x-speakeasy-param-sensitive: true
              mode:
                const: "cohere"
                default: "cohere"
                enum:
                - "cohere"
                title: "Mode"
                type: "string"
            required:
            - "cohere_key"
            - "mode"
            title: "Cohere"
            type: "object"
          - description: "Use a field in the record as the embedding. This is useful\
              \ if you already have an embedding for your data and want to store it\
              \ in the vector store."
            properties:
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              field_name:
                description: "Name of the field in the record that contains the embedding"
                examples:
                - "embedding"
                - "vector"
                title: "Field name"
                type: "string"
              mode:
                const: "from_field"
                default: "from_field"
                enum:
                - "from_field"
                title: "Mode"
                type: "string"
            required:
            - "field_name"
            - "dimensions"
            - "mode"
            title: "From Field"
            type: "object"
          - description: "Use a fake embedding made out of random vectors with 1536\
              \ embedding dimensions. This is useful for testing the data pipeline\
              \ without incurring any costs."
            properties:
              mode:
                const: "fake"
                default: "fake"
                enum:
                - "fake"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "Fake"
            type: "object"
          - description: "Use a service that's compatible with the OpenAI API to embed\
              \ text."
            properties:
              api_key:
                airbyte_secret: true
                default: ""
                title: "API key"
                type: "string"
                x-speakeasy-param-sensitive: true
              base_url:
                description: "The base URL for your OpenAI-compatible service"
                examples:
                - "https://your-service-name.com"
                title: "Base URL"
                type: "string"
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              mode:
                const: "openai_compatible"
                default: "openai_compatible"
                enum:
                - "openai_compatible"
                title: "Mode"
                type: "string"
              model_name:
                default: "text-embedding-ada-002"
                description: "The name of the model to use for embedding"
                examples:
                - "text-embedding-ada-002"
                title: "Model name"
                type: "string"
            required:
            - "base_url"
            - "dimensions"
            - "mode"
            title: "OpenAI-compatible"
            type: "object"
          title: "Embedding"
          type: "object"
        indexing:
          description: "Indexing configuration"
          group: "indexing"
          properties:
            additional_headers:
              default: []
              description: "Additional HTTP headers to send with every request."
              examples:
              - header_key: "X-OpenAI-Api-Key"
                value: "my-openai-api-key"
              items:
                properties:
                  header_key:
                    title: "Header Key"
                    type: "string"
                  value:
                    airbyte_secret: true
                    title: "Header Value"
                    type: "string"
                    x-speakeasy-param-sensitive: true
                required:
                - "header_key"
                - "value"
                title: "Header"
                type: "object"
              title: "Additional headers"
              type: "array"
            auth:
              description: "Authentication method"
              oneOf:
              - description: "Authenticate using an API token (suitable for Weaviate\
                  \ Cloud)"
                properties:
                  mode:
                    const: "token"
                    default: "token"
                    enum:
                    - "token"
                    title: "Mode"
                    type: "string"
                  token:
                    airbyte_secret: true
                    description: "API Token for the Weaviate instance"
                    title: "API Token"
                    type: "string"
                    x-speakeasy-param-sensitive: true
                required:
                - "token"
                - "mode"
                title: "API Token"
                type: "object"
              - description: "Authenticate using username and password (suitable for\
                  \ self-managed Weaviate clusters)"
                properties:
                  mode:
                    const: "username_password"
                    default: "username_password"
                    enum:
                    - "username_password"
                    title: "Mode"
                    type: "string"
                  password:
                    airbyte_secret: true
                    description: "Password for the Weaviate cluster"
                    order: 2
                    title: "Password"
                    type: "string"
                    x-speakeasy-param-sensitive: true
                  username:
                    description: "Username for the Weaviate cluster"
                    order: 1
                    title: "Username"
                    type: "string"
                required:
                - "username"
                - "password"
                - "mode"
                title: "Username/Password"
                type: "object"
              - description: "Do not authenticate (suitable for locally running test\
                  \ clusters, do not use for clusters with public IP addresses)"
                properties:
                  mode:
                    const: "no_auth"
                    default: "no_auth"
                    enum:
                    - "no_auth"
                    title: "Mode"
                    type: "string"
                required:
                - "mode"
                title: "No Authentication"
                type: "object"
              order: 2
              title: "Authentication"
              type: "object"
            batch_size:
              default: 128
              description: "The number of records to send to Weaviate in each batch"
              title: "Batch Size"
              type: "integer"
            default_vectorizer:
              default: "none"
              description: "The vectorizer to use if new classes need to be created"
              enum:
              - "none"
              - "text2vec-cohere"
              - "text2vec-huggingface"
              - "text2vec-openai"
              - "text2vec-palm"
              - "text2vec-contextionary"
              - "text2vec-transformers"
              - "text2vec-gpt4all"
              title: "Default Vectorizer"
              type: "string"
            host:
              description: "The public endpoint of the Weaviate cluster."
              examples:
              - "https://my-cluster.weaviate.network"
              order: 1
              title: "Public Endpoint"
              type: "string"
            tenant_id:
              airbyte_secret: true
              default: ""
              description: "The tenant ID to use for multi tenancy"
              title: "Tenant ID"
              type: "string"
              x-speakeasy-param-sensitive: true
            text_field:
              default: "text"
              description: "The field in the object that contains the embedded text"
              title: "Text Field"
              type: "string"
          required:
          - "host"
          - "auth"
          title: "Indexing"
          type: "object"
        omit_raw_text:
          default: false
          description: "Do not store the text that gets embedded along with the vector\
            \ and the metadata in the destination. If set to true, only the vector\
            \ and the metadata will be stored - in this case raw text for LLM use\
            \ cases needs to be retrieved from another source."
          group: "advanced"
          title: "Do not store raw text"
          type: "boolean"
        processing:
          group: "processing"
          properties:
            chunk_overlap:
              default: 0
              description: "Size of overlap between chunks in tokens to store in vector\
                \ store to better capture relevant context"
              title: "Chunk overlap"
              type: "integer"
            chunk_size:
              description: "Size of chunks in tokens to store in vector store (make\
                \ sure it is not too big for the context if your LLM)"
              maximum: 8191
              minimum: 1
              title: "Chunk size"
              type: "integer"
            field_name_mappings:
              default: []
              description: "List of fields to rename. Not applicable for nested fields,\
                \ but can be used to rename fields already flattened via dot notation."
              items:
                properties:
                  from_field:
                    description: "The field name in the source"
                    title: "From field name"
                    type: "string"
                  to_field:
                    description: "The field name to use in the destination"
                    title: "To field name"
                    type: "string"
                required:
                - "from_field"
                - "to_field"
                title: "FieldNameMappingConfigModel"
                type: "object"
              title: "Field name mappings"
              type: "array"
            metadata_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be stored as\
                \ metadata. The field list is applied to all streams in the same way\
                \ and non-existing fields are ignored. If none are defined, all fields\
                \ are considered metadata fields. When specifying text fields, you\
                \ can access nested fields in the record by using dot notation, e.g.\
                \ `user.name` will access the `name` field in the `user` object. It's\
                \ also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array. When specifying nested paths, all matching\
                \ values are flattened into an array set to a field named by the path."
              examples:
              - "age"
              - "user"
              - "user.name"
              items:
                type: "string"
              title: "Fields to store as metadata"
              type: "array"
            text_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be used to calculate\
                \ the embedding. The field list is applied to all streams in the same\
                \ way and non-existing fields are ignored. If none are defined, all\
                \ fields are considered text fields. When specifying text fields,\
                \ you can access nested fields in the record by using dot notation,\
                \ e.g. `user.name` will access the `name` field in the `user` object.\
                \ It's also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array."
              examples:
              - "text"
              - "user.name"
              - "users.*.name"
              items:
                type: "string"
              title: "Text fields to embed"
              type: "array"
            text_splitter:
              description: "Split text fields into chunks based on the specified method."
              oneOf:
              - description: "Split the text by the list of separators until the chunk\
                  \ size is reached, using the earlier mentioned separators where\
                  \ possible. This is useful for splitting text fields by paragraphs,\
                  \ sentences, words, etc."
                properties:
                  keep_separator:
                    default: false
                    description: "Whether to keep the separator in the resulting chunks"
                    title: "Keep separator"
                    type: "boolean"
                  mode:
                    const: "separator"
                    default: "separator"
                    enum:
                    - "separator"
                    title: "Mode"
                    type: "string"
                  separators:
                    default:
                    - "\"\\n\\n\""
                    - "\"\\n\""
                    - "\" \""
                    - "\"\""
                    description: "List of separator strings to split text fields by.\
                      \ The separator itself needs to be wrapped in double quotes,\
                      \ e.g. to split by the dot character, use \".\". To split by\
                      \ a newline, use \"\\n\"."
                    items:
                      type: "string"
                    title: "Separators"
                    type: "array"
                required:
                - "mode"
                title: "By Separator"
                type: "object"
              - description: "Split the text by Markdown headers down to the specified\
                  \ header level. If the chunk size fits multiple sections, they will\
                  \ be combined into a single chunk."
                properties:
                  mode:
                    const: "markdown"
                    default: "markdown"
                    enum:
                    - "markdown"
                    title: "Mode"
                    type: "string"
                  split_level:
                    default: 1
                    description: "Level of markdown headers to split text fields by.\
                      \ Headings down to the specified level will be used as split\
                      \ points"
                    maximum: 6
                    minimum: 1
                    title: "Split level"
                    type: "integer"
                required:
                - "mode"
                title: "By Markdown header"
                type: "object"
              - description: "Split the text by suitable delimiters based on the programming\
                  \ language. This is useful for splitting code into chunks."
                properties:
                  language:
                    description: "Split code in suitable places based on the programming\
                      \ language"
                    enum:
                    - "cpp"
                    - "go"
                    - "java"
                    - "js"
                    - "php"
                    - "proto"
                    - "python"
                    - "rst"
                    - "ruby"
                    - "rust"
                    - "scala"
                    - "swift"
                    - "markdown"
                    - "latex"
                    - "html"
                    - "sol"
                    title: "Language"
                    type: "string"
                  mode:
                    const: "code"
                    default: "code"
                    enum:
                    - "code"
                    title: "Mode"
                    type: "string"
                required:
                - "language"
                - "mode"
                title: "By Programming Language"
                type: "object"
              title: "Text splitter"
              type: "object"
          required:
          - "chunk_size"
          title: "ProcessingConfigModel"
          type: "object"
        destinationType:
          title: "weaviate"
          const: "weaviate"
          enum:
          - "weaviate"
          order: 0
          type: "string"
      required:
      - "embedding"
      - "processing"
      - "indexing"
      - "destinationType"
      title: "Destination Config"
      type: "object"
    destination-weaviate-update:
      description: "The configuration model for the Vector DB based destinations.\
        \ This model is used to generate the UI for the destination configuration,\n\
        as well as to provide type safety for the configuration passed to the destination.\n\
        \nThe configuration model is composed of four parts:\n* Processing configuration\n\
        * Embedding configuration\n* Indexing configuration\n* Advanced configuration\n\
        \nProcessing, embedding and advanced configuration are provided by this base\
        \ class, while the indexing configuration is provided by the destination connector\
        \ in the sub class."
      groups:
      - id: "processing"
        title: "Processing"
      - id: "embedding"
        title: "Embedding"
      - id: "indexing"
        title: "Indexing"
      - id: "advanced"
        title: "Advanced"
      properties:
        embedding:
          description: "Embedding configuration"
          group: "embedding"
          oneOf:
          - description: "Do not calculate and pass embeddings to Weaviate. Suitable\
              \ for clusters with configured vectorizers to calculate embeddings within\
              \ Weaviate or for classes that should only support regular text search."
            properties:
              mode:
                const: "no_embedding"
                default: "no_embedding"
                enum:
                - "no_embedding"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "No external embedding"
            type: "object"
          - description: "Use the Azure-hosted OpenAI API to embed text. This option\
              \ is using the text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              api_base:
                description: "The base URL for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "https://your-resource-name.openai.azure.com"
                title: "Resource base URL"
                type: "string"
              deployment:
                description: "The deployment for your Azure OpenAI resource.  You\
                  \ can find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "your-resource-name"
                title: "Deployment"
                type: "string"
              mode:
                const: "azure_openai"
                default: "azure_openai"
                enum:
                - "azure_openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                description: "The API key for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                title: "Azure OpenAI API key"
                type: "string"
            required:
            - "openai_key"
            - "api_base"
            - "deployment"
            - "mode"
            title: "Azure OpenAI"
            type: "object"
          - description: "Use the OpenAI API to embed text. This option is using the\
              \ text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              mode:
                const: "openai"
                default: "openai"
                enum:
                - "openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                title: "OpenAI API key"
                type: "string"
            required:
            - "openai_key"
            - "mode"
            title: "OpenAI"
            type: "object"
          - description: "Use the Cohere API to embed text."
            properties:
              cohere_key:
                airbyte_secret: true
                title: "Cohere API key"
                type: "string"
              mode:
                const: "cohere"
                default: "cohere"
                enum:
                - "cohere"
                title: "Mode"
                type: "string"
            required:
            - "cohere_key"
            - "mode"
            title: "Cohere"
            type: "object"
          - description: "Use a field in the record as the embedding. This is useful\
              \ if you already have an embedding for your data and want to store it\
              \ in the vector store."
            properties:
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              field_name:
                description: "Name of the field in the record that contains the embedding"
                examples:
                - "embedding"
                - "vector"
                title: "Field name"
                type: "string"
              mode:
                const: "from_field"
                default: "from_field"
                enum:
                - "from_field"
                title: "Mode"
                type: "string"
            required:
            - "field_name"
            - "dimensions"
            - "mode"
            title: "From Field"
            type: "object"
          - description: "Use a fake embedding made out of random vectors with 1536\
              \ embedding dimensions. This is useful for testing the data pipeline\
              \ without incurring any costs."
            properties:
              mode:
                const: "fake"
                default: "fake"
                enum:
                - "fake"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "Fake"
            type: "object"
          - description: "Use a service that's compatible with the OpenAI API to embed\
              \ text."
            properties:
              api_key:
                airbyte_secret: true
                default: ""
                title: "API key"
                type: "string"
              base_url:
                description: "The base URL for your OpenAI-compatible service"
                examples:
                - "https://your-service-name.com"
                title: "Base URL"
                type: "string"
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              mode:
                const: "openai_compatible"
                default: "openai_compatible"
                enum:
                - "openai_compatible"
                title: "Mode"
                type: "string"
              model_name:
                default: "text-embedding-ada-002"
                description: "The name of the model to use for embedding"
                examples:
                - "text-embedding-ada-002"
                title: "Model name"
                type: "string"
            required:
            - "base_url"
            - "dimensions"
            - "mode"
            title: "OpenAI-compatible"
            type: "object"
          title: "Embedding"
          type: "object"
        indexing:
          description: "Indexing configuration"
          group: "indexing"
          properties:
            additional_headers:
              default: []
              description: "Additional HTTP headers to send with every request."
              examples:
              - header_key: "X-OpenAI-Api-Key"
                value: "my-openai-api-key"
              items:
                properties:
                  header_key:
                    title: "Header Key"
                    type: "string"
                  value:
                    airbyte_secret: true
                    title: "Header Value"
                    type: "string"
                required:
                - "header_key"
                - "value"
                title: "Header"
                type: "object"
              title: "Additional headers"
              type: "array"
            auth:
              description: "Authentication method"
              oneOf:
              - description: "Authenticate using an API token (suitable for Weaviate\
                  \ Cloud)"
                properties:
                  mode:
                    const: "token"
                    default: "token"
                    enum:
                    - "token"
                    title: "Mode"
                    type: "string"
                  token:
                    airbyte_secret: true
                    description: "API Token for the Weaviate instance"
                    title: "API Token"
                    type: "string"
                required:
                - "token"
                - "mode"
                title: "API Token"
                type: "object"
              - description: "Authenticate using username and password (suitable for\
                  \ self-managed Weaviate clusters)"
                properties:
                  mode:
                    const: "username_password"
                    default: "username_password"
                    enum:
                    - "username_password"
                    title: "Mode"
                    type: "string"
                  password:
                    airbyte_secret: true
                    description: "Password for the Weaviate cluster"
                    order: 2
                    title: "Password"
                    type: "string"
                  username:
                    description: "Username for the Weaviate cluster"
                    order: 1
                    title: "Username"
                    type: "string"
                required:
                - "username"
                - "password"
                - "mode"
                title: "Username/Password"
                type: "object"
              - description: "Do not authenticate (suitable for locally running test\
                  \ clusters, do not use for clusters with public IP addresses)"
                properties:
                  mode:
                    const: "no_auth"
                    default: "no_auth"
                    enum:
                    - "no_auth"
                    title: "Mode"
                    type: "string"
                required:
                - "mode"
                title: "No Authentication"
                type: "object"
              order: 2
              title: "Authentication"
              type: "object"
            batch_size:
              default: 128
              description: "The number of records to send to Weaviate in each batch"
              title: "Batch Size"
              type: "integer"
            default_vectorizer:
              default: "none"
              description: "The vectorizer to use if new classes need to be created"
              enum:
              - "none"
              - "text2vec-cohere"
              - "text2vec-huggingface"
              - "text2vec-openai"
              - "text2vec-palm"
              - "text2vec-contextionary"
              - "text2vec-transformers"
              - "text2vec-gpt4all"
              title: "Default Vectorizer"
              type: "string"
            host:
              description: "The public endpoint of the Weaviate cluster."
              examples:
              - "https://my-cluster.weaviate.network"
              order: 1
              title: "Public Endpoint"
              type: "string"
            tenant_id:
              airbyte_secret: true
              default: ""
              description: "The tenant ID to use for multi tenancy"
              title: "Tenant ID"
              type: "string"
            text_field:
              default: "text"
              description: "The field in the object that contains the embedded text"
              title: "Text Field"
              type: "string"
          required:
          - "host"
          - "auth"
          title: "Indexing"
          type: "object"
        omit_raw_text:
          default: false
          description: "Do not store the text that gets embedded along with the vector\
            \ and the metadata in the destination. If set to true, only the vector\
            \ and the metadata will be stored - in this case raw text for LLM use\
            \ cases needs to be retrieved from another source."
          group: "advanced"
          title: "Do not store raw text"
          type: "boolean"
        processing:
          group: "processing"
          properties:
            chunk_overlap:
              default: 0
              description: "Size of overlap between chunks in tokens to store in vector\
                \ store to better capture relevant context"
              title: "Chunk overlap"
              type: "integer"
            chunk_size:
              description: "Size of chunks in tokens to store in vector store (make\
                \ sure it is not too big for the context if your LLM)"
              maximum: 8191
              minimum: 1
              title: "Chunk size"
              type: "integer"
            field_name_mappings:
              default: []
              description: "List of fields to rename. Not applicable for nested fields,\
                \ but can be used to rename fields already flattened via dot notation."
              items:
                properties:
                  from_field:
                    description: "The field name in the source"
                    title: "From field name"
                    type: "string"
                  to_field:
                    description: "The field name to use in the destination"
                    title: "To field name"
                    type: "string"
                required:
                - "from_field"
                - "to_field"
                title: "FieldNameMappingConfigModel"
                type: "object"
              title: "Field name mappings"
              type: "array"
            metadata_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be stored as\
                \ metadata. The field list is applied to all streams in the same way\
                \ and non-existing fields are ignored. If none are defined, all fields\
                \ are considered metadata fields. When specifying text fields, you\
                \ can access nested fields in the record by using dot notation, e.g.\
                \ `user.name` will access the `name` field in the `user` object. It's\
                \ also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array. When specifying nested paths, all matching\
                \ values are flattened into an array set to a field named by the path."
              examples:
              - "age"
              - "user"
              - "user.name"
              items:
                type: "string"
              title: "Fields to store as metadata"
              type: "array"
            text_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be used to calculate\
                \ the embedding. The field list is applied to all streams in the same\
                \ way and non-existing fields are ignored. If none are defined, all\
                \ fields are considered text fields. When specifying text fields,\
                \ you can access nested fields in the record by using dot notation,\
                \ e.g. `user.name` will access the `name` field in the `user` object.\
                \ It's also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array."
              examples:
              - "text"
              - "user.name"
              - "users.*.name"
              items:
                type: "string"
              title: "Text fields to embed"
              type: "array"
            text_splitter:
              description: "Split text fields into chunks based on the specified method."
              oneOf:
              - description: "Split the text by the list of separators until the chunk\
                  \ size is reached, using the earlier mentioned separators where\
                  \ possible. This is useful for splitting text fields by paragraphs,\
                  \ sentences, words, etc."
                properties:
                  keep_separator:
                    default: false
                    description: "Whether to keep the separator in the resulting chunks"
                    title: "Keep separator"
                    type: "boolean"
                  mode:
                    const: "separator"
                    default: "separator"
                    enum:
                    - "separator"
                    title: "Mode"
                    type: "string"
                  separators:
                    default:
                    - "\"\\n\\n\""
                    - "\"\\n\""
                    - "\" \""
                    - "\"\""
                    description: "List of separator strings to split text fields by.\
                      \ The separator itself needs to be wrapped in double quotes,\
                      \ e.g. to split by the dot character, use \".\". To split by\
                      \ a newline, use \"\\n\"."
                    items:
                      type: "string"
                    title: "Separators"
                    type: "array"
                required:
                - "mode"
                title: "By Separator"
                type: "object"
              - description: "Split the text by Markdown headers down to the specified\
                  \ header level. If the chunk size fits multiple sections, they will\
                  \ be combined into a single chunk."
                properties:
                  mode:
                    const: "markdown"
                    default: "markdown"
                    enum:
                    - "markdown"
                    title: "Mode"
                    type: "string"
                  split_level:
                    default: 1
                    description: "Level of markdown headers to split text fields by.\
                      \ Headings down to the specified level will be used as split\
                      \ points"
                    maximum: 6
                    minimum: 1
                    title: "Split level"
                    type: "integer"
                required:
                - "mode"
                title: "By Markdown header"
                type: "object"
              - description: "Split the text by suitable delimiters based on the programming\
                  \ language. This is useful for splitting code into chunks."
                properties:
                  language:
                    description: "Split code in suitable places based on the programming\
                      \ language"
                    enum:
                    - "cpp"
                    - "go"
                    - "java"
                    - "js"
                    - "php"
                    - "proto"
                    - "python"
                    - "rst"
                    - "ruby"
                    - "rust"
                    - "scala"
                    - "swift"
                    - "markdown"
                    - "latex"
                    - "html"
                    - "sol"
                    title: "Language"
                    type: "string"
                  mode:
                    const: "code"
                    default: "code"
                    enum:
                    - "code"
                    title: "Mode"
                    type: "string"
                required:
                - "language"
                - "mode"
                title: "By Programming Language"
                type: "object"
              title: "Text splitter"
              type: "object"
          required:
          - "chunk_size"
          title: "ProcessingConfigModel"
          type: "object"
      required:
      - "embedding"
      - "processing"
      - "indexing"
      title: "Destination Config"
      type: "object"
    destination-vectara:
      description: "Configuration to connect to the Vectara instance"
      groups:
      - id: "account"
        title: "Account"
      - id: "auth"
        title: "Authentication"
      properties:
        corpus_name:
          description: "The Name of Corpus to load data into"
          group: "account"
          order: 3
          title: "Corpus Name"
          type: "string"
        customer_id:
          description: "Your customer id as it is in the authenticaion url"
          group: "account"
          order: 2
          title: "Customer ID"
          type: "string"
        metadata_fields:
          always_show: true
          default: []
          description: "List of fields in the record that should be stored as metadata.\
            \ The field list is applied to all streams in the same way and non-existing\
            \ fields are ignored. If none are defined, all fields are considered metadata\
            \ fields. When specifying text fields, you can access nested fields in\
            \ the record by using dot notation, e.g. `user.name` will access the `name`\
            \ field in the `user` object. It's also possible to use wildcards to access\
            \ all fields in an object, e.g. `users.*.name` will access all `names`\
            \ fields in all entries of the `users` array. When specifying nested paths,\
            \ all matching values are flattened into an array set to a field named\
            \ by the path."
          examples:
          - "age"
          - "user"
          items:
            type: "string"
          title: "Fields to store as metadata"
          type: "array"
        oauth2:
          description: "OAuth2.0 credentials used to authenticate admin actions (creating/deleting\
            \ corpora)"
          group: "auth"
          properties:
            client_id:
              description: "OAuth2.0 client id"
              order: 0
              title: "OAuth Client ID"
              type: "string"
            client_secret:
              airbyte_secret: true
              description: "OAuth2.0 client secret"
              order: 1
              title: "OAuth Client Secret"
              type: "string"
              x-speakeasy-param-sensitive: true
          required:
          - "client_id"
          - "client_secret"
          title: "OAuth2.0 Credentials"
          type: "object"
        parallelize:
          always_show: true
          default: false
          description: "Parallelize indexing into Vectara with multiple threads"
          group: "account"
          title: "Parallelize"
          type: "boolean"
        text_fields:
          always_show: true
          default: []
          description: "List of fields in the record that should be in the section\
            \ of the document. The field list is applied to all streams in the same\
            \ way and non-existing fields are ignored. If none are defined, all fields\
            \ are considered text fields. When specifying text fields, you can access\
            \ nested fields in the record by using dot notation, e.g. `user.name`\
            \ will access the `name` field in the `user` object. It's also possible\
            \ to use wildcards to access all fields in an object, e.g. `users.*.name`\
            \ will access all `names` fields in all entries of the `users` array."
          examples:
          - "text"
          - "user.name"
          - "users.*.name"
          items:
            type: "string"
          title: "Text fields to index with Vectara"
          type: "array"
        title_field:
          always_show: true
          default: ""
          description: "A field that will be used to populate the `title` of each\
            \ document. The field list is applied to all streams in the same way and\
            \ non-existing fields are ignored. If none are defined, all fields are\
            \ considered text fields. When specifying text fields, you can access\
            \ nested fields in the record by using dot notation, e.g. `user.name`\
            \ will access the `name` field in the `user` object. It's also possible\
            \ to use wildcards to access all fields in an object, e.g. `users.*.name`\
            \ will access all `names` fields in all entries of the `users` array."
          examples:
          - "document_key"
          title: "Text field to use as document title with Vectara"
          type: "string"
        destinationType:
          title: "vectara"
          const: "vectara"
          enum:
          - "vectara"
          order: 0
          type: "string"
      required:
      - "oauth2"
      - "customer_id"
      - "corpus_name"
      - "destinationType"
      title: "Vectara Config"
      type: "object"
    destination-vectara-update:
      description: "Configuration to connect to the Vectara instance"
      groups:
      - id: "account"
        title: "Account"
      - id: "auth"
        title: "Authentication"
      properties:
        corpus_name:
          description: "The Name of Corpus to load data into"
          group: "account"
          order: 3
          title: "Corpus Name"
          type: "string"
        customer_id:
          description: "Your customer id as it is in the authenticaion url"
          group: "account"
          order: 2
          title: "Customer ID"
          type: "string"
        metadata_fields:
          always_show: true
          default: []
          description: "List of fields in the record that should be stored as metadata.\
            \ The field list is applied to all streams in the same way and non-existing\
            \ fields are ignored. If none are defined, all fields are considered metadata\
            \ fields. When specifying text fields, you can access nested fields in\
            \ the record by using dot notation, e.g. `user.name` will access the `name`\
            \ field in the `user` object. It's also possible to use wildcards to access\
            \ all fields in an object, e.g. `users.*.name` will access all `names`\
            \ fields in all entries of the `users` array. When specifying nested paths,\
            \ all matching values are flattened into an array set to a field named\
            \ by the path."
          examples:
          - "age"
          - "user"
          items:
            type: "string"
          title: "Fields to store as metadata"
          type: "array"
        oauth2:
          description: "OAuth2.0 credentials used to authenticate admin actions (creating/deleting\
            \ corpora)"
          group: "auth"
          properties:
            client_id:
              description: "OAuth2.0 client id"
              order: 0
              title: "OAuth Client ID"
              type: "string"
            client_secret:
              airbyte_secret: true
              description: "OAuth2.0 client secret"
              order: 1
              title: "OAuth Client Secret"
              type: "string"
          required:
          - "client_id"
          - "client_secret"
          title: "OAuth2.0 Credentials"
          type: "object"
        parallelize:
          always_show: true
          default: false
          description: "Parallelize indexing into Vectara with multiple threads"
          group: "account"
          title: "Parallelize"
          type: "boolean"
        text_fields:
          always_show: true
          default: []
          description: "List of fields in the record that should be in the section\
            \ of the document. The field list is applied to all streams in the same\
            \ way and non-existing fields are ignored. If none are defined, all fields\
            \ are considered text fields. When specifying text fields, you can access\
            \ nested fields in the record by using dot notation, e.g. `user.name`\
            \ will access the `name` field in the `user` object. It's also possible\
            \ to use wildcards to access all fields in an object, e.g. `users.*.name`\
            \ will access all `names` fields in all entries of the `users` array."
          examples:
          - "text"
          - "user.name"
          - "users.*.name"
          items:
            type: "string"
          title: "Text fields to index with Vectara"
          type: "array"
        title_field:
          always_show: true
          default: ""
          description: "A field that will be used to populate the `title` of each\
            \ document. The field list is applied to all streams in the same way and\
            \ non-existing fields are ignored. If none are defined, all fields are\
            \ considered text fields. When specifying text fields, you can access\
            \ nested fields in the record by using dot notation, e.g. `user.name`\
            \ will access the `name` field in the `user` object. It's also possible\
            \ to use wildcards to access all fields in an object, e.g. `users.*.name`\
            \ will access all `names` fields in all entries of the `users` array."
          examples:
          - "document_key"
          title: "Text field to use as document title with Vectara"
          type: "string"
      required:
      - "oauth2"
      - "customer_id"
      - "corpus_name"
      title: "Vectara Config"
      type: "object"
    destination-dev-null:
      properties:
        test_destination:
          description: "The type of destination to be used"
          oneOf:
          - additionalProperties: true
            properties:
              logging_config:
                description: "Configurate how the messages are logged."
                oneOf:
                - additionalProperties: true
                  description: "Log first N entries per stream."
                  properties:
                    logging_type:
                      default: "FirstN"
                      enum:
                      - "FirstN"
                      type: "string"
                    max_entry_count:
                      default: 100
                      description: "Number of entries to log. This destination is\
                        \ for testing only. So it won't make sense to log infinitely.\
                        \ The maximum is 1,000 entries."
                      examples:
                      - 100
                      maximum: 1000
                      minimum: 1
                      title: "N"
                      type: "number"
                  required:
                  - "logging_type"
                  - "max_entry_count"
                  title: "First N Entries"
                  type: "object"
                - additionalProperties: true
                  description: "For each stream, log every N-th entry with a maximum\
                    \ cap."
                  properties:
                    logging_type:
                      default: "EveryNth"
                      enum:
                      - "EveryNth"
                      type: "string"
                    max_entry_count:
                      default: 100
                      description: "Number of entries to log. This destination is\
                        \ for testing only. So it won't make sense to log infinitely.\
                        \ The maximum is 1,000 entries."
                      examples:
                      - 100
                      maximum: 1000
                      minimum: 1
                      title: "Max Log Entries"
                      type: "number"
                    nth_entry_to_log:
                      description: "The N-th entry to log for each stream. N starts\
                        \ from 1. For example, when N = 1, every entry is logged;\
                        \ when N = 2, every other entry is logged; when N = 3, one\
                        \ out of three entries is logged."
                      examples:
                      - 3
                      maximum: 1000
                      minimum: 1
                      title: "N"
                      type: "integer"
                  required:
                  - "logging_type"
                  - "nth_entry_to_log"
                  - "max_entry_count"
                  title: "Every N-th Entry"
                  type: "object"
                - additionalProperties: true
                  description: "For each stream, randomly log a percentage of the\
                    \ entries with a maximum cap."
                  properties:
                    logging_type:
                      default: "RandomSampling"
                      enum:
                      - "RandomSampling"
                      type: "string"
                    max_entry_count:
                      default: 100
                      description: "Number of entries to log. This destination is\
                        \ for testing only. So it won't make sense to log infinitely.\
                        \ The maximum is 1,000 entries."
                      examples:
                      - 100
                      maximum: 1000
                      minimum: 1
                      title: "Max Log Entries"
                      type: "number"
                    sampling_ratio:
                      default: 0.001
                      description: "A positive floating number smaller than 1."
                      examples:
                      - 0.001
                      maximum: 1
                      minimum: 0
                      title: "Sampling Ratio"
                      type: "number"
                    seed:
                      description: "When the seed is unspecified, the current time\
                        \ millis will be used as the seed."
                      examples:
                      - 1900
                      title: "Random Number Generator Seed"
                      type: "number"
                  required:
                  - "logging_type"
                  - "sampling_ratio"
                  - "max_entry_count"
                  title: "Random Sampling"
                  type: "object"
                title: "Logging Configuration"
                type: "object"
              test_destination_type:
                default: "LOGGING"
                enum:
                - "LOGGING"
                type: "string"
            required:
            - "test_destination_type"
            - "logging_config"
            title: "Logging"
            type: "object"
          - additionalProperties: true
            properties:
              test_destination_type:
                default: "SILENT"
                enum:
                - "SILENT"
                type: "string"
            required:
            - "test_destination_type"
            title: "Silent"
            type: "object"
          - additionalProperties: true
            properties:
              millis_per_record:
                description: "The number of milliseconds to wait between each record."
                type: "integer"
              test_destination_type:
                default: "THROTTLED"
                enum:
                - "THROTTLED"
                type: "string"
            required:
            - "test_destination_type"
            - "millis_per_record"
            title: "Throttled"
            type: "object"
          - additionalProperties: true
            properties:
              num_messages:
                description: "Number of messages after which to fail."
                type: "integer"
              test_destination_type:
                default: "FAILING"
                enum:
                - "FAILING"
                type: "string"
            required:
            - "test_destination_type"
            - "num_messages"
            title: "Failing"
            type: "object"
          title: "Test Destination"
          type: "object"
        destinationType:
          title: "dev-null"
          const: "dev-null"
          enum:
          - "dev-null"
          order: 0
          type: "string"
      required:
      - "test_destination"
      - "destinationType"
      title: "E2E Test Destination Spec"
      type: "object"
    destination-dev-null-update:
      properties:
        test_destination:
          description: "The type of destination to be used"
          oneOf:
          - additionalProperties: true
            properties:
              logging_config:
                description: "Configurate how the messages are logged."
                oneOf:
                - additionalProperties: true
                  description: "Log first N entries per stream."
                  properties:
                    logging_type:
                      default: "FirstN"
                      enum:
                      - "FirstN"
                      type: "string"
                    max_entry_count:
                      default: 100
                      description: "Number of entries to log. This destination is\
                        \ for testing only. So it won't make sense to log infinitely.\
                        \ The maximum is 1,000 entries."
                      examples:
                      - 100
                      maximum: 1000
                      minimum: 1
                      title: "N"
                      type: "number"
                  required:
                  - "logging_type"
                  - "max_entry_count"
                  title: "First N Entries"
                  type: "object"
                - additionalProperties: true
                  description: "For each stream, log every N-th entry with a maximum\
                    \ cap."
                  properties:
                    logging_type:
                      default: "EveryNth"
                      enum:
                      - "EveryNth"
                      type: "string"
                    max_entry_count:
                      default: 100
                      description: "Number of entries to log. This destination is\
                        \ for testing only. So it won't make sense to log infinitely.\
                        \ The maximum is 1,000 entries."
                      examples:
                      - 100
                      maximum: 1000
                      minimum: 1
                      title: "Max Log Entries"
                      type: "number"
                    nth_entry_to_log:
                      description: "The N-th entry to log for each stream. N starts\
                        \ from 1. For example, when N = 1, every entry is logged;\
                        \ when N = 2, every other entry is logged; when N = 3, one\
                        \ out of three entries is logged."
                      examples:
                      - 3
                      maximum: 1000
                      minimum: 1
                      title: "N"
                      type: "integer"
                  required:
                  - "logging_type"
                  - "nth_entry_to_log"
                  - "max_entry_count"
                  title: "Every N-th Entry"
                  type: "object"
                - additionalProperties: true
                  description: "For each stream, randomly log a percentage of the\
                    \ entries with a maximum cap."
                  properties:
                    logging_type:
                      default: "RandomSampling"
                      enum:
                      - "RandomSampling"
                      type: "string"
                    max_entry_count:
                      default: 100
                      description: "Number of entries to log. This destination is\
                        \ for testing only. So it won't make sense to log infinitely.\
                        \ The maximum is 1,000 entries."
                      examples:
                      - 100
                      maximum: 1000
                      minimum: 1
                      title: "Max Log Entries"
                      type: "number"
                    sampling_ratio:
                      default: 0.001
                      description: "A positive floating number smaller than 1."
                      examples:
                      - 0.001
                      maximum: 1
                      minimum: 0
                      title: "Sampling Ratio"
                      type: "number"
                    seed:
                      description: "When the seed is unspecified, the current time\
                        \ millis will be used as the seed."
                      examples:
                      - 1900
                      title: "Random Number Generator Seed"
                      type: "number"
                  required:
                  - "logging_type"
                  - "sampling_ratio"
                  - "max_entry_count"
                  title: "Random Sampling"
                  type: "object"
                title: "Logging Configuration"
                type: "object"
              test_destination_type:
                default: "LOGGING"
                enum:
                - "LOGGING"
                type: "string"
            required:
            - "test_destination_type"
            - "logging_config"
            title: "Logging"
            type: "object"
          - additionalProperties: true
            properties:
              test_destination_type:
                default: "SILENT"
                enum:
                - "SILENT"
                type: "string"
            required:
            - "test_destination_type"
            title: "Silent"
            type: "object"
          - additionalProperties: true
            properties:
              millis_per_record:
                description: "The number of milliseconds to wait between each record."
                type: "integer"
              test_destination_type:
                default: "THROTTLED"
                enum:
                - "THROTTLED"
                type: "string"
            required:
            - "test_destination_type"
            - "millis_per_record"
            title: "Throttled"
            type: "object"
          - additionalProperties: true
            properties:
              num_messages:
                description: "Number of messages after which to fail."
                type: "integer"
              test_destination_type:
                default: "FAILING"
                enum:
                - "FAILING"
                type: "string"
            required:
            - "test_destination_type"
            - "num_messages"
            title: "Failing"
            type: "object"
          title: "Test Destination"
          type: "object"
      required:
      - "test_destination"
      title: "E2E Test Destination Spec"
      type: "object"
    destination-snowflake-cortex:
      description: "The configuration model for the Vector DB based destinations.\
        \ This model is used to generate the UI for the destination configuration,\n\
        as well as to provide type safety for the configuration passed to the destination.\n\
        \nThe configuration model is composed of four parts:\n* Processing configuration\n\
        * Embedding configuration\n* Indexing configuration\n* Advanced configuration\n\
        \nProcessing, embedding and advanced configuration are provided by this base\
        \ class, while the indexing configuration is provided by the destination connector\
        \ in the sub class."
      groups:
      - id: "processing"
        title: "Processing"
      - id: "embedding"
        title: "Embedding"
      - id: "indexing"
        title: "Indexing"
      - id: "advanced"
        title: "Advanced"
      properties:
        embedding:
          description: "Embedding configuration"
          group: "embedding"
          oneOf:
          - description: "Use the OpenAI API to embed text. This option is using the\
              \ text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              mode:
                const: "openai"
                default: "openai"
                enum:
                - "openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                title: "OpenAI API key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "openai_key"
            - "mode"
            title: "OpenAI"
            type: "object"
          - description: "Use the Cohere API to embed text."
            properties:
              cohere_key:
                airbyte_secret: true
                title: "Cohere API key"
                type: "string"
                x-speakeasy-param-sensitive: true
              mode:
                const: "cohere"
                default: "cohere"
                enum:
                - "cohere"
                title: "Mode"
                type: "string"
            required:
            - "cohere_key"
            - "mode"
            title: "Cohere"
            type: "object"
          - description: "Use a fake embedding made out of random vectors with 1536\
              \ embedding dimensions. This is useful for testing the data pipeline\
              \ without incurring any costs."
            properties:
              mode:
                const: "fake"
                default: "fake"
                enum:
                - "fake"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "Fake"
            type: "object"
          - description: "Use the Azure-hosted OpenAI API to embed text. This option\
              \ is using the text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              api_base:
                description: "The base URL for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "https://your-resource-name.openai.azure.com"
                title: "Resource base URL"
                type: "string"
              deployment:
                description: "The deployment for your Azure OpenAI resource.  You\
                  \ can find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "your-resource-name"
                title: "Deployment"
                type: "string"
              mode:
                const: "azure_openai"
                default: "azure_openai"
                enum:
                - "azure_openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                description: "The API key for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                title: "Azure OpenAI API key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "openai_key"
            - "api_base"
            - "deployment"
            - "mode"
            title: "Azure OpenAI"
            type: "object"
          - description: "Use a service that's compatible with the OpenAI API to embed\
              \ text."
            properties:
              api_key:
                airbyte_secret: true
                default: ""
                title: "API key"
                type: "string"
                x-speakeasy-param-sensitive: true
              base_url:
                description: "The base URL for your OpenAI-compatible service"
                examples:
                - "https://your-service-name.com"
                title: "Base URL"
                type: "string"
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              mode:
                const: "openai_compatible"
                default: "openai_compatible"
                enum:
                - "openai_compatible"
                title: "Mode"
                type: "string"
              model_name:
                default: "text-embedding-ada-002"
                description: "The name of the model to use for embedding"
                examples:
                - "text-embedding-ada-002"
                title: "Model name"
                type: "string"
            required:
            - "base_url"
            - "dimensions"
            - "mode"
            title: "OpenAI-compatible"
            type: "object"
          title: "Embedding"
          type: "object"
        indexing:
          description: "Snowflake can be used to store vector data and retrieve embeddings."
          group: "indexing"
          properties:
            credentials:
              properties:
                password:
                  airbyte_secret: true
                  description: "Enter the password you want to use to access the database"
                  examples:
                  - "AIRBYTE_PASSWORD"
                  order: 7
                  title: "Password"
                  type: "string"
                  x-speakeasy-param-sensitive: true
              required:
              - "password"
              title: "Credentials"
              type: "object"
            database:
              description: "Enter the name of the database that you want to sync data\
                \ into"
              examples:
              - "AIRBYTE_DATABASE"
              order: 4
              title: "Database"
              type: "string"
            default_schema:
              description: "Enter the name of the default schema"
              examples:
              - "AIRBYTE_SCHEMA"
              order: 5
              title: "Default Schema"
              type: "string"
            host:
              description: "Enter the account name you want to use to access the database.\
                \ This is usually the identifier before .snowflakecomputing.com"
              examples:
              - "AIRBYTE_ACCOUNT"
              order: 1
              title: "Host"
              type: "string"
            role:
              description: "Enter the role that you want to use to access Snowflake"
              examples:
              - "AIRBYTE_ROLE"
              - "ACCOUNTADMIN"
              order: 2
              title: "Role"
              type: "string"
            username:
              description: "Enter the name of the user you want to use to access the\
                \ database"
              examples:
              - "AIRBYTE_USER"
              order: 6
              title: "Username"
              type: "string"
            warehouse:
              description: "Enter the name of the warehouse that you want to use as\
                \ a compute cluster"
              examples:
              - "AIRBYTE_WAREHOUSE"
              order: 3
              title: "Warehouse"
              type: "string"
          required:
          - "host"
          - "role"
          - "warehouse"
          - "database"
          - "default_schema"
          - "username"
          - "credentials"
          title: "Snowflake Connection"
          type: "object"
        omit_raw_text:
          default: false
          description: "Do not store the text that gets embedded along with the vector\
            \ and the metadata in the destination. If set to true, only the vector\
            \ and the metadata will be stored - in this case raw text for LLM use\
            \ cases needs to be retrieved from another source."
          group: "advanced"
          title: "Do not store raw text"
          type: "boolean"
        processing:
          group: "processing"
          properties:
            chunk_overlap:
              default: 0
              description: "Size of overlap between chunks in tokens to store in vector\
                \ store to better capture relevant context"
              title: "Chunk overlap"
              type: "integer"
            chunk_size:
              description: "Size of chunks in tokens to store in vector store (make\
                \ sure it is not too big for the context if your LLM)"
              maximum: 8191
              minimum: 1
              title: "Chunk size"
              type: "integer"
            field_name_mappings:
              default: []
              description: "List of fields to rename. Not applicable for nested fields,\
                \ but can be used to rename fields already flattened via dot notation."
              items:
                properties:
                  from_field:
                    description: "The field name in the source"
                    title: "From field name"
                    type: "string"
                  to_field:
                    description: "The field name to use in the destination"
                    title: "To field name"
                    type: "string"
                required:
                - "from_field"
                - "to_field"
                title: "FieldNameMappingConfigModel"
                type: "object"
              title: "Field name mappings"
              type: "array"
            metadata_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be stored as\
                \ metadata. The field list is applied to all streams in the same way\
                \ and non-existing fields are ignored. If none are defined, all fields\
                \ are considered metadata fields. When specifying text fields, you\
                \ can access nested fields in the record by using dot notation, e.g.\
                \ `user.name` will access the `name` field in the `user` object. It's\
                \ also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array. When specifying nested paths, all matching\
                \ values are flattened into an array set to a field named by the path."
              examples:
              - "age"
              - "user"
              - "user.name"
              items:
                type: "string"
              title: "Fields to store as metadata"
              type: "array"
            text_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be used to calculate\
                \ the embedding. The field list is applied to all streams in the same\
                \ way and non-existing fields are ignored. If none are defined, all\
                \ fields are considered text fields. When specifying text fields,\
                \ you can access nested fields in the record by using dot notation,\
                \ e.g. `user.name` will access the `name` field in the `user` object.\
                \ It's also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array."
              examples:
              - "text"
              - "user.name"
              - "users.*.name"
              items:
                type: "string"
              title: "Text fields to embed"
              type: "array"
            text_splitter:
              description: "Split text fields into chunks based on the specified method."
              oneOf:
              - description: "Split the text by the list of separators until the chunk\
                  \ size is reached, using the earlier mentioned separators where\
                  \ possible. This is useful for splitting text fields by paragraphs,\
                  \ sentences, words, etc."
                properties:
                  keep_separator:
                    default: false
                    description: "Whether to keep the separator in the resulting chunks"
                    title: "Keep separator"
                    type: "boolean"
                  mode:
                    const: "separator"
                    default: "separator"
                    enum:
                    - "separator"
                    title: "Mode"
                    type: "string"
                  separators:
                    default:
                    - "\"\\n\\n\""
                    - "\"\\n\""
                    - "\" \""
                    - "\"\""
                    description: "List of separator strings to split text fields by.\
                      \ The separator itself needs to be wrapped in double quotes,\
                      \ e.g. to split by the dot character, use \".\". To split by\
                      \ a newline, use \"\\n\"."
                    items:
                      type: "string"
                    title: "Separators"
                    type: "array"
                required:
                - "mode"
                title: "By Separator"
                type: "object"
              - description: "Split the text by Markdown headers down to the specified\
                  \ header level. If the chunk size fits multiple sections, they will\
                  \ be combined into a single chunk."
                properties:
                  mode:
                    const: "markdown"
                    default: "markdown"
                    enum:
                    - "markdown"
                    title: "Mode"
                    type: "string"
                  split_level:
                    default: 1
                    description: "Level of markdown headers to split text fields by.\
                      \ Headings down to the specified level will be used as split\
                      \ points"
                    maximum: 6
                    minimum: 1
                    title: "Split level"
                    type: "integer"
                required:
                - "mode"
                title: "By Markdown header"
                type: "object"
              - description: "Split the text by suitable delimiters based on the programming\
                  \ language. This is useful for splitting code into chunks."
                properties:
                  language:
                    description: "Split code in suitable places based on the programming\
                      \ language"
                    enum:
                    - "cpp"
                    - "go"
                    - "java"
                    - "js"
                    - "php"
                    - "proto"
                    - "python"
                    - "rst"
                    - "ruby"
                    - "rust"
                    - "scala"
                    - "swift"
                    - "markdown"
                    - "latex"
                    - "html"
                    - "sol"
                    title: "Language"
                    type: "string"
                  mode:
                    const: "code"
                    default: "code"
                    enum:
                    - "code"
                    title: "Mode"
                    type: "string"
                required:
                - "language"
                - "mode"
                title: "By Programming Language"
                type: "object"
              title: "Text splitter"
              type: "object"
          required:
          - "chunk_size"
          title: "ProcessingConfigModel"
          type: "object"
        destinationType:
          title: "snowflake-cortex"
          const: "snowflake-cortex"
          enum:
          - "snowflake-cortex"
          order: 0
          type: "string"
      required:
      - "embedding"
      - "processing"
      - "indexing"
      - "destinationType"
      title: "Destination Config"
      type: "object"
    destination-snowflake-cortex-update:
      description: "The configuration model for the Vector DB based destinations.\
        \ This model is used to generate the UI for the destination configuration,\n\
        as well as to provide type safety for the configuration passed to the destination.\n\
        \nThe configuration model is composed of four parts:\n* Processing configuration\n\
        * Embedding configuration\n* Indexing configuration\n* Advanced configuration\n\
        \nProcessing, embedding and advanced configuration are provided by this base\
        \ class, while the indexing configuration is provided by the destination connector\
        \ in the sub class."
      groups:
      - id: "processing"
        title: "Processing"
      - id: "embedding"
        title: "Embedding"
      - id: "indexing"
        title: "Indexing"
      - id: "advanced"
        title: "Advanced"
      properties:
        embedding:
          description: "Embedding configuration"
          group: "embedding"
          oneOf:
          - description: "Use the OpenAI API to embed text. This option is using the\
              \ text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              mode:
                const: "openai"
                default: "openai"
                enum:
                - "openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                title: "OpenAI API key"
                type: "string"
            required:
            - "openai_key"
            - "mode"
            title: "OpenAI"
            type: "object"
          - description: "Use the Cohere API to embed text."
            properties:
              cohere_key:
                airbyte_secret: true
                title: "Cohere API key"
                type: "string"
              mode:
                const: "cohere"
                default: "cohere"
                enum:
                - "cohere"
                title: "Mode"
                type: "string"
            required:
            - "cohere_key"
            - "mode"
            title: "Cohere"
            type: "object"
          - description: "Use a fake embedding made out of random vectors with 1536\
              \ embedding dimensions. This is useful for testing the data pipeline\
              \ without incurring any costs."
            properties:
              mode:
                const: "fake"
                default: "fake"
                enum:
                - "fake"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "Fake"
            type: "object"
          - description: "Use the Azure-hosted OpenAI API to embed text. This option\
              \ is using the text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              api_base:
                description: "The base URL for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "https://your-resource-name.openai.azure.com"
                title: "Resource base URL"
                type: "string"
              deployment:
                description: "The deployment for your Azure OpenAI resource.  You\
                  \ can find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "your-resource-name"
                title: "Deployment"
                type: "string"
              mode:
                const: "azure_openai"
                default: "azure_openai"
                enum:
                - "azure_openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                description: "The API key for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                title: "Azure OpenAI API key"
                type: "string"
            required:
            - "openai_key"
            - "api_base"
            - "deployment"
            - "mode"
            title: "Azure OpenAI"
            type: "object"
          - description: "Use a service that's compatible with the OpenAI API to embed\
              \ text."
            properties:
              api_key:
                airbyte_secret: true
                default: ""
                title: "API key"
                type: "string"
              base_url:
                description: "The base URL for your OpenAI-compatible service"
                examples:
                - "https://your-service-name.com"
                title: "Base URL"
                type: "string"
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              mode:
                const: "openai_compatible"
                default: "openai_compatible"
                enum:
                - "openai_compatible"
                title: "Mode"
                type: "string"
              model_name:
                default: "text-embedding-ada-002"
                description: "The name of the model to use for embedding"
                examples:
                - "text-embedding-ada-002"
                title: "Model name"
                type: "string"
            required:
            - "base_url"
            - "dimensions"
            - "mode"
            title: "OpenAI-compatible"
            type: "object"
          title: "Embedding"
          type: "object"
        indexing:
          description: "Snowflake can be used to store vector data and retrieve embeddings."
          group: "indexing"
          properties:
            credentials:
              properties:
                password:
                  airbyte_secret: true
                  description: "Enter the password you want to use to access the database"
                  examples:
                  - "AIRBYTE_PASSWORD"
                  order: 7
                  title: "Password"
                  type: "string"
              required:
              - "password"
              title: "Credentials"
              type: "object"
            database:
              description: "Enter the name of the database that you want to sync data\
                \ into"
              examples:
              - "AIRBYTE_DATABASE"
              order: 4
              title: "Database"
              type: "string"
            default_schema:
              description: "Enter the name of the default schema"
              examples:
              - "AIRBYTE_SCHEMA"
              order: 5
              title: "Default Schema"
              type: "string"
            host:
              description: "Enter the account name you want to use to access the database.\
                \ This is usually the identifier before .snowflakecomputing.com"
              examples:
              - "AIRBYTE_ACCOUNT"
              order: 1
              title: "Host"
              type: "string"
            role:
              description: "Enter the role that you want to use to access Snowflake"
              examples:
              - "AIRBYTE_ROLE"
              - "ACCOUNTADMIN"
              order: 2
              title: "Role"
              type: "string"
            username:
              description: "Enter the name of the user you want to use to access the\
                \ database"
              examples:
              - "AIRBYTE_USER"
              order: 6
              title: "Username"
              type: "string"
            warehouse:
              description: "Enter the name of the warehouse that you want to use as\
                \ a compute cluster"
              examples:
              - "AIRBYTE_WAREHOUSE"
              order: 3
              title: "Warehouse"
              type: "string"
          required:
          - "host"
          - "role"
          - "warehouse"
          - "database"
          - "default_schema"
          - "username"
          - "credentials"
          title: "Snowflake Connection"
          type: "object"
        omit_raw_text:
          default: false
          description: "Do not store the text that gets embedded along with the vector\
            \ and the metadata in the destination. If set to true, only the vector\
            \ and the metadata will be stored - in this case raw text for LLM use\
            \ cases needs to be retrieved from another source."
          group: "advanced"
          title: "Do not store raw text"
          type: "boolean"
        processing:
          group: "processing"
          properties:
            chunk_overlap:
              default: 0
              description: "Size of overlap between chunks in tokens to store in vector\
                \ store to better capture relevant context"
              title: "Chunk overlap"
              type: "integer"
            chunk_size:
              description: "Size of chunks in tokens to store in vector store (make\
                \ sure it is not too big for the context if your LLM)"
              maximum: 8191
              minimum: 1
              title: "Chunk size"
              type: "integer"
            field_name_mappings:
              default: []
              description: "List of fields to rename. Not applicable for nested fields,\
                \ but can be used to rename fields already flattened via dot notation."
              items:
                properties:
                  from_field:
                    description: "The field name in the source"
                    title: "From field name"
                    type: "string"
                  to_field:
                    description: "The field name to use in the destination"
                    title: "To field name"
                    type: "string"
                required:
                - "from_field"
                - "to_field"
                title: "FieldNameMappingConfigModel"
                type: "object"
              title: "Field name mappings"
              type: "array"
            metadata_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be stored as\
                \ metadata. The field list is applied to all streams in the same way\
                \ and non-existing fields are ignored. If none are defined, all fields\
                \ are considered metadata fields. When specifying text fields, you\
                \ can access nested fields in the record by using dot notation, e.g.\
                \ `user.name` will access the `name` field in the `user` object. It's\
                \ also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array. When specifying nested paths, all matching\
                \ values are flattened into an array set to a field named by the path."
              examples:
              - "age"
              - "user"
              - "user.name"
              items:
                type: "string"
              title: "Fields to store as metadata"
              type: "array"
            text_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be used to calculate\
                \ the embedding. The field list is applied to all streams in the same\
                \ way and non-existing fields are ignored. If none are defined, all\
                \ fields are considered text fields. When specifying text fields,\
                \ you can access nested fields in the record by using dot notation,\
                \ e.g. `user.name` will access the `name` field in the `user` object.\
                \ It's also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array."
              examples:
              - "text"
              - "user.name"
              - "users.*.name"
              items:
                type: "string"
              title: "Text fields to embed"
              type: "array"
            text_splitter:
              description: "Split text fields into chunks based on the specified method."
              oneOf:
              - description: "Split the text by the list of separators until the chunk\
                  \ size is reached, using the earlier mentioned separators where\
                  \ possible. This is useful for splitting text fields by paragraphs,\
                  \ sentences, words, etc."
                properties:
                  keep_separator:
                    default: false
                    description: "Whether to keep the separator in the resulting chunks"
                    title: "Keep separator"
                    type: "boolean"
                  mode:
                    const: "separator"
                    default: "separator"
                    enum:
                    - "separator"
                    title: "Mode"
                    type: "string"
                  separators:
                    default:
                    - "\"\\n\\n\""
                    - "\"\\n\""
                    - "\" \""
                    - "\"\""
                    description: "List of separator strings to split text fields by.\
                      \ The separator itself needs to be wrapped in double quotes,\
                      \ e.g. to split by the dot character, use \".\". To split by\
                      \ a newline, use \"\\n\"."
                    items:
                      type: "string"
                    title: "Separators"
                    type: "array"
                required:
                - "mode"
                title: "By Separator"
                type: "object"
              - description: "Split the text by Markdown headers down to the specified\
                  \ header level. If the chunk size fits multiple sections, they will\
                  \ be combined into a single chunk."
                properties:
                  mode:
                    const: "markdown"
                    default: "markdown"
                    enum:
                    - "markdown"
                    title: "Mode"
                    type: "string"
                  split_level:
                    default: 1
                    description: "Level of markdown headers to split text fields by.\
                      \ Headings down to the specified level will be used as split\
                      \ points"
                    maximum: 6
                    minimum: 1
                    title: "Split level"
                    type: "integer"
                required:
                - "mode"
                title: "By Markdown header"
                type: "object"
              - description: "Split the text by suitable delimiters based on the programming\
                  \ language. This is useful for splitting code into chunks."
                properties:
                  language:
                    description: "Split code in suitable places based on the programming\
                      \ language"
                    enum:
                    - "cpp"
                    - "go"
                    - "java"
                    - "js"
                    - "php"
                    - "proto"
                    - "python"
                    - "rst"
                    - "ruby"
                    - "rust"
                    - "scala"
                    - "swift"
                    - "markdown"
                    - "latex"
                    - "html"
                    - "sol"
                    title: "Language"
                    type: "string"
                  mode:
                    const: "code"
                    default: "code"
                    enum:
                    - "code"
                    title: "Mode"
                    type: "string"
                required:
                - "language"
                - "mode"
                title: "By Programming Language"
                type: "object"
              title: "Text splitter"
              type: "object"
          required:
          - "chunk_size"
          title: "ProcessingConfigModel"
          type: "object"
      required:
      - "embedding"
      - "processing"
      - "indexing"
      title: "Destination Config"
      type: "object"
    destination-timeplus:
      properties:
        apikey:
          airbyte_secret: true
          description: "Personal API key"
          order: 1
          title: "API key"
          type: "string"
          x-speakeasy-param-sensitive: true
        endpoint:
          default: "https://us-west-2.timeplus.cloud/<workspace_id>"
          description: "Timeplus workspace endpoint"
          examples:
          - "https://us-west-2.timeplus.cloud/workspace_id"
          order: 0
          title: "Endpoint"
          type: "string"
        destinationType:
          title: "timeplus"
          const: "timeplus"
          enum:
          - "timeplus"
          order: 0
          type: "string"
      required:
      - "endpoint"
      - "apikey"
      - "destinationType"
      title: "Destination Timeplus"
      type: "object"
    destination-timeplus-update:
      properties:
        apikey:
          airbyte_secret: true
          description: "Personal API key"
          order: 1
          title: "API key"
          type: "string"
        endpoint:
          default: "https://us-west-2.timeplus.cloud/<workspace_id>"
          description: "Timeplus workspace endpoint"
          examples:
          - "https://us-west-2.timeplus.cloud/workspace_id"
          order: 0
          title: "Endpoint"
          type: "string"
      required:
      - "endpoint"
      - "apikey"
      title: "Destination Timeplus"
      type: "object"
    destination-convex:
      properties:
        access_key:
          airbyte_secret: "true"
          description: "API access key used to send data to a Convex deployment."
          type: "string"
          x-speakeasy-param-sensitive: true
        deployment_url:
          description: "URL of the Convex deployment that is the destination"
          examples:
          - "https://murky-swan-635.convex.cloud"
          - "https://cluttered-owl-337.convex.cloud"
          type: "string"
        destinationType:
          title: "convex"
          const: "convex"
          enum:
          - "convex"
          order: 0
          type: "string"
      required:
      - "deployment_url"
      - "access_key"
      - "destinationType"
      title: "Destination Convex"
      type: "object"
    destination-convex-update:
      properties:
        access_key:
          airbyte_secret: "true"
          description: "API access key used to send data to a Convex deployment."
          type: "string"
        deployment_url:
          description: "URL of the Convex deployment that is the destination"
          examples:
          - "https://murky-swan-635.convex.cloud"
          - "https://cluttered-owl-337.convex.cloud"
          type: "string"
      required:
      - "deployment_url"
      - "access_key"
      title: "Destination Convex"
      type: "object"
    destination-firestore:
      properties:
        credentials_json:
          airbyte_secret: true
          description: "The contents of the JSON service account key. Check out the\
            \ <a href=\"https://docs.airbyte.com/integrations/destinations/firestore\"\
            >docs</a> if you need help generating this key. Default credentials will\
            \ be used if this field is left empty."
          title: "Credentials JSON"
          type: "string"
          x-speakeasy-param-sensitive: true
        project_id:
          description: "The GCP project ID for the project containing the target BigQuery\
            \ dataset."
          title: "Project ID"
          type: "string"
        destinationType:
          title: "firestore"
          const: "firestore"
          enum:
          - "firestore"
          order: 0
          type: "string"
      required:
      - "project_id"
      - "destinationType"
      title: "Destination Google Firestore"
      type: "object"
    destination-firestore-update:
      properties:
        credentials_json:
          airbyte_secret: true
          description: "The contents of the JSON service account key. Check out the\
            \ <a href=\"https://docs.airbyte.com/integrations/destinations/firestore\"\
            >docs</a> if you need help generating this key. Default credentials will\
            \ be used if this field is left empty."
          title: "Credentials JSON"
          type: "string"
        project_id:
          description: "The GCP project ID for the project containing the target BigQuery\
            \ dataset."
          title: "Project ID"
          type: "string"
      required:
      - "project_id"
      title: "Destination Google Firestore"
      type: "object"
    destination-qdrant:
      description: "The configuration model for the Vector DB based destinations.\
        \ This model is used to generate the UI for the destination configuration,\n\
        as well as to provide type safety for the configuration passed to the destination.\n\
        \nThe configuration model is composed of four parts:\n* Processing configuration\n\
        * Embedding configuration\n* Indexing configuration\n* Advanced configuration\n\
        \nProcessing, embedding and advanced configuration are provided by this base\
        \ class, while the indexing configuration is provided by the destination connector\
        \ in the sub class."
      groups:
      - id: "processing"
        title: "Processing"
      - id: "embedding"
        title: "Embedding"
      - id: "indexing"
        title: "Indexing"
      - id: "advanced"
        title: "Advanced"
      properties:
        embedding:
          description: "Embedding configuration"
          group: "embedding"
          oneOf:
          - description: "Use the OpenAI API to embed text. This option is using the\
              \ text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              mode:
                const: "openai"
                default: "openai"
                enum:
                - "openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                title: "OpenAI API key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "openai_key"
            - "mode"
            title: "OpenAI"
            type: "object"
          - description: "Use the Cohere API to embed text."
            properties:
              cohere_key:
                airbyte_secret: true
                title: "Cohere API key"
                type: "string"
                x-speakeasy-param-sensitive: true
              mode:
                const: "cohere"
                default: "cohere"
                enum:
                - "cohere"
                title: "Mode"
                type: "string"
            required:
            - "cohere_key"
            - "mode"
            title: "Cohere"
            type: "object"
          - description: "Use a fake embedding made out of random vectors with 1536\
              \ embedding dimensions. This is useful for testing the data pipeline\
              \ without incurring any costs."
            properties:
              mode:
                const: "fake"
                default: "fake"
                enum:
                - "fake"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "Fake"
            type: "object"
          - description: "Use the Azure-hosted OpenAI API to embed text. This option\
              \ is using the text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              api_base:
                description: "The base URL for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "https://your-resource-name.openai.azure.com"
                title: "Resource base URL"
                type: "string"
              deployment:
                description: "The deployment for your Azure OpenAI resource.  You\
                  \ can find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "your-resource-name"
                title: "Deployment"
                type: "string"
              mode:
                const: "azure_openai"
                default: "azure_openai"
                enum:
                - "azure_openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                description: "The API key for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                title: "Azure OpenAI API key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "openai_key"
            - "api_base"
            - "deployment"
            - "mode"
            title: "Azure OpenAI"
            type: "object"
          - description: "Use a service that's compatible with the OpenAI API to embed\
              \ text."
            properties:
              api_key:
                airbyte_secret: true
                default: ""
                title: "API key"
                type: "string"
                x-speakeasy-param-sensitive: true
              base_url:
                description: "The base URL for your OpenAI-compatible service"
                examples:
                - "https://your-service-name.com"
                title: "Base URL"
                type: "string"
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              mode:
                const: "openai_compatible"
                default: "openai_compatible"
                enum:
                - "openai_compatible"
                title: "Mode"
                type: "string"
              model_name:
                default: "text-embedding-ada-002"
                description: "The name of the model to use for embedding"
                examples:
                - "text-embedding-ada-002"
                title: "Model name"
                type: "string"
            required:
            - "base_url"
            - "dimensions"
            - "mode"
            title: "OpenAI-compatible"
            type: "object"
          title: "Embedding"
          type: "object"
        indexing:
          description: "Indexing configuration"
          group: "Indexing"
          properties:
            auth_method:
              default: "api_key_auth"
              description: "Method to authenticate with the Qdrant Instance"
              oneOf:
              - properties:
                  api_key:
                    airbyte_secret: true
                    description: "API Key for the Qdrant instance"
                    title: "API Key"
                    type: "string"
                    x-speakeasy-param-sensitive: true
                  mode:
                    const: "api_key_auth"
                    default: "api_key_auth"
                    enum:
                    - "api_key_auth"
                    title: "Mode"
                    type: "string"
                required:
                - "api_key"
                title: "ApiKeyAuth"
                type: "object"
              - properties:
                  mode:
                    const: "no_auth"
                    default: "no_auth"
                    enum:
                    - "no_auth"
                    title: "Mode"
                    type: "string"
                title: "NoAuth"
                type: "object"
              order: 1
              title: "Authentication Method"
              type: "object"
            collection:
              description: "The collection to load data into"
              order: 2
              title: "Collection Name"
              type: "string"
            distance_metric:
              default: "cos"
              description: "The Distance metric used to measure similarities among\
                \ vectors. This field is only used if the collection defined in the\
                \ does not exist yet and is created automatically by the connector."
              enum:
              - "dot"
              - "cos"
              - "euc"
              title: "Distance Metric"
              type: "string"
            prefer_grpc:
              default: true
              description: "Whether to prefer gRPC over HTTP. Set to true for Qdrant\
                \ cloud clusters"
              title: "Prefer gRPC"
              type: "boolean"
            text_field:
              default: "text"
              description: "The field in the payload that contains the embedded text"
              title: "Text Field"
              type: "string"
            url:
              description: "Public Endpoint of the Qdrant cluser"
              order: 0
              title: "Public Endpoint"
              type: "string"
          required:
          - "url"
          - "collection"
          title: "Indexing"
          type: "object"
        omit_raw_text:
          default: false
          description: "Do not store the text that gets embedded along with the vector\
            \ and the metadata in the destination. If set to true, only the vector\
            \ and the metadata will be stored - in this case raw text for LLM use\
            \ cases needs to be retrieved from another source."
          group: "advanced"
          title: "Do not store raw text"
          type: "boolean"
        processing:
          group: "processing"
          properties:
            chunk_overlap:
              default: 0
              description: "Size of overlap between chunks in tokens to store in vector\
                \ store to better capture relevant context"
              title: "Chunk overlap"
              type: "integer"
            chunk_size:
              description: "Size of chunks in tokens to store in vector store (make\
                \ sure it is not too big for the context if your LLM)"
              maximum: 8191
              minimum: 1
              title: "Chunk size"
              type: "integer"
            field_name_mappings:
              default: []
              description: "List of fields to rename. Not applicable for nested fields,\
                \ but can be used to rename fields already flattened via dot notation."
              items:
                properties:
                  from_field:
                    description: "The field name in the source"
                    title: "From field name"
                    type: "string"
                  to_field:
                    description: "The field name to use in the destination"
                    title: "To field name"
                    type: "string"
                required:
                - "from_field"
                - "to_field"
                title: "FieldNameMappingConfigModel"
                type: "object"
              title: "Field name mappings"
              type: "array"
            metadata_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be stored as\
                \ metadata. The field list is applied to all streams in the same way\
                \ and non-existing fields are ignored. If none are defined, all fields\
                \ are considered metadata fields. When specifying text fields, you\
                \ can access nested fields in the record by using dot notation, e.g.\
                \ `user.name` will access the `name` field in the `user` object. It's\
                \ also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array. When specifying nested paths, all matching\
                \ values are flattened into an array set to a field named by the path."
              examples:
              - "age"
              - "user"
              - "user.name"
              items:
                type: "string"
              title: "Fields to store as metadata"
              type: "array"
            text_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be used to calculate\
                \ the embedding. The field list is applied to all streams in the same\
                \ way and non-existing fields are ignored. If none are defined, all\
                \ fields are considered text fields. When specifying text fields,\
                \ you can access nested fields in the record by using dot notation,\
                \ e.g. `user.name` will access the `name` field in the `user` object.\
                \ It's also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array."
              examples:
              - "text"
              - "user.name"
              - "users.*.name"
              items:
                type: "string"
              title: "Text fields to embed"
              type: "array"
            text_splitter:
              description: "Split text fields into chunks based on the specified method."
              oneOf:
              - description: "Split the text by the list of separators until the chunk\
                  \ size is reached, using the earlier mentioned separators where\
                  \ possible. This is useful for splitting text fields by paragraphs,\
                  \ sentences, words, etc."
                properties:
                  keep_separator:
                    default: false
                    description: "Whether to keep the separator in the resulting chunks"
                    title: "Keep separator"
                    type: "boolean"
                  mode:
                    const: "separator"
                    default: "separator"
                    enum:
                    - "separator"
                    title: "Mode"
                    type: "string"
                  separators:
                    default:
                    - "\"\\n\\n\""
                    - "\"\\n\""
                    - "\" \""
                    - "\"\""
                    description: "List of separator strings to split text fields by.\
                      \ The separator itself needs to be wrapped in double quotes,\
                      \ e.g. to split by the dot character, use \".\". To split by\
                      \ a newline, use \"\\n\"."
                    items:
                      type: "string"
                    title: "Separators"
                    type: "array"
                required:
                - "mode"
                title: "By Separator"
                type: "object"
              - description: "Split the text by Markdown headers down to the specified\
                  \ header level. If the chunk size fits multiple sections, they will\
                  \ be combined into a single chunk."
                properties:
                  mode:
                    const: "markdown"
                    default: "markdown"
                    enum:
                    - "markdown"
                    title: "Mode"
                    type: "string"
                  split_level:
                    default: 1
                    description: "Level of markdown headers to split text fields by.\
                      \ Headings down to the specified level will be used as split\
                      \ points"
                    maximum: 6
                    minimum: 1
                    title: "Split level"
                    type: "integer"
                required:
                - "mode"
                title: "By Markdown header"
                type: "object"
              - description: "Split the text by suitable delimiters based on the programming\
                  \ language. This is useful for splitting code into chunks."
                properties:
                  language:
                    description: "Split code in suitable places based on the programming\
                      \ language"
                    enum:
                    - "cpp"
                    - "go"
                    - "java"
                    - "js"
                    - "php"
                    - "proto"
                    - "python"
                    - "rst"
                    - "ruby"
                    - "rust"
                    - "scala"
                    - "swift"
                    - "markdown"
                    - "latex"
                    - "html"
                    - "sol"
                    title: "Language"
                    type: "string"
                  mode:
                    const: "code"
                    default: "code"
                    enum:
                    - "code"
                    title: "Mode"
                    type: "string"
                required:
                - "language"
                - "mode"
                title: "By Programming Language"
                type: "object"
              title: "Text splitter"
              type: "object"
          required:
          - "chunk_size"
          title: "ProcessingConfigModel"
          type: "object"
        destinationType:
          title: "qdrant"
          const: "qdrant"
          enum:
          - "qdrant"
          order: 0
          type: "string"
      required:
      - "embedding"
      - "processing"
      - "indexing"
      - "destinationType"
      title: "Destination Config"
      type: "object"
    destination-qdrant-update:
      description: "The configuration model for the Vector DB based destinations.\
        \ This model is used to generate the UI for the destination configuration,\n\
        as well as to provide type safety for the configuration passed to the destination.\n\
        \nThe configuration model is composed of four parts:\n* Processing configuration\n\
        * Embedding configuration\n* Indexing configuration\n* Advanced configuration\n\
        \nProcessing, embedding and advanced configuration are provided by this base\
        \ class, while the indexing configuration is provided by the destination connector\
        \ in the sub class."
      groups:
      - id: "processing"
        title: "Processing"
      - id: "embedding"
        title: "Embedding"
      - id: "indexing"
        title: "Indexing"
      - id: "advanced"
        title: "Advanced"
      properties:
        embedding:
          description: "Embedding configuration"
          group: "embedding"
          oneOf:
          - description: "Use the OpenAI API to embed text. This option is using the\
              \ text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              mode:
                const: "openai"
                default: "openai"
                enum:
                - "openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                title: "OpenAI API key"
                type: "string"
            required:
            - "openai_key"
            - "mode"
            title: "OpenAI"
            type: "object"
          - description: "Use the Cohere API to embed text."
            properties:
              cohere_key:
                airbyte_secret: true
                title: "Cohere API key"
                type: "string"
              mode:
                const: "cohere"
                default: "cohere"
                enum:
                - "cohere"
                title: "Mode"
                type: "string"
            required:
            - "cohere_key"
            - "mode"
            title: "Cohere"
            type: "object"
          - description: "Use a fake embedding made out of random vectors with 1536\
              \ embedding dimensions. This is useful for testing the data pipeline\
              \ without incurring any costs."
            properties:
              mode:
                const: "fake"
                default: "fake"
                enum:
                - "fake"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "Fake"
            type: "object"
          - description: "Use the Azure-hosted OpenAI API to embed text. This option\
              \ is using the text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              api_base:
                description: "The base URL for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "https://your-resource-name.openai.azure.com"
                title: "Resource base URL"
                type: "string"
              deployment:
                description: "The deployment for your Azure OpenAI resource.  You\
                  \ can find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "your-resource-name"
                title: "Deployment"
                type: "string"
              mode:
                const: "azure_openai"
                default: "azure_openai"
                enum:
                - "azure_openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                description: "The API key for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                title: "Azure OpenAI API key"
                type: "string"
            required:
            - "openai_key"
            - "api_base"
            - "deployment"
            - "mode"
            title: "Azure OpenAI"
            type: "object"
          - description: "Use a service that's compatible with the OpenAI API to embed\
              \ text."
            properties:
              api_key:
                airbyte_secret: true
                default: ""
                title: "API key"
                type: "string"
              base_url:
                description: "The base URL for your OpenAI-compatible service"
                examples:
                - "https://your-service-name.com"
                title: "Base URL"
                type: "string"
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              mode:
                const: "openai_compatible"
                default: "openai_compatible"
                enum:
                - "openai_compatible"
                title: "Mode"
                type: "string"
              model_name:
                default: "text-embedding-ada-002"
                description: "The name of the model to use for embedding"
                examples:
                - "text-embedding-ada-002"
                title: "Model name"
                type: "string"
            required:
            - "base_url"
            - "dimensions"
            - "mode"
            title: "OpenAI-compatible"
            type: "object"
          title: "Embedding"
          type: "object"
        indexing:
          description: "Indexing configuration"
          group: "Indexing"
          properties:
            auth_method:
              default: "api_key_auth"
              description: "Method to authenticate with the Qdrant Instance"
              oneOf:
              - properties:
                  api_key:
                    airbyte_secret: true
                    description: "API Key for the Qdrant instance"
                    title: "API Key"
                    type: "string"
                  mode:
                    const: "api_key_auth"
                    default: "api_key_auth"
                    enum:
                    - "api_key_auth"
                    title: "Mode"
                    type: "string"
                required:
                - "api_key"
                title: "ApiKeyAuth"
                type: "object"
              - properties:
                  mode:
                    const: "no_auth"
                    default: "no_auth"
                    enum:
                    - "no_auth"
                    title: "Mode"
                    type: "string"
                title: "NoAuth"
                type: "object"
              order: 1
              title: "Authentication Method"
              type: "object"
            collection:
              description: "The collection to load data into"
              order: 2
              title: "Collection Name"
              type: "string"
            distance_metric:
              default: "cos"
              description: "The Distance metric used to measure similarities among\
                \ vectors. This field is only used if the collection defined in the\
                \ does not exist yet and is created automatically by the connector."
              enum:
              - "dot"
              - "cos"
              - "euc"
              title: "Distance Metric"
              type: "string"
            prefer_grpc:
              default: true
              description: "Whether to prefer gRPC over HTTP. Set to true for Qdrant\
                \ cloud clusters"
              title: "Prefer gRPC"
              type: "boolean"
            text_field:
              default: "text"
              description: "The field in the payload that contains the embedded text"
              title: "Text Field"
              type: "string"
            url:
              description: "Public Endpoint of the Qdrant cluser"
              order: 0
              title: "Public Endpoint"
              type: "string"
          required:
          - "url"
          - "collection"
          title: "Indexing"
          type: "object"
        omit_raw_text:
          default: false
          description: "Do not store the text that gets embedded along with the vector\
            \ and the metadata in the destination. If set to true, only the vector\
            \ and the metadata will be stored - in this case raw text for LLM use\
            \ cases needs to be retrieved from another source."
          group: "advanced"
          title: "Do not store raw text"
          type: "boolean"
        processing:
          group: "processing"
          properties:
            chunk_overlap:
              default: 0
              description: "Size of overlap between chunks in tokens to store in vector\
                \ store to better capture relevant context"
              title: "Chunk overlap"
              type: "integer"
            chunk_size:
              description: "Size of chunks in tokens to store in vector store (make\
                \ sure it is not too big for the context if your LLM)"
              maximum: 8191
              minimum: 1
              title: "Chunk size"
              type: "integer"
            field_name_mappings:
              default: []
              description: "List of fields to rename. Not applicable for nested fields,\
                \ but can be used to rename fields already flattened via dot notation."
              items:
                properties:
                  from_field:
                    description: "The field name in the source"
                    title: "From field name"
                    type: "string"
                  to_field:
                    description: "The field name to use in the destination"
                    title: "To field name"
                    type: "string"
                required:
                - "from_field"
                - "to_field"
                title: "FieldNameMappingConfigModel"
                type: "object"
              title: "Field name mappings"
              type: "array"
            metadata_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be stored as\
                \ metadata. The field list is applied to all streams in the same way\
                \ and non-existing fields are ignored. If none are defined, all fields\
                \ are considered metadata fields. When specifying text fields, you\
                \ can access nested fields in the record by using dot notation, e.g.\
                \ `user.name` will access the `name` field in the `user` object. It's\
                \ also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array. When specifying nested paths, all matching\
                \ values are flattened into an array set to a field named by the path."
              examples:
              - "age"
              - "user"
              - "user.name"
              items:
                type: "string"
              title: "Fields to store as metadata"
              type: "array"
            text_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be used to calculate\
                \ the embedding. The field list is applied to all streams in the same\
                \ way and non-existing fields are ignored. If none are defined, all\
                \ fields are considered text fields. When specifying text fields,\
                \ you can access nested fields in the record by using dot notation,\
                \ e.g. `user.name` will access the `name` field in the `user` object.\
                \ It's also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array."
              examples:
              - "text"
              - "user.name"
              - "users.*.name"
              items:
                type: "string"
              title: "Text fields to embed"
              type: "array"
            text_splitter:
              description: "Split text fields into chunks based on the specified method."
              oneOf:
              - description: "Split the text by the list of separators until the chunk\
                  \ size is reached, using the earlier mentioned separators where\
                  \ possible. This is useful for splitting text fields by paragraphs,\
                  \ sentences, words, etc."
                properties:
                  keep_separator:
                    default: false
                    description: "Whether to keep the separator in the resulting chunks"
                    title: "Keep separator"
                    type: "boolean"
                  mode:
                    const: "separator"
                    default: "separator"
                    enum:
                    - "separator"
                    title: "Mode"
                    type: "string"
                  separators:
                    default:
                    - "\"\\n\\n\""
                    - "\"\\n\""
                    - "\" \""
                    - "\"\""
                    description: "List of separator strings to split text fields by.\
                      \ The separator itself needs to be wrapped in double quotes,\
                      \ e.g. to split by the dot character, use \".\". To split by\
                      \ a newline, use \"\\n\"."
                    items:
                      type: "string"
                    title: "Separators"
                    type: "array"
                required:
                - "mode"
                title: "By Separator"
                type: "object"
              - description: "Split the text by Markdown headers down to the specified\
                  \ header level. If the chunk size fits multiple sections, they will\
                  \ be combined into a single chunk."
                properties:
                  mode:
                    const: "markdown"
                    default: "markdown"
                    enum:
                    - "markdown"
                    title: "Mode"
                    type: "string"
                  split_level:
                    default: 1
                    description: "Level of markdown headers to split text fields by.\
                      \ Headings down to the specified level will be used as split\
                      \ points"
                    maximum: 6
                    minimum: 1
                    title: "Split level"
                    type: "integer"
                required:
                - "mode"
                title: "By Markdown header"
                type: "object"
              - description: "Split the text by suitable delimiters based on the programming\
                  \ language. This is useful for splitting code into chunks."
                properties:
                  language:
                    description: "Split code in suitable places based on the programming\
                      \ language"
                    enum:
                    - "cpp"
                    - "go"
                    - "java"
                    - "js"
                    - "php"
                    - "proto"
                    - "python"
                    - "rst"
                    - "ruby"
                    - "rust"
                    - "scala"
                    - "swift"
                    - "markdown"
                    - "latex"
                    - "html"
                    - "sol"
                    title: "Language"
                    type: "string"
                  mode:
                    const: "code"
                    default: "code"
                    enum:
                    - "code"
                    title: "Mode"
                    type: "string"
                required:
                - "language"
                - "mode"
                title: "By Programming Language"
                type: "object"
              title: "Text splitter"
              type: "object"
          required:
          - "chunk_size"
          title: "ProcessingConfigModel"
          type: "object"
      required:
      - "embedding"
      - "processing"
      - "indexing"
      title: "Destination Config"
      type: "object"
    destination-databricks:
      properties:
        accept_terms:
          default: false
          description: "You must agree to the Databricks JDBC Driver <a href=\"https://databricks.com/jdbc-odbc-driver-license\"\
            >Terms & Conditions</a> to use this connector."
          order: 1
          title: "Agree to the Databricks JDBC Driver Terms & Conditions"
          type: "boolean"
        authentication:
          default: "OAUTH"
          description: "Authentication mechanism for Staging files and running queries"
          oneOf:
          - properties:
              auth_type:
                const: "OAUTH"
                order: 0
                type: "string"
                enum:
                - "OAUTH"
              client_id:
                order: 1
                type: "string"
              secret:
                airbyte_secret: true
                order: 2
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "auth_type"
            - "client_id"
            - "secret"
            title: "OAuth2 (Recommended)"
          - properties:
              auth_type:
                const: "BASIC"
                order: 0
                type: "string"
                enum:
                - "BASIC"
              personal_access_token:
                airbyte_secret: true
                order: 1
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "auth_type"
            - "personal_access_token"
            title: "Personal Access Token"
          order: 8
          title: "Authentication"
          type: "object"
        database:
          description: "The name of the unity catalog for the database"
          order: 5
          title: "Databricks Unity Catalog Name"
          type: "string"
        hostname:
          description: "Databricks Cluster Server Hostname."
          examples:
          - "abc-12345678-wxyz.cloud.databricks.com"
          order: 2
          title: "Server Hostname"
          type: "string"
        http_path:
          description: "Databricks Cluster HTTP Path."
          examples:
          - "sql/1.0/warehouses/0000-1111111-abcd90"
          order: 3
          title: "HTTP Path"
          type: "string"
        port:
          default: "443"
          description: "Databricks Cluster Port."
          examples:
          - "443"
          order: 4
          title: "Port"
          type: "string"
        purge_staging_data:
          default: true
          description: "Default to 'true'. Switch it to 'false' for debugging purpose."
          order: 9
          title: "Purge Staging Files and Tables"
          type: "boolean"
        raw_schema_override:
          default: "airbyte_internal"
          description: "The schema to write raw tables into (default: airbyte_internal)"
          order: 10
          title: "Raw Table Schema Name"
          type: "string"
        schema:
          default: "default"
          description: "The default schema tables are written. If not specified otherwise,\
            \ the \"default\" will be used."
          examples:
          - "default"
          order: 6
          title: "Default Schema"
          type: "string"
        destinationType:
          title: "databricks"
          const: "databricks"
          enum:
          - "databricks"
          order: 0
          type: "string"
      required:
      - "accept_terms"
      - "hostname"
      - "http_path"
      - "database"
      - "authentication"
      - "destinationType"
      title: "Databricks Lakehouse Destination Spec"
      type: "object"
    destination-databricks-update:
      properties:
        accept_terms:
          default: false
          description: "You must agree to the Databricks JDBC Driver <a href=\"https://databricks.com/jdbc-odbc-driver-license\"\
            >Terms & Conditions</a> to use this connector."
          order: 1
          title: "Agree to the Databricks JDBC Driver Terms & Conditions"
          type: "boolean"
        authentication:
          default: "OAUTH"
          description: "Authentication mechanism for Staging files and running queries"
          oneOf:
          - properties:
              auth_type:
                const: "OAUTH"
                order: 0
                type: "string"
                enum:
                - "OAUTH"
              client_id:
                order: 1
                type: "string"
              secret:
                airbyte_secret: true
                order: 2
                type: "string"
            required:
            - "auth_type"
            - "client_id"
            - "secret"
            title: "OAuth2 (Recommended)"
          - properties:
              auth_type:
                const: "BASIC"
                order: 0
                type: "string"
                enum:
                - "BASIC"
              personal_access_token:
                airbyte_secret: true
                order: 1
                type: "string"
            required:
            - "auth_type"
            - "personal_access_token"
            title: "Personal Access Token"
          order: 8
          title: "Authentication"
          type: "object"
        database:
          description: "The name of the unity catalog for the database"
          order: 5
          title: "Databricks Unity Catalog Name"
          type: "string"
        hostname:
          description: "Databricks Cluster Server Hostname."
          examples:
          - "abc-12345678-wxyz.cloud.databricks.com"
          order: 2
          title: "Server Hostname"
          type: "string"
        http_path:
          description: "Databricks Cluster HTTP Path."
          examples:
          - "sql/1.0/warehouses/0000-1111111-abcd90"
          order: 3
          title: "HTTP Path"
          type: "string"
        port:
          default: "443"
          description: "Databricks Cluster Port."
          examples:
          - "443"
          order: 4
          title: "Port"
          type: "string"
        purge_staging_data:
          default: true
          description: "Default to 'true'. Switch it to 'false' for debugging purpose."
          order: 9
          title: "Purge Staging Files and Tables"
          type: "boolean"
        raw_schema_override:
          default: "airbyte_internal"
          description: "The schema to write raw tables into (default: airbyte_internal)"
          order: 10
          title: "Raw Table Schema Name"
          type: "string"
        schema:
          default: "default"
          description: "The default schema tables are written. If not specified otherwise,\
            \ the \"default\" will be used."
          examples:
          - "default"
          order: 6
          title: "Default Schema"
          type: "string"
      required:
      - "accept_terms"
      - "hostname"
      - "http_path"
      - "database"
      - "authentication"
      title: "Databricks Lakehouse Destination Spec"
      type: "object"
    destination-aws-datalake:
      properties:
        aws_account_id:
          description: "target aws account id"
          examples:
          - "111111111111"
          order: 1
          title: "AWS Account Id"
          type: "string"
        bucket_name:
          description: "The name of the S3 bucket. Read more <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html\"\
            >here</a>."
          order: 4
          title: "S3 Bucket Name"
          type: "string"
        bucket_prefix:
          description: "S3 prefix"
          order: 5
          title: "Target S3 Bucket Prefix"
          type: "string"
        credentials:
          description: "Choose How to Authenticate to AWS."
          oneOf:
          - properties:
              credentials_title:
                const: "IAM Role"
                default: "IAM Role"
                description: "Name of the credentials"
                enum:
                - "IAM Role"
                order: 0
                title: "Credentials Title"
                type: "string"
              role_arn:
                airbyte_secret: false
                description: "Will assume this role to write data to s3"
                title: "Target Role Arn"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "role_arn"
            - "credentials_title"
            title: "IAM Role"
            type: "object"
          - properties:
              aws_access_key_id:
                airbyte_secret: true
                description: "AWS User Access Key Id"
                title: "Access Key Id"
                type: "string"
                x-speakeasy-param-sensitive: true
              aws_secret_access_key:
                airbyte_secret: true
                description: "Secret Access Key"
                title: "Secret Access Key"
                type: "string"
                x-speakeasy-param-sensitive: true
              credentials_title:
                const: "IAM User"
                default: "IAM User"
                description: "Name of the credentials"
                enum:
                - "IAM User"
                order: 0
                title: "Credentials Title"
                type: "string"
            required:
            - "credentials_title"
            - "aws_access_key_id"
            - "aws_secret_access_key"
            title: "IAM User"
            type: "object"
          order: 2
          title: "Authentication mode"
          type: "object"
        format:
          description: "Format of the data output."
          oneOf:
          - properties:
              compression_codec:
                default: "UNCOMPRESSED"
                description: "The compression algorithm used to compress data."
                enum:
                - "UNCOMPRESSED"
                - "GZIP"
                title: "Compression Codec (Optional)"
                type: "string"
              format_type:
                default: "JSONL"
                enum:
                - "JSONL"
                title: "Format Type *"
                type: "string"
            required:
            - "format_type"
            title: "JSON Lines: Newline-delimited JSON"
          - properties:
              compression_codec:
                default: "SNAPPY"
                description: "The compression algorithm used to compress data."
                enum:
                - "UNCOMPRESSED"
                - "SNAPPY"
                - "GZIP"
                - "ZSTD"
                title: "Compression Codec (Optional)"
                type: "string"
              format_type:
                default: "Parquet"
                enum:
                - "Parquet"
                title: "Format Type *"
                type: "string"
            required:
            - "format_type"
            title: "Parquet: Columnar Storage"
          order: 10
          title: "Output Format *"
          type: "object"
        glue_catalog_float_as_decimal:
          default: false
          description: "Cast float/double as decimal(38,18). This can help achieve\
            \ higher accuracy and represent numbers correctly as received from the\
            \ source."
          order: 12
          title: "Glue Catalog: Float as Decimal"
          type: "boolean"
        lakeformation_database_default_tag_key:
          description: "Add a default tag key to databases created by this destination"
          examples:
          - "pii_level"
          order: 7
          title: "Lake Formation Database Tag Key"
          type: "string"
        lakeformation_database_default_tag_values:
          description: "Add default values for the `Tag Key` to databases created\
            \ by this destination. Comma separate for multiple values."
          examples:
          - "private,public"
          order: 8
          title: "Lake Formation Database Tag Values"
          type: "string"
        lakeformation_database_name:
          description: "The default database this destination will use to create tables\
            \ in per stream. Can be changed per connection by customizing the namespace."
          order: 6
          title: "Lake Formation Database Name"
          type: "string"
        lakeformation_governed_tables:
          default: false
          description: "Whether to create tables as LF governed tables."
          order: 9
          title: "Lake Formation Governed Tables"
          type: "boolean"
        partitioning:
          default: "NO PARTITIONING"
          description: "Partition data by cursor fields when a cursor field is a date"
          enum:
          - "NO PARTITIONING"
          - "DATE"
          - "YEAR"
          - "MONTH"
          - "DAY"
          - "YEAR/MONTH"
          - "YEAR/MONTH/DAY"
          order: 11
          title: "Choose how to partition data"
          type: "string"
        region:
          default: ""
          description: "The region of the S3 bucket. See <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\"\
            >here</a> for all region codes."
          enum:
          - ""
          - "af-south-1"
          - "ap-east-1"
          - "ap-northeast-1"
          - "ap-northeast-2"
          - "ap-northeast-3"
          - "ap-south-1"
          - "ap-south-2"
          - "ap-southeast-1"
          - "ap-southeast-2"
          - "ap-southeast-3"
          - "ap-southeast-4"
          - "ca-central-1"
          - "ca-west-1"
          - "cn-north-1"
          - "cn-northwest-1"
          - "eu-central-1"
          - "eu-central-2"
          - "eu-north-1"
          - "eu-south-1"
          - "eu-south-2"
          - "eu-west-1"
          - "eu-west-2"
          - "eu-west-3"
          - "il-central-1"
          - "me-central-1"
          - "me-south-1"
          - "sa-east-1"
          - "us-east-1"
          - "us-east-2"
          - "us-gov-east-1"
          - "us-gov-west-1"
          - "us-west-1"
          - "us-west-2"
          order: 3
          title: "S3 Bucket Region"
          type: "string"
        destinationType:
          title: "aws-datalake"
          const: "aws-datalake"
          enum:
          - "aws-datalake"
          order: 0
          type: "string"
      required:
      - "credentials"
      - "region"
      - "bucket_name"
      - "lakeformation_database_name"
      - "destinationType"
      title: "AWS Datalake Destination Spec"
      type: "object"
    destination-aws-datalake-update:
      properties:
        aws_account_id:
          description: "target aws account id"
          examples:
          - "111111111111"
          order: 1
          title: "AWS Account Id"
          type: "string"
        bucket_name:
          description: "The name of the S3 bucket. Read more <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html\"\
            >here</a>."
          order: 4
          title: "S3 Bucket Name"
          type: "string"
        bucket_prefix:
          description: "S3 prefix"
          order: 5
          title: "Target S3 Bucket Prefix"
          type: "string"
        credentials:
          description: "Choose How to Authenticate to AWS."
          oneOf:
          - properties:
              credentials_title:
                const: "IAM Role"
                default: "IAM Role"
                description: "Name of the credentials"
                enum:
                - "IAM Role"
                order: 0
                title: "Credentials Title"
                type: "string"
              role_arn:
                airbyte_secret: false
                description: "Will assume this role to write data to s3"
                title: "Target Role Arn"
                type: "string"
            required:
            - "role_arn"
            - "credentials_title"
            title: "IAM Role"
            type: "object"
          - properties:
              aws_access_key_id:
                airbyte_secret: true
                description: "AWS User Access Key Id"
                title: "Access Key Id"
                type: "string"
              aws_secret_access_key:
                airbyte_secret: true
                description: "Secret Access Key"
                title: "Secret Access Key"
                type: "string"
              credentials_title:
                const: "IAM User"
                default: "IAM User"
                description: "Name of the credentials"
                enum:
                - "IAM User"
                order: 0
                title: "Credentials Title"
                type: "string"
            required:
            - "credentials_title"
            - "aws_access_key_id"
            - "aws_secret_access_key"
            title: "IAM User"
            type: "object"
          order: 2
          title: "Authentication mode"
          type: "object"
        format:
          description: "Format of the data output."
          oneOf:
          - properties:
              compression_codec:
                default: "UNCOMPRESSED"
                description: "The compression algorithm used to compress data."
                enum:
                - "UNCOMPRESSED"
                - "GZIP"
                title: "Compression Codec (Optional)"
                type: "string"
              format_type:
                default: "JSONL"
                enum:
                - "JSONL"
                title: "Format Type *"
                type: "string"
            required:
            - "format_type"
            title: "JSON Lines: Newline-delimited JSON"
          - properties:
              compression_codec:
                default: "SNAPPY"
                description: "The compression algorithm used to compress data."
                enum:
                - "UNCOMPRESSED"
                - "SNAPPY"
                - "GZIP"
                - "ZSTD"
                title: "Compression Codec (Optional)"
                type: "string"
              format_type:
                default: "Parquet"
                enum:
                - "Parquet"
                title: "Format Type *"
                type: "string"
            required:
            - "format_type"
            title: "Parquet: Columnar Storage"
          order: 10
          title: "Output Format *"
          type: "object"
        glue_catalog_float_as_decimal:
          default: false
          description: "Cast float/double as decimal(38,18). This can help achieve\
            \ higher accuracy and represent numbers correctly as received from the\
            \ source."
          order: 12
          title: "Glue Catalog: Float as Decimal"
          type: "boolean"
        lakeformation_database_default_tag_key:
          description: "Add a default tag key to databases created by this destination"
          examples:
          - "pii_level"
          order: 7
          title: "Lake Formation Database Tag Key"
          type: "string"
        lakeformation_database_default_tag_values:
          description: "Add default values for the `Tag Key` to databases created\
            \ by this destination. Comma separate for multiple values."
          examples:
          - "private,public"
          order: 8
          title: "Lake Formation Database Tag Values"
          type: "string"
        lakeformation_database_name:
          description: "The default database this destination will use to create tables\
            \ in per stream. Can be changed per connection by customizing the namespace."
          order: 6
          title: "Lake Formation Database Name"
          type: "string"
        lakeformation_governed_tables:
          default: false
          description: "Whether to create tables as LF governed tables."
          order: 9
          title: "Lake Formation Governed Tables"
          type: "boolean"
        partitioning:
          default: "NO PARTITIONING"
          description: "Partition data by cursor fields when a cursor field is a date"
          enum:
          - "NO PARTITIONING"
          - "DATE"
          - "YEAR"
          - "MONTH"
          - "DAY"
          - "YEAR/MONTH"
          - "YEAR/MONTH/DAY"
          order: 11
          title: "Choose how to partition data"
          type: "string"
        region:
          default: ""
          description: "The region of the S3 bucket. See <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\"\
            >here</a> for all region codes."
          enum:
          - ""
          - "af-south-1"
          - "ap-east-1"
          - "ap-northeast-1"
          - "ap-northeast-2"
          - "ap-northeast-3"
          - "ap-south-1"
          - "ap-south-2"
          - "ap-southeast-1"
          - "ap-southeast-2"
          - "ap-southeast-3"
          - "ap-southeast-4"
          - "ca-central-1"
          - "ca-west-1"
          - "cn-north-1"
          - "cn-northwest-1"
          - "eu-central-1"
          - "eu-central-2"
          - "eu-north-1"
          - "eu-south-1"
          - "eu-south-2"
          - "eu-west-1"
          - "eu-west-2"
          - "eu-west-3"
          - "il-central-1"
          - "me-central-1"
          - "me-south-1"
          - "sa-east-1"
          - "us-east-1"
          - "us-east-2"
          - "us-gov-east-1"
          - "us-gov-west-1"
          - "us-west-1"
          - "us-west-2"
          order: 3
          title: "S3 Bucket Region"
          type: "string"
      required:
      - "credentials"
      - "region"
      - "bucket_name"
      - "lakeformation_database_name"
      title: "AWS Datalake Destination Spec"
      type: "object"
    destination-astra:
      description: "The configuration model for the Vector DB based destinations.\
        \ This model is used to generate the UI for the destination configuration,\n\
        as well as to provide type safety for the configuration passed to the destination.\n\
        \nThe configuration model is composed of four parts:\n* Processing configuration\n\
        * Embedding configuration\n* Indexing configuration\n* Advanced configuration\n\
        \nProcessing, embedding and advanced configuration are provided by this base\
        \ class, while the indexing configuration is provided by the destination connector\
        \ in the sub class."
      groups:
      - id: "processing"
        title: "Processing"
      - id: "embedding"
        title: "Embedding"
      - id: "indexing"
        title: "Indexing"
      - id: "advanced"
        title: "Advanced"
      properties:
        embedding:
          description: "Embedding configuration"
          group: "embedding"
          oneOf:
          - description: "Use the OpenAI API to embed text. This option is using the\
              \ text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              mode:
                const: "openai"
                default: "openai"
                enum:
                - "openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                title: "OpenAI API key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "openai_key"
            - "mode"
            title: "OpenAI"
            type: "object"
          - description: "Use the Cohere API to embed text."
            properties:
              cohere_key:
                airbyte_secret: true
                title: "Cohere API key"
                type: "string"
                x-speakeasy-param-sensitive: true
              mode:
                const: "cohere"
                default: "cohere"
                enum:
                - "cohere"
                title: "Mode"
                type: "string"
            required:
            - "cohere_key"
            - "mode"
            title: "Cohere"
            type: "object"
          - description: "Use a fake embedding made out of random vectors with 1536\
              \ embedding dimensions. This is useful for testing the data pipeline\
              \ without incurring any costs."
            properties:
              mode:
                const: "fake"
                default: "fake"
                enum:
                - "fake"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "Fake"
            type: "object"
          - description: "Use the Azure-hosted OpenAI API to embed text. This option\
              \ is using the text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              api_base:
                description: "The base URL for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "https://your-resource-name.openai.azure.com"
                title: "Resource base URL"
                type: "string"
              deployment:
                description: "The deployment for your Azure OpenAI resource.  You\
                  \ can find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "your-resource-name"
                title: "Deployment"
                type: "string"
              mode:
                const: "azure_openai"
                default: "azure_openai"
                enum:
                - "azure_openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                description: "The API key for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                title: "Azure OpenAI API key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "openai_key"
            - "api_base"
            - "deployment"
            - "mode"
            title: "Azure OpenAI"
            type: "object"
          - description: "Use a service that's compatible with the OpenAI API to embed\
              \ text."
            properties:
              api_key:
                airbyte_secret: true
                default: ""
                title: "API key"
                type: "string"
                x-speakeasy-param-sensitive: true
              base_url:
                description: "The base URL for your OpenAI-compatible service"
                examples:
                - "https://your-service-name.com"
                title: "Base URL"
                type: "string"
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              mode:
                const: "openai_compatible"
                default: "openai_compatible"
                enum:
                - "openai_compatible"
                title: "Mode"
                type: "string"
              model_name:
                default: "text-embedding-ada-002"
                description: "The name of the model to use for embedding"
                examples:
                - "text-embedding-ada-002"
                title: "Model name"
                type: "string"
            required:
            - "base_url"
            - "dimensions"
            - "mode"
            title: "OpenAI-compatible"
            type: "object"
          title: "Embedding"
          type: "object"
        indexing:
          description: "Astra DB gives developers the APIs, real-time data and ecosystem\
            \ integrations to put accurate RAG and Gen AI apps with fewer hallucinations\
            \ in production."
          group: "indexing"
          properties:
            astra_db_app_token:
              airbyte_secret: true
              description: "The application token authorizes a user to connect to\
                \ a specific Astra DB database. It is created when the user clicks\
                \ the Generate Token button on the Overview tab of the Database page\
                \ in the Astra UI."
              title: "Astra DB Application Token"
              type: "string"
              x-speakeasy-param-sensitive: true
            astra_db_endpoint:
              description: "The endpoint specifies which Astra DB database queries\
                \ are sent to. It can be copied from the Database Details section\
                \ of the Overview tab of the Database page in the Astra UI."
              examples:
              - "https://8292d414-dd1b-4c33-8431-e838bedc04f7-us-east1.apps.astra.datastax.com"
              pattern: "^https:\\/\\/([a-z]|[0-9]){8}-([a-z]|[0-9]){4}-([a-z]|[0-9]){4}-([a-z]|[0-9]){4}-([a-z]|[0-9]){12}-[^\\\
                .]*?\\.apps\\.astra\\.datastax\\.com"
              title: "Astra DB Endpoint"
              type: "string"
            astra_db_keyspace:
              description: "Keyspaces (or Namespaces) serve as containers for organizing\
                \ data within a database. You can create a new keyspace uisng the\
                \ Data Explorer tab in the Astra UI. The keyspace default_keyspace\
                \ is created for you when you create a Vector Database in Astra DB."
              title: "Astra DB Keyspace"
              type: "string"
            collection:
              description: "Collections hold data. They are analagous to tables in\
                \ traditional Cassandra terminology. This tool will create the collection\
                \ with the provided name automatically if it does not already exist.\
                \ Alternatively, you can create one thorugh the Data Explorer tab\
                \ in the Astra UI."
              title: "Astra DB collection"
              type: "string"
          required:
          - "astra_db_app_token"
          - "astra_db_endpoint"
          - "astra_db_keyspace"
          - "collection"
          title: "Indexing"
          type: "object"
        omit_raw_text:
          default: false
          description: "Do not store the text that gets embedded along with the vector\
            \ and the metadata in the destination. If set to true, only the vector\
            \ and the metadata will be stored - in this case raw text for LLM use\
            \ cases needs to be retrieved from another source."
          group: "advanced"
          title: "Do not store raw text"
          type: "boolean"
        processing:
          group: "processing"
          properties:
            chunk_overlap:
              default: 0
              description: "Size of overlap between chunks in tokens to store in vector\
                \ store to better capture relevant context"
              title: "Chunk overlap"
              type: "integer"
            chunk_size:
              description: "Size of chunks in tokens to store in vector store (make\
                \ sure it is not too big for the context if your LLM)"
              maximum: 8191
              minimum: 1
              title: "Chunk size"
              type: "integer"
            field_name_mappings:
              default: []
              description: "List of fields to rename. Not applicable for nested fields,\
                \ but can be used to rename fields already flattened via dot notation."
              items:
                properties:
                  from_field:
                    description: "The field name in the source"
                    title: "From field name"
                    type: "string"
                  to_field:
                    description: "The field name to use in the destination"
                    title: "To field name"
                    type: "string"
                required:
                - "from_field"
                - "to_field"
                title: "FieldNameMappingConfigModel"
                type: "object"
              title: "Field name mappings"
              type: "array"
            metadata_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be stored as\
                \ metadata. The field list is applied to all streams in the same way\
                \ and non-existing fields are ignored. If none are defined, all fields\
                \ are considered metadata fields. When specifying text fields, you\
                \ can access nested fields in the record by using dot notation, e.g.\
                \ `user.name` will access the `name` field in the `user` object. It's\
                \ also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array. When specifying nested paths, all matching\
                \ values are flattened into an array set to a field named by the path."
              examples:
              - "age"
              - "user"
              - "user.name"
              items:
                type: "string"
              title: "Fields to store as metadata"
              type: "array"
            text_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be used to calculate\
                \ the embedding. The field list is applied to all streams in the same\
                \ way and non-existing fields are ignored. If none are defined, all\
                \ fields are considered text fields. When specifying text fields,\
                \ you can access nested fields in the record by using dot notation,\
                \ e.g. `user.name` will access the `name` field in the `user` object.\
                \ It's also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array."
              examples:
              - "text"
              - "user.name"
              - "users.*.name"
              items:
                type: "string"
              title: "Text fields to embed"
              type: "array"
            text_splitter:
              description: "Split text fields into chunks based on the specified method."
              oneOf:
              - description: "Split the text by the list of separators until the chunk\
                  \ size is reached, using the earlier mentioned separators where\
                  \ possible. This is useful for splitting text fields by paragraphs,\
                  \ sentences, words, etc."
                properties:
                  keep_separator:
                    default: false
                    description: "Whether to keep the separator in the resulting chunks"
                    title: "Keep separator"
                    type: "boolean"
                  mode:
                    const: "separator"
                    default: "separator"
                    enum:
                    - "separator"
                    title: "Mode"
                    type: "string"
                  separators:
                    default:
                    - "\"\\n\\n\""
                    - "\"\\n\""
                    - "\" \""
                    - "\"\""
                    description: "List of separator strings to split text fields by.\
                      \ The separator itself needs to be wrapped in double quotes,\
                      \ e.g. to split by the dot character, use \".\". To split by\
                      \ a newline, use \"\\n\"."
                    items:
                      type: "string"
                    title: "Separators"
                    type: "array"
                required:
                - "mode"
                title: "By Separator"
                type: "object"
              - description: "Split the text by Markdown headers down to the specified\
                  \ header level. If the chunk size fits multiple sections, they will\
                  \ be combined into a single chunk."
                properties:
                  mode:
                    const: "markdown"
                    default: "markdown"
                    enum:
                    - "markdown"
                    title: "Mode"
                    type: "string"
                  split_level:
                    default: 1
                    description: "Level of markdown headers to split text fields by.\
                      \ Headings down to the specified level will be used as split\
                      \ points"
                    maximum: 6
                    minimum: 1
                    title: "Split level"
                    type: "integer"
                required:
                - "mode"
                title: "By Markdown header"
                type: "object"
              - description: "Split the text by suitable delimiters based on the programming\
                  \ language. This is useful for splitting code into chunks."
                properties:
                  language:
                    description: "Split code in suitable places based on the programming\
                      \ language"
                    enum:
                    - "cpp"
                    - "go"
                    - "java"
                    - "js"
                    - "php"
                    - "proto"
                    - "python"
                    - "rst"
                    - "ruby"
                    - "rust"
                    - "scala"
                    - "swift"
                    - "markdown"
                    - "latex"
                    - "html"
                    - "sol"
                    title: "Language"
                    type: "string"
                  mode:
                    const: "code"
                    default: "code"
                    enum:
                    - "code"
                    title: "Mode"
                    type: "string"
                required:
                - "language"
                - "mode"
                title: "By Programming Language"
                type: "object"
              title: "Text splitter"
              type: "object"
          required:
          - "chunk_size"
          title: "ProcessingConfigModel"
          type: "object"
        destinationType:
          title: "astra"
          const: "astra"
          enum:
          - "astra"
          order: 0
          type: "string"
      required:
      - "embedding"
      - "processing"
      - "indexing"
      - "destinationType"
      title: "Destination Config"
      type: "object"
    destination-astra-update:
      description: "The configuration model for the Vector DB based destinations.\
        \ This model is used to generate the UI for the destination configuration,\n\
        as well as to provide type safety for the configuration passed to the destination.\n\
        \nThe configuration model is composed of four parts:\n* Processing configuration\n\
        * Embedding configuration\n* Indexing configuration\n* Advanced configuration\n\
        \nProcessing, embedding and advanced configuration are provided by this base\
        \ class, while the indexing configuration is provided by the destination connector\
        \ in the sub class."
      groups:
      - id: "processing"
        title: "Processing"
      - id: "embedding"
        title: "Embedding"
      - id: "indexing"
        title: "Indexing"
      - id: "advanced"
        title: "Advanced"
      properties:
        embedding:
          description: "Embedding configuration"
          group: "embedding"
          oneOf:
          - description: "Use the OpenAI API to embed text. This option is using the\
              \ text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              mode:
                const: "openai"
                default: "openai"
                enum:
                - "openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                title: "OpenAI API key"
                type: "string"
            required:
            - "openai_key"
            - "mode"
            title: "OpenAI"
            type: "object"
          - description: "Use the Cohere API to embed text."
            properties:
              cohere_key:
                airbyte_secret: true
                title: "Cohere API key"
                type: "string"
              mode:
                const: "cohere"
                default: "cohere"
                enum:
                - "cohere"
                title: "Mode"
                type: "string"
            required:
            - "cohere_key"
            - "mode"
            title: "Cohere"
            type: "object"
          - description: "Use a fake embedding made out of random vectors with 1536\
              \ embedding dimensions. This is useful for testing the data pipeline\
              \ without incurring any costs."
            properties:
              mode:
                const: "fake"
                default: "fake"
                enum:
                - "fake"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "Fake"
            type: "object"
          - description: "Use the Azure-hosted OpenAI API to embed text. This option\
              \ is using the text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              api_base:
                description: "The base URL for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "https://your-resource-name.openai.azure.com"
                title: "Resource base URL"
                type: "string"
              deployment:
                description: "The deployment for your Azure OpenAI resource.  You\
                  \ can find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "your-resource-name"
                title: "Deployment"
                type: "string"
              mode:
                const: "azure_openai"
                default: "azure_openai"
                enum:
                - "azure_openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                description: "The API key for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                title: "Azure OpenAI API key"
                type: "string"
            required:
            - "openai_key"
            - "api_base"
            - "deployment"
            - "mode"
            title: "Azure OpenAI"
            type: "object"
          - description: "Use a service that's compatible with the OpenAI API to embed\
              \ text."
            properties:
              api_key:
                airbyte_secret: true
                default: ""
                title: "API key"
                type: "string"
              base_url:
                description: "The base URL for your OpenAI-compatible service"
                examples:
                - "https://your-service-name.com"
                title: "Base URL"
                type: "string"
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              mode:
                const: "openai_compatible"
                default: "openai_compatible"
                enum:
                - "openai_compatible"
                title: "Mode"
                type: "string"
              model_name:
                default: "text-embedding-ada-002"
                description: "The name of the model to use for embedding"
                examples:
                - "text-embedding-ada-002"
                title: "Model name"
                type: "string"
            required:
            - "base_url"
            - "dimensions"
            - "mode"
            title: "OpenAI-compatible"
            type: "object"
          title: "Embedding"
          type: "object"
        indexing:
          description: "Astra DB gives developers the APIs, real-time data and ecosystem\
            \ integrations to put accurate RAG and Gen AI apps with fewer hallucinations\
            \ in production."
          group: "indexing"
          properties:
            astra_db_app_token:
              airbyte_secret: true
              description: "The application token authorizes a user to connect to\
                \ a specific Astra DB database. It is created when the user clicks\
                \ the Generate Token button on the Overview tab of the Database page\
                \ in the Astra UI."
              title: "Astra DB Application Token"
              type: "string"
            astra_db_endpoint:
              description: "The endpoint specifies which Astra DB database queries\
                \ are sent to. It can be copied from the Database Details section\
                \ of the Overview tab of the Database page in the Astra UI."
              examples:
              - "https://8292d414-dd1b-4c33-8431-e838bedc04f7-us-east1.apps.astra.datastax.com"
              pattern: "^https:\\/\\/([a-z]|[0-9]){8}-([a-z]|[0-9]){4}-([a-z]|[0-9]){4}-([a-z]|[0-9]){4}-([a-z]|[0-9]){12}-[^\\\
                .]*?\\.apps\\.astra\\.datastax\\.com"
              title: "Astra DB Endpoint"
              type: "string"
            astra_db_keyspace:
              description: "Keyspaces (or Namespaces) serve as containers for organizing\
                \ data within a database. You can create a new keyspace uisng the\
                \ Data Explorer tab in the Astra UI. The keyspace default_keyspace\
                \ is created for you when you create a Vector Database in Astra DB."
              title: "Astra DB Keyspace"
              type: "string"
            collection:
              description: "Collections hold data. They are analagous to tables in\
                \ traditional Cassandra terminology. This tool will create the collection\
                \ with the provided name automatically if it does not already exist.\
                \ Alternatively, you can create one thorugh the Data Explorer tab\
                \ in the Astra UI."
              title: "Astra DB collection"
              type: "string"
          required:
          - "astra_db_app_token"
          - "astra_db_endpoint"
          - "astra_db_keyspace"
          - "collection"
          title: "Indexing"
          type: "object"
        omit_raw_text:
          default: false
          description: "Do not store the text that gets embedded along with the vector\
            \ and the metadata in the destination. If set to true, only the vector\
            \ and the metadata will be stored - in this case raw text for LLM use\
            \ cases needs to be retrieved from another source."
          group: "advanced"
          title: "Do not store raw text"
          type: "boolean"
        processing:
          group: "processing"
          properties:
            chunk_overlap:
              default: 0
              description: "Size of overlap between chunks in tokens to store in vector\
                \ store to better capture relevant context"
              title: "Chunk overlap"
              type: "integer"
            chunk_size:
              description: "Size of chunks in tokens to store in vector store (make\
                \ sure it is not too big for the context if your LLM)"
              maximum: 8191
              minimum: 1
              title: "Chunk size"
              type: "integer"
            field_name_mappings:
              default: []
              description: "List of fields to rename. Not applicable for nested fields,\
                \ but can be used to rename fields already flattened via dot notation."
              items:
                properties:
                  from_field:
                    description: "The field name in the source"
                    title: "From field name"
                    type: "string"
                  to_field:
                    description: "The field name to use in the destination"
                    title: "To field name"
                    type: "string"
                required:
                - "from_field"
                - "to_field"
                title: "FieldNameMappingConfigModel"
                type: "object"
              title: "Field name mappings"
              type: "array"
            metadata_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be stored as\
                \ metadata. The field list is applied to all streams in the same way\
                \ and non-existing fields are ignored. If none are defined, all fields\
                \ are considered metadata fields. When specifying text fields, you\
                \ can access nested fields in the record by using dot notation, e.g.\
                \ `user.name` will access the `name` field in the `user` object. It's\
                \ also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array. When specifying nested paths, all matching\
                \ values are flattened into an array set to a field named by the path."
              examples:
              - "age"
              - "user"
              - "user.name"
              items:
                type: "string"
              title: "Fields to store as metadata"
              type: "array"
            text_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be used to calculate\
                \ the embedding. The field list is applied to all streams in the same\
                \ way and non-existing fields are ignored. If none are defined, all\
                \ fields are considered text fields. When specifying text fields,\
                \ you can access nested fields in the record by using dot notation,\
                \ e.g. `user.name` will access the `name` field in the `user` object.\
                \ It's also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array."
              examples:
              - "text"
              - "user.name"
              - "users.*.name"
              items:
                type: "string"
              title: "Text fields to embed"
              type: "array"
            text_splitter:
              description: "Split text fields into chunks based on the specified method."
              oneOf:
              - description: "Split the text by the list of separators until the chunk\
                  \ size is reached, using the earlier mentioned separators where\
                  \ possible. This is useful for splitting text fields by paragraphs,\
                  \ sentences, words, etc."
                properties:
                  keep_separator:
                    default: false
                    description: "Whether to keep the separator in the resulting chunks"
                    title: "Keep separator"
                    type: "boolean"
                  mode:
                    const: "separator"
                    default: "separator"
                    enum:
                    - "separator"
                    title: "Mode"
                    type: "string"
                  separators:
                    default:
                    - "\"\\n\\n\""
                    - "\"\\n\""
                    - "\" \""
                    - "\"\""
                    description: "List of separator strings to split text fields by.\
                      \ The separator itself needs to be wrapped in double quotes,\
                      \ e.g. to split by the dot character, use \".\". To split by\
                      \ a newline, use \"\\n\"."
                    items:
                      type: "string"
                    title: "Separators"
                    type: "array"
                required:
                - "mode"
                title: "By Separator"
                type: "object"
              - description: "Split the text by Markdown headers down to the specified\
                  \ header level. If the chunk size fits multiple sections, they will\
                  \ be combined into a single chunk."
                properties:
                  mode:
                    const: "markdown"
                    default: "markdown"
                    enum:
                    - "markdown"
                    title: "Mode"
                    type: "string"
                  split_level:
                    default: 1
                    description: "Level of markdown headers to split text fields by.\
                      \ Headings down to the specified level will be used as split\
                      \ points"
                    maximum: 6
                    minimum: 1
                    title: "Split level"
                    type: "integer"
                required:
                - "mode"
                title: "By Markdown header"
                type: "object"
              - description: "Split the text by suitable delimiters based on the programming\
                  \ language. This is useful for splitting code into chunks."
                properties:
                  language:
                    description: "Split code in suitable places based on the programming\
                      \ language"
                    enum:
                    - "cpp"
                    - "go"
                    - "java"
                    - "js"
                    - "php"
                    - "proto"
                    - "python"
                    - "rst"
                    - "ruby"
                    - "rust"
                    - "scala"
                    - "swift"
                    - "markdown"
                    - "latex"
                    - "html"
                    - "sol"
                    title: "Language"
                    type: "string"
                  mode:
                    const: "code"
                    default: "code"
                    enum:
                    - "code"
                    title: "Mode"
                    type: "string"
                required:
                - "language"
                - "mode"
                title: "By Programming Language"
                type: "object"
              title: "Text splitter"
              type: "object"
          required:
          - "chunk_size"
          title: "ProcessingConfigModel"
          type: "object"
      required:
      - "embedding"
      - "processing"
      - "indexing"
      title: "Destination Config"
      type: "object"
    destination-pinecone:
      description: "The configuration model for the Vector DB based destinations.\
        \ This model is used to generate the UI for the destination configuration,\n\
        as well as to provide type safety for the configuration passed to the destination.\n\
        \nThe configuration model is composed of four parts:\n* Processing configuration\n\
        * Embedding configuration\n* Indexing configuration\n* Advanced configuration\n\
        \nProcessing, embedding and advanced configuration are provided by this base\
        \ class, while the indexing configuration is provided by the destination connector\
        \ in the sub class."
      groups:
      - id: "processing"
        title: "Processing"
      - id: "embedding"
        title: "Embedding"
      - id: "indexing"
        title: "Indexing"
      - id: "advanced"
        title: "Advanced"
      properties:
        embedding:
          description: "Embedding configuration"
          group: "embedding"
          oneOf:
          - description: "Use the OpenAI API to embed text. This option is using the\
              \ text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              mode:
                const: "openai"
                default: "openai"
                enum:
                - "openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                title: "OpenAI API key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "openai_key"
            - "mode"
            title: "OpenAI"
            type: "object"
          - description: "Use the Cohere API to embed text."
            properties:
              cohere_key:
                airbyte_secret: true
                title: "Cohere API key"
                type: "string"
                x-speakeasy-param-sensitive: true
              mode:
                const: "cohere"
                default: "cohere"
                enum:
                - "cohere"
                title: "Mode"
                type: "string"
            required:
            - "cohere_key"
            - "mode"
            title: "Cohere"
            type: "object"
          - description: "Use a fake embedding made out of random vectors with 1536\
              \ embedding dimensions. This is useful for testing the data pipeline\
              \ without incurring any costs."
            properties:
              mode:
                const: "fake"
                default: "fake"
                enum:
                - "fake"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "Fake"
            type: "object"
          - description: "Use the Azure-hosted OpenAI API to embed text. This option\
              \ is using the text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              api_base:
                description: "The base URL for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "https://your-resource-name.openai.azure.com"
                title: "Resource base URL"
                type: "string"
              deployment:
                description: "The deployment for your Azure OpenAI resource.  You\
                  \ can find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "your-resource-name"
                title: "Deployment"
                type: "string"
              mode:
                const: "azure_openai"
                default: "azure_openai"
                enum:
                - "azure_openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                description: "The API key for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                title: "Azure OpenAI API key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "openai_key"
            - "api_base"
            - "deployment"
            - "mode"
            title: "Azure OpenAI"
            type: "object"
          - description: "Use a service that's compatible with the OpenAI API to embed\
              \ text."
            properties:
              api_key:
                airbyte_secret: true
                default: ""
                title: "API key"
                type: "string"
                x-speakeasy-param-sensitive: true
              base_url:
                description: "The base URL for your OpenAI-compatible service"
                examples:
                - "https://your-service-name.com"
                title: "Base URL"
                type: "string"
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              mode:
                const: "openai_compatible"
                default: "openai_compatible"
                enum:
                - "openai_compatible"
                title: "Mode"
                type: "string"
              model_name:
                default: "text-embedding-ada-002"
                description: "The name of the model to use for embedding"
                examples:
                - "text-embedding-ada-002"
                title: "Model name"
                type: "string"
            required:
            - "base_url"
            - "dimensions"
            - "mode"
            title: "OpenAI-compatible"
            type: "object"
          title: "Embedding"
          type: "object"
        indexing:
          description: "Pinecone is a popular vector store that can be used to store\
            \ and retrieve embeddings."
          group: "indexing"
          properties:
            index:
              description: "Pinecone index in your project to load data into"
              title: "Index"
              type: "string"
            pinecone_environment:
              description: "Pinecone Cloud environment to use"
              examples:
              - "us-west1-gcp"
              - "gcp-starter"
              title: "Pinecone Environment"
              type: "string"
            pinecone_key:
              airbyte_secret: true
              description: "The Pinecone API key to use matching the environment (copy\
                \ from Pinecone console)"
              title: "Pinecone API key"
              type: "string"
              x-speakeasy-param-sensitive: true
          required:
          - "pinecone_key"
          - "pinecone_environment"
          - "index"
          title: "Indexing"
          type: "object"
        omit_raw_text:
          default: false
          description: "Do not store the text that gets embedded along with the vector\
            \ and the metadata in the destination. If set to true, only the vector\
            \ and the metadata will be stored - in this case raw text for LLM use\
            \ cases needs to be retrieved from another source."
          group: "advanced"
          title: "Do not store raw text"
          type: "boolean"
        processing:
          group: "processing"
          properties:
            chunk_overlap:
              default: 0
              description: "Size of overlap between chunks in tokens to store in vector\
                \ store to better capture relevant context"
              title: "Chunk overlap"
              type: "integer"
            chunk_size:
              description: "Size of chunks in tokens to store in vector store (make\
                \ sure it is not too big for the context if your LLM)"
              maximum: 8191
              minimum: 1
              title: "Chunk size"
              type: "integer"
            field_name_mappings:
              default: []
              description: "List of fields to rename. Not applicable for nested fields,\
                \ but can be used to rename fields already flattened via dot notation."
              items:
                properties:
                  from_field:
                    description: "The field name in the source"
                    title: "From field name"
                    type: "string"
                  to_field:
                    description: "The field name to use in the destination"
                    title: "To field name"
                    type: "string"
                required:
                - "from_field"
                - "to_field"
                title: "FieldNameMappingConfigModel"
                type: "object"
              title: "Field name mappings"
              type: "array"
            metadata_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be stored as\
                \ metadata. The field list is applied to all streams in the same way\
                \ and non-existing fields are ignored. If none are defined, all fields\
                \ are considered metadata fields. When specifying text fields, you\
                \ can access nested fields in the record by using dot notation, e.g.\
                \ `user.name` will access the `name` field in the `user` object. It's\
                \ also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array. When specifying nested paths, all matching\
                \ values are flattened into an array set to a field named by the path."
              examples:
              - "age"
              - "user"
              - "user.name"
              items:
                type: "string"
              title: "Fields to store as metadata"
              type: "array"
            text_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be used to calculate\
                \ the embedding. The field list is applied to all streams in the same\
                \ way and non-existing fields are ignored. If none are defined, all\
                \ fields are considered text fields. When specifying text fields,\
                \ you can access nested fields in the record by using dot notation,\
                \ e.g. `user.name` will access the `name` field in the `user` object.\
                \ It's also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array."
              examples:
              - "text"
              - "user.name"
              - "users.*.name"
              items:
                type: "string"
              title: "Text fields to embed"
              type: "array"
            text_splitter:
              description: "Split text fields into chunks based on the specified method."
              oneOf:
              - description: "Split the text by the list of separators until the chunk\
                  \ size is reached, using the earlier mentioned separators where\
                  \ possible. This is useful for splitting text fields by paragraphs,\
                  \ sentences, words, etc."
                properties:
                  keep_separator:
                    default: false
                    description: "Whether to keep the separator in the resulting chunks"
                    title: "Keep separator"
                    type: "boolean"
                  mode:
                    const: "separator"
                    default: "separator"
                    enum:
                    - "separator"
                    title: "Mode"
                    type: "string"
                  separators:
                    default:
                    - "\"\\n\\n\""
                    - "\"\\n\""
                    - "\" \""
                    - "\"\""
                    description: "List of separator strings to split text fields by.\
                      \ The separator itself needs to be wrapped in double quotes,\
                      \ e.g. to split by the dot character, use \".\". To split by\
                      \ a newline, use \"\\n\"."
                    items:
                      type: "string"
                    title: "Separators"
                    type: "array"
                required:
                - "mode"
                title: "By Separator"
                type: "object"
              - description: "Split the text by Markdown headers down to the specified\
                  \ header level. If the chunk size fits multiple sections, they will\
                  \ be combined into a single chunk."
                properties:
                  mode:
                    const: "markdown"
                    default: "markdown"
                    enum:
                    - "markdown"
                    title: "Mode"
                    type: "string"
                  split_level:
                    default: 1
                    description: "Level of markdown headers to split text fields by.\
                      \ Headings down to the specified level will be used as split\
                      \ points"
                    maximum: 6
                    minimum: 1
                    title: "Split level"
                    type: "integer"
                required:
                - "mode"
                title: "By Markdown header"
                type: "object"
              - description: "Split the text by suitable delimiters based on the programming\
                  \ language. This is useful for splitting code into chunks."
                properties:
                  language:
                    description: "Split code in suitable places based on the programming\
                      \ language"
                    enum:
                    - "cpp"
                    - "go"
                    - "java"
                    - "js"
                    - "php"
                    - "proto"
                    - "python"
                    - "rst"
                    - "ruby"
                    - "rust"
                    - "scala"
                    - "swift"
                    - "markdown"
                    - "latex"
                    - "html"
                    - "sol"
                    title: "Language"
                    type: "string"
                  mode:
                    const: "code"
                    default: "code"
                    enum:
                    - "code"
                    title: "Mode"
                    type: "string"
                required:
                - "language"
                - "mode"
                title: "By Programming Language"
                type: "object"
              title: "Text splitter"
              type: "object"
          required:
          - "chunk_size"
          title: "ProcessingConfigModel"
          type: "object"
        destinationType:
          title: "pinecone"
          const: "pinecone"
          enum:
          - "pinecone"
          order: 0
          type: "string"
      required:
      - "embedding"
      - "processing"
      - "indexing"
      - "destinationType"
      title: "Destination Config"
      type: "object"
    destination-pinecone-update:
      description: "The configuration model for the Vector DB based destinations.\
        \ This model is used to generate the UI for the destination configuration,\n\
        as well as to provide type safety for the configuration passed to the destination.\n\
        \nThe configuration model is composed of four parts:\n* Processing configuration\n\
        * Embedding configuration\n* Indexing configuration\n* Advanced configuration\n\
        \nProcessing, embedding and advanced configuration are provided by this base\
        \ class, while the indexing configuration is provided by the destination connector\
        \ in the sub class."
      groups:
      - id: "processing"
        title: "Processing"
      - id: "embedding"
        title: "Embedding"
      - id: "indexing"
        title: "Indexing"
      - id: "advanced"
        title: "Advanced"
      properties:
        embedding:
          description: "Embedding configuration"
          group: "embedding"
          oneOf:
          - description: "Use the OpenAI API to embed text. This option is using the\
              \ text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              mode:
                const: "openai"
                default: "openai"
                enum:
                - "openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                title: "OpenAI API key"
                type: "string"
            required:
            - "openai_key"
            - "mode"
            title: "OpenAI"
            type: "object"
          - description: "Use the Cohere API to embed text."
            properties:
              cohere_key:
                airbyte_secret: true
                title: "Cohere API key"
                type: "string"
              mode:
                const: "cohere"
                default: "cohere"
                enum:
                - "cohere"
                title: "Mode"
                type: "string"
            required:
            - "cohere_key"
            - "mode"
            title: "Cohere"
            type: "object"
          - description: "Use a fake embedding made out of random vectors with 1536\
              \ embedding dimensions. This is useful for testing the data pipeline\
              \ without incurring any costs."
            properties:
              mode:
                const: "fake"
                default: "fake"
                enum:
                - "fake"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "Fake"
            type: "object"
          - description: "Use the Azure-hosted OpenAI API to embed text. This option\
              \ is using the text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              api_base:
                description: "The base URL for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "https://your-resource-name.openai.azure.com"
                title: "Resource base URL"
                type: "string"
              deployment:
                description: "The deployment for your Azure OpenAI resource.  You\
                  \ can find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "your-resource-name"
                title: "Deployment"
                type: "string"
              mode:
                const: "azure_openai"
                default: "azure_openai"
                enum:
                - "azure_openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                description: "The API key for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                title: "Azure OpenAI API key"
                type: "string"
            required:
            - "openai_key"
            - "api_base"
            - "deployment"
            - "mode"
            title: "Azure OpenAI"
            type: "object"
          - description: "Use a service that's compatible with the OpenAI API to embed\
              \ text."
            properties:
              api_key:
                airbyte_secret: true
                default: ""
                title: "API key"
                type: "string"
              base_url:
                description: "The base URL for your OpenAI-compatible service"
                examples:
                - "https://your-service-name.com"
                title: "Base URL"
                type: "string"
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              mode:
                const: "openai_compatible"
                default: "openai_compatible"
                enum:
                - "openai_compatible"
                title: "Mode"
                type: "string"
              model_name:
                default: "text-embedding-ada-002"
                description: "The name of the model to use for embedding"
                examples:
                - "text-embedding-ada-002"
                title: "Model name"
                type: "string"
            required:
            - "base_url"
            - "dimensions"
            - "mode"
            title: "OpenAI-compatible"
            type: "object"
          title: "Embedding"
          type: "object"
        indexing:
          description: "Pinecone is a popular vector store that can be used to store\
            \ and retrieve embeddings."
          group: "indexing"
          properties:
            index:
              description: "Pinecone index in your project to load data into"
              title: "Index"
              type: "string"
            pinecone_environment:
              description: "Pinecone Cloud environment to use"
              examples:
              - "us-west1-gcp"
              - "gcp-starter"
              title: "Pinecone Environment"
              type: "string"
            pinecone_key:
              airbyte_secret: true
              description: "The Pinecone API key to use matching the environment (copy\
                \ from Pinecone console)"
              title: "Pinecone API key"
              type: "string"
          required:
          - "pinecone_key"
          - "pinecone_environment"
          - "index"
          title: "Indexing"
          type: "object"
        omit_raw_text:
          default: false
          description: "Do not store the text that gets embedded along with the vector\
            \ and the metadata in the destination. If set to true, only the vector\
            \ and the metadata will be stored - in this case raw text for LLM use\
            \ cases needs to be retrieved from another source."
          group: "advanced"
          title: "Do not store raw text"
          type: "boolean"
        processing:
          group: "processing"
          properties:
            chunk_overlap:
              default: 0
              description: "Size of overlap between chunks in tokens to store in vector\
                \ store to better capture relevant context"
              title: "Chunk overlap"
              type: "integer"
            chunk_size:
              description: "Size of chunks in tokens to store in vector store (make\
                \ sure it is not too big for the context if your LLM)"
              maximum: 8191
              minimum: 1
              title: "Chunk size"
              type: "integer"
            field_name_mappings:
              default: []
              description: "List of fields to rename. Not applicable for nested fields,\
                \ but can be used to rename fields already flattened via dot notation."
              items:
                properties:
                  from_field:
                    description: "The field name in the source"
                    title: "From field name"
                    type: "string"
                  to_field:
                    description: "The field name to use in the destination"
                    title: "To field name"
                    type: "string"
                required:
                - "from_field"
                - "to_field"
                title: "FieldNameMappingConfigModel"
                type: "object"
              title: "Field name mappings"
              type: "array"
            metadata_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be stored as\
                \ metadata. The field list is applied to all streams in the same way\
                \ and non-existing fields are ignored. If none are defined, all fields\
                \ are considered metadata fields. When specifying text fields, you\
                \ can access nested fields in the record by using dot notation, e.g.\
                \ `user.name` will access the `name` field in the `user` object. It's\
                \ also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array. When specifying nested paths, all matching\
                \ values are flattened into an array set to a field named by the path."
              examples:
              - "age"
              - "user"
              - "user.name"
              items:
                type: "string"
              title: "Fields to store as metadata"
              type: "array"
            text_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be used to calculate\
                \ the embedding. The field list is applied to all streams in the same\
                \ way and non-existing fields are ignored. If none are defined, all\
                \ fields are considered text fields. When specifying text fields,\
                \ you can access nested fields in the record by using dot notation,\
                \ e.g. `user.name` will access the `name` field in the `user` object.\
                \ It's also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array."
              examples:
              - "text"
              - "user.name"
              - "users.*.name"
              items:
                type: "string"
              title: "Text fields to embed"
              type: "array"
            text_splitter:
              description: "Split text fields into chunks based on the specified method."
              oneOf:
              - description: "Split the text by the list of separators until the chunk\
                  \ size is reached, using the earlier mentioned separators where\
                  \ possible. This is useful for splitting text fields by paragraphs,\
                  \ sentences, words, etc."
                properties:
                  keep_separator:
                    default: false
                    description: "Whether to keep the separator in the resulting chunks"
                    title: "Keep separator"
                    type: "boolean"
                  mode:
                    const: "separator"
                    default: "separator"
                    enum:
                    - "separator"
                    title: "Mode"
                    type: "string"
                  separators:
                    default:
                    - "\"\\n\\n\""
                    - "\"\\n\""
                    - "\" \""
                    - "\"\""
                    description: "List of separator strings to split text fields by.\
                      \ The separator itself needs to be wrapped in double quotes,\
                      \ e.g. to split by the dot character, use \".\". To split by\
                      \ a newline, use \"\\n\"."
                    items:
                      type: "string"
                    title: "Separators"
                    type: "array"
                required:
                - "mode"
                title: "By Separator"
                type: "object"
              - description: "Split the text by Markdown headers down to the specified\
                  \ header level. If the chunk size fits multiple sections, they will\
                  \ be combined into a single chunk."
                properties:
                  mode:
                    const: "markdown"
                    default: "markdown"
                    enum:
                    - "markdown"
                    title: "Mode"
                    type: "string"
                  split_level:
                    default: 1
                    description: "Level of markdown headers to split text fields by.\
                      \ Headings down to the specified level will be used as split\
                      \ points"
                    maximum: 6
                    minimum: 1
                    title: "Split level"
                    type: "integer"
                required:
                - "mode"
                title: "By Markdown header"
                type: "object"
              - description: "Split the text by suitable delimiters based on the programming\
                  \ language. This is useful for splitting code into chunks."
                properties:
                  language:
                    description: "Split code in suitable places based on the programming\
                      \ language"
                    enum:
                    - "cpp"
                    - "go"
                    - "java"
                    - "js"
                    - "php"
                    - "proto"
                    - "python"
                    - "rst"
                    - "ruby"
                    - "rust"
                    - "scala"
                    - "swift"
                    - "markdown"
                    - "latex"
                    - "html"
                    - "sol"
                    title: "Language"
                    type: "string"
                  mode:
                    const: "code"
                    default: "code"
                    enum:
                    - "code"
                    title: "Mode"
                    type: "string"
                required:
                - "language"
                - "mode"
                title: "By Programming Language"
                type: "object"
              title: "Text splitter"
              type: "object"
          required:
          - "chunk_size"
          title: "ProcessingConfigModel"
          type: "object"
      required:
      - "embedding"
      - "processing"
      - "indexing"
      title: "Destination Config"
      type: "object"
    destination-cobra:
      properties:
        auth_type:
          const: "Client"
          type: "string"
          enum:
          - "Client"
        client_id:
          description: "Enter your Salesforce developer application's <a href=\"https://developer.salesforce.com/forums/?id=9062I000000DLgbQAG\"\
            >Client ID</a>"
          order: 1
          title: "Client ID"
          type: "string"
        client_secret:
          airbyte_secret: true
          description: "Enter your Salesforce developer application's <a href=\"https://developer.salesforce.com/forums/?id=9062I000000DLgbQAG\"\
            >Client secret</a>"
          order: 2
          title: "Client Secret"
          type: "string"
          x-speakeasy-param-sensitive: true
        is_sandbox:
          default: false
          description: "Toggle if you're using a <a href=\"https://help.salesforce.com/s/articleView?id=sf.deploy_sandboxes_parent.htm&type=5\"\
            >Salesforce Sandbox</a>"
          order: 7
          title: "Sync to Salesforce Sandbox"
          type: "boolean"
        print_record_content_on_error:
          default: false
          description: "If enabled, the records content will be printed as part of\
            \ the log in case of failure which allows for easier debugging."
          order: 6
          title: "Include Record Contents in Error Logs"
          type: "boolean"
        refresh_token:
          airbyte_secret: true
          description: "Enter your application's <a href=\"https://developer.salesforce.com/docs/atlas.en-us.mobile_sdk.meta/mobile_sdk/oauth_refresh_token_flow.htm\"\
            >Salesforce Refresh Token</a> used for Airbyte to access your Salesforce\
            \ account."
          order: 3
          title: "Refresh Token"
          type: "string"
          x-speakeasy-param-sensitive: true
        stream_mappings:
          default: []
          items:
            description: "Describes the relationship between a source stream and a\
              \ destination table and how to update the information."
            properties:
              destination_table:
                description: "The name for the table to update the data in the destination."
                title: "Destination table"
                type: "string"
              source_stream:
                description: "The name for the input stream."
                title: "Source stream"
                type: "string"
              update_mode:
                description: "How to update the data in the destination."
                enum:
                - "INSERT"
                - "UPDATE"
                - "UPSERT"
                - "DELETE"
                title: "Update mode"
                type: "string"
              upsert_key:
                description: "Given the operation is an upsert, a field representing\
                  \ an external ID needs to be provided"
                title: "Upsert key"
                type: "string"
            required:
            - "source_stream"
            - "destination_table"
            - "update_mode"
            title: "Stream Mapping"
            type: "object"
          order: 4
          title: "Stream Mapping to Salesforce"
          type: "array"
        stream_order:
          default: []
          description: "The order in which the streams should be synced. Streams are\
            \ synced in the order they are listed. Only those streams will be synced\
            \ so make sure all the input streams are configured here."
          items:
            type: "string"
          order: 5
          title: "Stream Sync Order"
          type: "array"
        destinationType:
          title: "cobra"
          const: "cobra"
          enum:
          - "cobra"
          order: 0
          type: "string"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      - "stream_mappings"
      - "stream_order"
      - "print_record_content_on_error"
      - "is_sandbox"
      - "destinationType"
      title: "Salesforce Destination Spec"
      type: "object"
    destination-cobra-update:
      properties:
        auth_type:
          const: "Client"
          type: "string"
          enum:
          - "Client"
        client_id:
          description: "Enter your Salesforce developer application's <a href=\"https://developer.salesforce.com/forums/?id=9062I000000DLgbQAG\"\
            >Client ID</a>"
          order: 1
          title: "Client ID"
          type: "string"
        client_secret:
          airbyte_secret: true
          description: "Enter your Salesforce developer application's <a href=\"https://developer.salesforce.com/forums/?id=9062I000000DLgbQAG\"\
            >Client secret</a>"
          order: 2
          title: "Client Secret"
          type: "string"
        is_sandbox:
          default: false
          description: "Toggle if you're using a <a href=\"https://help.salesforce.com/s/articleView?id=sf.deploy_sandboxes_parent.htm&type=5\"\
            >Salesforce Sandbox</a>"
          order: 7
          title: "Sync to Salesforce Sandbox"
          type: "boolean"
        print_record_content_on_error:
          default: false
          description: "If enabled, the records content will be printed as part of\
            \ the log in case of failure which allows for easier debugging."
          order: 6
          title: "Include Record Contents in Error Logs"
          type: "boolean"
        refresh_token:
          airbyte_secret: true
          description: "Enter your application's <a href=\"https://developer.salesforce.com/docs/atlas.en-us.mobile_sdk.meta/mobile_sdk/oauth_refresh_token_flow.htm\"\
            >Salesforce Refresh Token</a> used for Airbyte to access your Salesforce\
            \ account."
          order: 3
          title: "Refresh Token"
          type: "string"
        stream_mappings:
          default: []
          items:
            description: "Describes the relationship between a source stream and a\
              \ destination table and how to update the information."
            properties:
              destination_table:
                description: "The name for the table to update the data in the destination."
                title: "Destination table"
                type: "string"
              source_stream:
                description: "The name for the input stream."
                title: "Source stream"
                type: "string"
              update_mode:
                description: "How to update the data in the destination."
                enum:
                - "INSERT"
                - "UPDATE"
                - "UPSERT"
                - "DELETE"
                title: "Update mode"
                type: "string"
              upsert_key:
                description: "Given the operation is an upsert, a field representing\
                  \ an external ID needs to be provided"
                title: "Upsert key"
                type: "string"
            required:
            - "source_stream"
            - "destination_table"
            - "update_mode"
            title: "Stream Mapping"
            type: "object"
          order: 4
          title: "Stream Mapping to Salesforce"
          type: "array"
        stream_order:
          default: []
          description: "The order in which the streams should be synced. Streams are\
            \ synced in the order they are listed. Only those streams will be synced\
            \ so make sure all the input streams are configured here."
          items:
            type: "string"
          order: 5
          title: "Stream Sync Order"
          type: "array"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      - "stream_mappings"
      - "stream_order"
      - "print_record_content_on_error"
      - "is_sandbox"
      title: "Salesforce Destination Spec"
      type: "object"
    destination-bigquery:
      groups:
      - id: "connection"
        title: "Connection"
      - id: "advanced"
        title: "Advanced"
      properties:
        big_query_client_buffer_size_mb:
          default: 15
          description: "Google BigQuery client's chunk (buffer) size (MIN=1, MAX =\
            \ 15) for each table. The size that will be written by a single RPC. Written\
            \ data will be buffered and only flushed upon reaching this size or closing\
            \ the channel. The default 15MB value is used if not set explicitly. Read\
            \ more <a href=\"https://googleapis.dev/python/bigquery/latest/generated/google.cloud.bigquery.client.Client.html\"\
            >here</a>."
          examples:
          - "15"
          group: "advanced"
          maximum: 15
          minimum: 1
          order: 6
          title: "Google BigQuery Client Chunk Size"
          type: "integer"
        credentials_json:
          airbyte_secret: true
          always_show: true
          description: "The contents of the JSON service account key. Check out the\
            \ <a href=\"https://docs.airbyte.com/integrations/destinations/bigquery#service-account-key\"\
            >docs</a> if you need help generating this key. Default credentials will\
            \ be used if this field is left empty."
          group: "connection"
          order: 4
          title: "Service Account Key JSON (Required for cloud, optional for open-source)"
          type: "string"
          x-speakeasy-param-sensitive: true
        dataset_id:
          description: "The default BigQuery Dataset ID that tables are replicated\
            \ to if the source does not specify a namespace. Read more <a href=\"\
            https://cloud.google.com/bigquery/docs/datasets#create-dataset\">here</a>."
          group: "connection"
          order: 2
          title: "Default Dataset ID"
          type: "string"
        dataset_location:
          description: "The location of the dataset. Warning: Changes made after creation\
            \ will not be applied. Read more <a href=\"https://cloud.google.com/bigquery/docs/locations\"\
            >here</a>."
          enum:
          - "US"
          - "EU"
          - "asia-east1"
          - "asia-east2"
          - "asia-northeast1"
          - "asia-northeast2"
          - "asia-northeast3"
          - "asia-south1"
          - "asia-south2"
          - "asia-southeast1"
          - "asia-southeast2"
          - "australia-southeast1"
          - "australia-southeast2"
          - "europe-central1"
          - "europe-central2"
          - "europe-north1"
          - "europe-north2"
          - "europe-southwest1"
          - "europe-west1"
          - "europe-west2"
          - "europe-west3"
          - "europe-west4"
          - "europe-west6"
          - "europe-west7"
          - "europe-west8"
          - "europe-west9"
          - "europe-west12"
          - "me-central1"
          - "me-central2"
          - "me-west1"
          - "northamerica-northeast1"
          - "northamerica-northeast2"
          - "southamerica-east1"
          - "southamerica-west1"
          - "us-central1"
          - "us-east1"
          - "us-east2"
          - "us-east3"
          - "us-east4"
          - "us-east5"
          - "us-south1"
          - "us-west1"
          - "us-west2"
          - "us-west3"
          - "us-west4"
          group: "connection"
          order: 1
          title: "Dataset Location"
          type: "string"
        disable_type_dedupe:
          default: false
          description: "Disable Writing Final Tables. WARNING! The data format in\
            \ _airbyte_data is likely stable but there are no guarantees that other\
            \ metadata columns will remain the same in future versions"
          group: "advanced"
          order: 8
          title: "Disable Final Tables. (WARNING! Unstable option; Columns in raw\
            \ table schema might change between versions)"
          type: "boolean"
        loading_method:
          description: "The way data will be uploaded to BigQuery."
          display_type: "radio"
          group: "connection"
          oneOf:
          - description: "Direct loading using batched SQL INSERT statements. This\
              \ method uses the BigQuery driver to convert large INSERT statements\
              \ into file uploads automatically."
            properties:
              method:
                const: "Standard"
                type: "string"
                enum:
                - "Standard"
            required:
            - "method"
            title: "Batched Standard Inserts"
          - description: "Writes large batches of records to a file, uploads the file\
              \ to GCS, then uses COPY INTO to load your data into BigQuery."
            properties:
              credential:
                description: "An HMAC key is a type of credential and can be associated\
                  \ with a service account or a user account in Cloud Storage. Read\
                  \ more <a href=\"https://cloud.google.com/storage/docs/authentication/hmackeys\"\
                  >here</a>."
                oneOf:
                - properties:
                    credential_type:
                      const: "HMAC_KEY"
                      order: 0
                      type: "string"
                      enum:
                      - "HMAC_KEY"
                    hmac_key_access_id:
                      airbyte_secret: true
                      description: "HMAC key access ID. When linked to a service account,\
                        \ this ID is 61 characters long; when linked to a user account,\
                        \ it is 24 characters long."
                      examples:
                      - "1234567890abcdefghij1234"
                      order: 1
                      title: "HMAC Key Access ID"
                      type: "string"
                      x-speakeasy-param-sensitive: true
                    hmac_key_secret:
                      airbyte_secret: true
                      description: "The corresponding secret for the access ID. It\
                        \ is a 40-character base-64 encoded string."
                      examples:
                      - "1234567890abcdefghij1234567890ABCDEFGHIJ"
                      order: 2
                      title: "HMAC Key Secret"
                      type: "string"
                      x-speakeasy-param-sensitive: true
                  required:
                  - "credential_type"
                  - "hmac_key_access_id"
                  - "hmac_key_secret"
                  title: "HMAC key"
                order: 1
                title: "Credential"
                type: "object"
              gcs_bucket_name:
                description: "The name of the GCS bucket. Read more <a href=\"https://cloud.google.com/storage/docs/naming-buckets\"\
                  >here</a>."
                examples:
                - "airbyte_sync"
                order: 2
                title: "GCS Bucket Name"
                type: "string"
              gcs_bucket_path:
                description: "Directory under the GCS bucket where data will be written."
                examples:
                - "data_sync/test"
                order: 3
                title: "GCS Bucket Path"
                type: "string"
              keep_files_in_gcs-bucket:
                default: "Delete all tmp files from GCS"
                description: "This upload method is supposed to temporary store records\
                  \ in GCS bucket. By this select you can chose if these records should\
                  \ be removed from GCS when migration has finished. The default \"\
                  Delete all tmp files from GCS\" value is used if not set explicitly."
                enum:
                - "Delete all tmp files from GCS"
                - "Keep all tmp files in GCS"
                order: 4
                title: "GCS Tmp Files Afterward Processing"
                type: "string"
              method:
                const: "GCS Staging"
                type: "string"
                enum:
                - "GCS Staging"
            required:
            - "method"
            - "gcs_bucket_name"
            - "gcs_bucket_path"
            - "credential"
            title: "GCS Staging"
          order: 3
          title: "Loading Method"
          type: "object"
        project_id:
          description: "The GCP project ID for the project containing the target BigQuery\
            \ dataset. Read more <a href=\"https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects\"\
            >here</a>."
          group: "connection"
          order: 0
          title: "Project ID"
          type: "string"
        raw_data_dataset:
          description: "The dataset to write raw tables into (default: airbyte_internal)"
          group: "advanced"
          order: 7
          title: "Raw Table Dataset Name"
          type: "string"
        transformation_priority:
          default: "interactive"
          description: "Interactive run type means that the query is executed as soon\
            \ as possible, and these queries count towards concurrent rate limit and\
            \ daily limit. Read more about interactive run type <a href=\"https://cloud.google.com/bigquery/docs/running-queries#queries\"\
            >here</a>. Batch queries are queued and started as soon as idle resources\
            \ are available in the BigQuery shared resource pool, which usually occurs\
            \ within a few minutes. Batch queries don’t count towards your concurrent\
            \ rate limit. Read more about batch queries <a href=\"https://cloud.google.com/bigquery/docs/running-queries#batch\"\
            >here</a>. The default \"interactive\" value is used if not set explicitly."
          enum:
          - "interactive"
          - "batch"
          group: "advanced"
          order: 5
          title: "Transformation Query Run Type"
          type: "string"
        destinationType:
          title: "bigquery"
          const: "bigquery"
          enum:
          - "bigquery"
          order: 0
          type: "string"
      required:
      - "project_id"
      - "dataset_location"
      - "dataset_id"
      - "destinationType"
      title: "BigQuery Destination Spec"
      type: "object"
    destination-bigquery-update:
      groups:
      - id: "connection"
        title: "Connection"
      - id: "advanced"
        title: "Advanced"
      properties:
        big_query_client_buffer_size_mb:
          default: 15
          description: "Google BigQuery client's chunk (buffer) size (MIN=1, MAX =\
            \ 15) for each table. The size that will be written by a single RPC. Written\
            \ data will be buffered and only flushed upon reaching this size or closing\
            \ the channel. The default 15MB value is used if not set explicitly. Read\
            \ more <a href=\"https://googleapis.dev/python/bigquery/latest/generated/google.cloud.bigquery.client.Client.html\"\
            >here</a>."
          examples:
          - "15"
          group: "advanced"
          maximum: 15
          minimum: 1
          order: 6
          title: "Google BigQuery Client Chunk Size"
          type: "integer"
        credentials_json:
          airbyte_secret: true
          always_show: true
          description: "The contents of the JSON service account key. Check out the\
            \ <a href=\"https://docs.airbyte.com/integrations/destinations/bigquery#service-account-key\"\
            >docs</a> if you need help generating this key. Default credentials will\
            \ be used if this field is left empty."
          group: "connection"
          order: 4
          title: "Service Account Key JSON (Required for cloud, optional for open-source)"
          type: "string"
        dataset_id:
          description: "The default BigQuery Dataset ID that tables are replicated\
            \ to if the source does not specify a namespace. Read more <a href=\"\
            https://cloud.google.com/bigquery/docs/datasets#create-dataset\">here</a>."
          group: "connection"
          order: 2
          title: "Default Dataset ID"
          type: "string"
        dataset_location:
          description: "The location of the dataset. Warning: Changes made after creation\
            \ will not be applied. Read more <a href=\"https://cloud.google.com/bigquery/docs/locations\"\
            >here</a>."
          enum:
          - "US"
          - "EU"
          - "asia-east1"
          - "asia-east2"
          - "asia-northeast1"
          - "asia-northeast2"
          - "asia-northeast3"
          - "asia-south1"
          - "asia-south2"
          - "asia-southeast1"
          - "asia-southeast2"
          - "australia-southeast1"
          - "australia-southeast2"
          - "europe-central1"
          - "europe-central2"
          - "europe-north1"
          - "europe-north2"
          - "europe-southwest1"
          - "europe-west1"
          - "europe-west2"
          - "europe-west3"
          - "europe-west4"
          - "europe-west6"
          - "europe-west7"
          - "europe-west8"
          - "europe-west9"
          - "europe-west12"
          - "me-central1"
          - "me-central2"
          - "me-west1"
          - "northamerica-northeast1"
          - "northamerica-northeast2"
          - "southamerica-east1"
          - "southamerica-west1"
          - "us-central1"
          - "us-east1"
          - "us-east2"
          - "us-east3"
          - "us-east4"
          - "us-east5"
          - "us-south1"
          - "us-west1"
          - "us-west2"
          - "us-west3"
          - "us-west4"
          group: "connection"
          order: 1
          title: "Dataset Location"
          type: "string"
        disable_type_dedupe:
          default: false
          description: "Disable Writing Final Tables. WARNING! The data format in\
            \ _airbyte_data is likely stable but there are no guarantees that other\
            \ metadata columns will remain the same in future versions"
          group: "advanced"
          order: 8
          title: "Disable Final Tables. (WARNING! Unstable option; Columns in raw\
            \ table schema might change between versions)"
          type: "boolean"
        loading_method:
          description: "The way data will be uploaded to BigQuery."
          display_type: "radio"
          group: "connection"
          oneOf:
          - description: "Direct loading using batched SQL INSERT statements. This\
              \ method uses the BigQuery driver to convert large INSERT statements\
              \ into file uploads automatically."
            properties:
              method:
                const: "Standard"
                type: "string"
                enum:
                - "Standard"
            required:
            - "method"
            title: "Batched Standard Inserts"
          - description: "Writes large batches of records to a file, uploads the file\
              \ to GCS, then uses COPY INTO to load your data into BigQuery."
            properties:
              credential:
                description: "An HMAC key is a type of credential and can be associated\
                  \ with a service account or a user account in Cloud Storage. Read\
                  \ more <a href=\"https://cloud.google.com/storage/docs/authentication/hmackeys\"\
                  >here</a>."
                oneOf:
                - properties:
                    credential_type:
                      const: "HMAC_KEY"
                      order: 0
                      type: "string"
                      enum:
                      - "HMAC_KEY"
                    hmac_key_access_id:
                      airbyte_secret: true
                      description: "HMAC key access ID. When linked to a service account,\
                        \ this ID is 61 characters long; when linked to a user account,\
                        \ it is 24 characters long."
                      examples:
                      - "1234567890abcdefghij1234"
                      order: 1
                      title: "HMAC Key Access ID"
                      type: "string"
                    hmac_key_secret:
                      airbyte_secret: true
                      description: "The corresponding secret for the access ID. It\
                        \ is a 40-character base-64 encoded string."
                      examples:
                      - "1234567890abcdefghij1234567890ABCDEFGHIJ"
                      order: 2
                      title: "HMAC Key Secret"
                      type: "string"
                  required:
                  - "credential_type"
                  - "hmac_key_access_id"
                  - "hmac_key_secret"
                  title: "HMAC key"
                order: 1
                title: "Credential"
                type: "object"
              gcs_bucket_name:
                description: "The name of the GCS bucket. Read more <a href=\"https://cloud.google.com/storage/docs/naming-buckets\"\
                  >here</a>."
                examples:
                - "airbyte_sync"
                order: 2
                title: "GCS Bucket Name"
                type: "string"
              gcs_bucket_path:
                description: "Directory under the GCS bucket where data will be written."
                examples:
                - "data_sync/test"
                order: 3
                title: "GCS Bucket Path"
                type: "string"
              keep_files_in_gcs-bucket:
                default: "Delete all tmp files from GCS"
                description: "This upload method is supposed to temporary store records\
                  \ in GCS bucket. By this select you can chose if these records should\
                  \ be removed from GCS when migration has finished. The default \"\
                  Delete all tmp files from GCS\" value is used if not set explicitly."
                enum:
                - "Delete all tmp files from GCS"
                - "Keep all tmp files in GCS"
                order: 4
                title: "GCS Tmp Files Afterward Processing"
                type: "string"
              method:
                const: "GCS Staging"
                type: "string"
                enum:
                - "GCS Staging"
            required:
            - "method"
            - "gcs_bucket_name"
            - "gcs_bucket_path"
            - "credential"
            title: "GCS Staging"
          order: 3
          title: "Loading Method"
          type: "object"
        project_id:
          description: "The GCP project ID for the project containing the target BigQuery\
            \ dataset. Read more <a href=\"https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects\"\
            >here</a>."
          group: "connection"
          order: 0
          title: "Project ID"
          type: "string"
        raw_data_dataset:
          description: "The dataset to write raw tables into (default: airbyte_internal)"
          group: "advanced"
          order: 7
          title: "Raw Table Dataset Name"
          type: "string"
        transformation_priority:
          default: "interactive"
          description: "Interactive run type means that the query is executed as soon\
            \ as possible, and these queries count towards concurrent rate limit and\
            \ daily limit. Read more about interactive run type <a href=\"https://cloud.google.com/bigquery/docs/running-queries#queries\"\
            >here</a>. Batch queries are queued and started as soon as idle resources\
            \ are available in the BigQuery shared resource pool, which usually occurs\
            \ within a few minutes. Batch queries don’t count towards your concurrent\
            \ rate limit. Read more about batch queries <a href=\"https://cloud.google.com/bigquery/docs/running-queries#batch\"\
            >here</a>. The default \"interactive\" value is used if not set explicitly."
          enum:
          - "interactive"
          - "batch"
          group: "advanced"
          order: 5
          title: "Transformation Query Run Type"
          type: "string"
      required:
      - "project_id"
      - "dataset_location"
      - "dataset_id"
      title: "BigQuery Destination Spec"
      type: "object"
    destination-pgvector:
      description: "The configuration model for the Vector DB based destinations.\
        \ This model is used to generate the UI for the destination configuration,\n\
        as well as to provide type safety for the configuration passed to the destination.\n\
        \nThe configuration model is composed of four parts:\n* Processing configuration\n\
        * Embedding configuration\n* Indexing configuration\n* Advanced configuration\n\
        \nProcessing, embedding and advanced configuration are provided by this base\
        \ class, while the indexing configuration is provided by the destination connector\
        \ in the sub class."
      groups:
      - id: "processing"
        title: "Processing"
      - id: "embedding"
        title: "Embedding"
      - id: "indexing"
        title: "Indexing"
      - id: "advanced"
        title: "Advanced"
      properties:
        embedding:
          description: "Embedding configuration"
          group: "embedding"
          oneOf:
          - description: "Use the OpenAI API to embed text. This option is using the\
              \ text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              mode:
                const: "openai"
                default: "openai"
                enum:
                - "openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                title: "OpenAI API key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "openai_key"
            - "mode"
            title: "OpenAI"
            type: "object"
          - description: "Use the Cohere API to embed text."
            properties:
              cohere_key:
                airbyte_secret: true
                title: "Cohere API key"
                type: "string"
                x-speakeasy-param-sensitive: true
              mode:
                const: "cohere"
                default: "cohere"
                enum:
                - "cohere"
                title: "Mode"
                type: "string"
            required:
            - "cohere_key"
            - "mode"
            title: "Cohere"
            type: "object"
          - description: "Use a fake embedding made out of random vectors with 1536\
              \ embedding dimensions. This is useful for testing the data pipeline\
              \ without incurring any costs."
            properties:
              mode:
                const: "fake"
                default: "fake"
                enum:
                - "fake"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "Fake"
            type: "object"
          - description: "Use the Azure-hosted OpenAI API to embed text. This option\
              \ is using the text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              api_base:
                description: "The base URL for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "https://your-resource-name.openai.azure.com"
                title: "Resource base URL"
                type: "string"
              deployment:
                description: "The deployment for your Azure OpenAI resource.  You\
                  \ can find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "your-resource-name"
                title: "Deployment"
                type: "string"
              mode:
                const: "azure_openai"
                default: "azure_openai"
                enum:
                - "azure_openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                description: "The API key for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                title: "Azure OpenAI API key"
                type: "string"
                x-speakeasy-param-sensitive: true
            required:
            - "openai_key"
            - "api_base"
            - "deployment"
            - "mode"
            title: "Azure OpenAI"
            type: "object"
          - description: "Use a service that's compatible with the OpenAI API to embed\
              \ text."
            properties:
              api_key:
                airbyte_secret: true
                default: ""
                title: "API key"
                type: "string"
                x-speakeasy-param-sensitive: true
              base_url:
                description: "The base URL for your OpenAI-compatible service"
                examples:
                - "https://your-service-name.com"
                title: "Base URL"
                type: "string"
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              mode:
                const: "openai_compatible"
                default: "openai_compatible"
                enum:
                - "openai_compatible"
                title: "Mode"
                type: "string"
              model_name:
                default: "text-embedding-ada-002"
                description: "The name of the model to use for embedding"
                examples:
                - "text-embedding-ada-002"
                title: "Model name"
                type: "string"
            required:
            - "base_url"
            - "dimensions"
            - "mode"
            title: "OpenAI-compatible"
            type: "object"
          title: "Embedding"
          type: "object"
        indexing:
          description: "Postgres can be used to store vector data and retrieve embeddings."
          group: "indexing"
          properties:
            credentials:
              properties:
                password:
                  airbyte_secret: true
                  description: "Enter the password you want to use to access the database"
                  examples:
                  - "AIRBYTE_PASSWORD"
                  order: 7
                  title: "Password"
                  type: "string"
                  x-speakeasy-param-sensitive: true
              required:
              - "password"
              title: "Credentials"
              type: "object"
            database:
              description: "Enter the name of the database that you want to sync data\
                \ into"
              examples:
              - "AIRBYTE_DATABASE"
              order: 4
              title: "Database"
              type: "string"
            default_schema:
              default: "public"
              description: "Enter the name of the default schema"
              examples:
              - "AIRBYTE_SCHEMA"
              order: 5
              title: "Default Schema"
              type: "string"
            host:
              description: "Enter the account name you want to use to access the database."
              examples:
              - "AIRBYTE_ACCOUNT"
              order: 1
              title: "Host"
              type: "string"
            port:
              default: 5432
              description: "Enter the port you want to use to access the database"
              examples:
              - "5432"
              order: 2
              title: "Port"
              type: "integer"
            username:
              description: "Enter the name of the user you want to use to access the\
                \ database"
              examples:
              - "AIRBYTE_USER"
              order: 6
              title: "Username"
              type: "string"
          required:
          - "host"
          - "database"
          - "username"
          - "credentials"
          title: "Postgres Connection"
          type: "object"
        omit_raw_text:
          default: false
          description: "Do not store the text that gets embedded along with the vector\
            \ and the metadata in the destination. If set to true, only the vector\
            \ and the metadata will be stored - in this case raw text for LLM use\
            \ cases needs to be retrieved from another source."
          group: "advanced"
          title: "Do not store raw text"
          type: "boolean"
        processing:
          group: "processing"
          properties:
            chunk_overlap:
              default: 0
              description: "Size of overlap between chunks in tokens to store in vector\
                \ store to better capture relevant context"
              title: "Chunk overlap"
              type: "integer"
            chunk_size:
              description: "Size of chunks in tokens to store in vector store (make\
                \ sure it is not too big for the context if your LLM)"
              maximum: 8191
              minimum: 1
              title: "Chunk size"
              type: "integer"
            field_name_mappings:
              default: []
              description: "List of fields to rename. Not applicable for nested fields,\
                \ but can be used to rename fields already flattened via dot notation."
              items:
                properties:
                  from_field:
                    description: "The field name in the source"
                    title: "From field name"
                    type: "string"
                  to_field:
                    description: "The field name to use in the destination"
                    title: "To field name"
                    type: "string"
                required:
                - "from_field"
                - "to_field"
                title: "FieldNameMappingConfigModel"
                type: "object"
              title: "Field name mappings"
              type: "array"
            metadata_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be stored as\
                \ metadata. The field list is applied to all streams in the same way\
                \ and non-existing fields are ignored. If none are defined, all fields\
                \ are considered metadata fields. When specifying text fields, you\
                \ can access nested fields in the record by using dot notation, e.g.\
                \ `user.name` will access the `name` field in the `user` object. It's\
                \ also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array. When specifying nested paths, all matching\
                \ values are flattened into an array set to a field named by the path."
              examples:
              - "age"
              - "user"
              - "user.name"
              items:
                type: "string"
              title: "Fields to store as metadata"
              type: "array"
            text_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be used to calculate\
                \ the embedding. The field list is applied to all streams in the same\
                \ way and non-existing fields are ignored. If none are defined, all\
                \ fields are considered text fields. When specifying text fields,\
                \ you can access nested fields in the record by using dot notation,\
                \ e.g. `user.name` will access the `name` field in the `user` object.\
                \ It's also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array."
              examples:
              - "text"
              - "user.name"
              - "users.*.name"
              items:
                type: "string"
              title: "Text fields to embed"
              type: "array"
            text_splitter:
              description: "Split text fields into chunks based on the specified method."
              oneOf:
              - description: "Split the text by the list of separators until the chunk\
                  \ size is reached, using the earlier mentioned separators where\
                  \ possible. This is useful for splitting text fields by paragraphs,\
                  \ sentences, words, etc."
                properties:
                  keep_separator:
                    default: false
                    description: "Whether to keep the separator in the resulting chunks"
                    title: "Keep separator"
                    type: "boolean"
                  mode:
                    const: "separator"
                    default: "separator"
                    enum:
                    - "separator"
                    title: "Mode"
                    type: "string"
                  separators:
                    default:
                    - "\"\\n\\n\""
                    - "\"\\n\""
                    - "\" \""
                    - "\"\""
                    description: "List of separator strings to split text fields by.\
                      \ The separator itself needs to be wrapped in double quotes,\
                      \ e.g. to split by the dot character, use \".\". To split by\
                      \ a newline, use \"\\n\"."
                    items:
                      type: "string"
                    title: "Separators"
                    type: "array"
                required:
                - "mode"
                title: "By Separator"
                type: "object"
              - description: "Split the text by Markdown headers down to the specified\
                  \ header level. If the chunk size fits multiple sections, they will\
                  \ be combined into a single chunk."
                properties:
                  mode:
                    const: "markdown"
                    default: "markdown"
                    enum:
                    - "markdown"
                    title: "Mode"
                    type: "string"
                  split_level:
                    default: 1
                    description: "Level of markdown headers to split text fields by.\
                      \ Headings down to the specified level will be used as split\
                      \ points"
                    maximum: 6
                    minimum: 1
                    title: "Split level"
                    type: "integer"
                required:
                - "mode"
                title: "By Markdown header"
                type: "object"
              - description: "Split the text by suitable delimiters based on the programming\
                  \ language. This is useful for splitting code into chunks."
                properties:
                  language:
                    description: "Split code in suitable places based on the programming\
                      \ language"
                    enum:
                    - "cpp"
                    - "go"
                    - "java"
                    - "js"
                    - "php"
                    - "proto"
                    - "python"
                    - "rst"
                    - "ruby"
                    - "rust"
                    - "scala"
                    - "swift"
                    - "markdown"
                    - "latex"
                    - "html"
                    - "sol"
                    title: "Language"
                    type: "string"
                  mode:
                    const: "code"
                    default: "code"
                    enum:
                    - "code"
                    title: "Mode"
                    type: "string"
                required:
                - "language"
                - "mode"
                title: "By Programming Language"
                type: "object"
              title: "Text splitter"
              type: "object"
          required:
          - "chunk_size"
          title: "ProcessingConfigModel"
          type: "object"
        destinationType:
          title: "pgvector"
          const: "pgvector"
          enum:
          - "pgvector"
          order: 0
          type: "string"
      required:
      - "embedding"
      - "processing"
      - "indexing"
      - "destinationType"
      title: "Destination Config"
      type: "object"
    destination-pgvector-update:
      description: "The configuration model for the Vector DB based destinations.\
        \ This model is used to generate the UI for the destination configuration,\n\
        as well as to provide type safety for the configuration passed to the destination.\n\
        \nThe configuration model is composed of four parts:\n* Processing configuration\n\
        * Embedding configuration\n* Indexing configuration\n* Advanced configuration\n\
        \nProcessing, embedding and advanced configuration are provided by this base\
        \ class, while the indexing configuration is provided by the destination connector\
        \ in the sub class."
      groups:
      - id: "processing"
        title: "Processing"
      - id: "embedding"
        title: "Embedding"
      - id: "indexing"
        title: "Indexing"
      - id: "advanced"
        title: "Advanced"
      properties:
        embedding:
          description: "Embedding configuration"
          group: "embedding"
          oneOf:
          - description: "Use the OpenAI API to embed text. This option is using the\
              \ text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              mode:
                const: "openai"
                default: "openai"
                enum:
                - "openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                title: "OpenAI API key"
                type: "string"
            required:
            - "openai_key"
            - "mode"
            title: "OpenAI"
            type: "object"
          - description: "Use the Cohere API to embed text."
            properties:
              cohere_key:
                airbyte_secret: true
                title: "Cohere API key"
                type: "string"
              mode:
                const: "cohere"
                default: "cohere"
                enum:
                - "cohere"
                title: "Mode"
                type: "string"
            required:
            - "cohere_key"
            - "mode"
            title: "Cohere"
            type: "object"
          - description: "Use a fake embedding made out of random vectors with 1536\
              \ embedding dimensions. This is useful for testing the data pipeline\
              \ without incurring any costs."
            properties:
              mode:
                const: "fake"
                default: "fake"
                enum:
                - "fake"
                title: "Mode"
                type: "string"
            required:
            - "mode"
            title: "Fake"
            type: "object"
          - description: "Use the Azure-hosted OpenAI API to embed text. This option\
              \ is using the text-embedding-ada-002 model with 1536 embedding dimensions."
            properties:
              api_base:
                description: "The base URL for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "https://your-resource-name.openai.azure.com"
                title: "Resource base URL"
                type: "string"
              deployment:
                description: "The deployment for your Azure OpenAI resource.  You\
                  \ can find this in the Azure portal under your Azure OpenAI resource"
                examples:
                - "your-resource-name"
                title: "Deployment"
                type: "string"
              mode:
                const: "azure_openai"
                default: "azure_openai"
                enum:
                - "azure_openai"
                title: "Mode"
                type: "string"
              openai_key:
                airbyte_secret: true
                description: "The API key for your Azure OpenAI resource.  You can\
                  \ find this in the Azure portal under your Azure OpenAI resource"
                title: "Azure OpenAI API key"
                type: "string"
            required:
            - "openai_key"
            - "api_base"
            - "deployment"
            - "mode"
            title: "Azure OpenAI"
            type: "object"
          - description: "Use a service that's compatible with the OpenAI API to embed\
              \ text."
            properties:
              api_key:
                airbyte_secret: true
                default: ""
                title: "API key"
                type: "string"
              base_url:
                description: "The base URL for your OpenAI-compatible service"
                examples:
                - "https://your-service-name.com"
                title: "Base URL"
                type: "string"
              dimensions:
                description: "The number of dimensions the embedding model is generating"
                examples:
                - 1536
                - 384
                title: "Embedding dimensions"
                type: "integer"
              mode:
                const: "openai_compatible"
                default: "openai_compatible"
                enum:
                - "openai_compatible"
                title: "Mode"
                type: "string"
              model_name:
                default: "text-embedding-ada-002"
                description: "The name of the model to use for embedding"
                examples:
                - "text-embedding-ada-002"
                title: "Model name"
                type: "string"
            required:
            - "base_url"
            - "dimensions"
            - "mode"
            title: "OpenAI-compatible"
            type: "object"
          title: "Embedding"
          type: "object"
        indexing:
          description: "Postgres can be used to store vector data and retrieve embeddings."
          group: "indexing"
          properties:
            credentials:
              properties:
                password:
                  airbyte_secret: true
                  description: "Enter the password you want to use to access the database"
                  examples:
                  - "AIRBYTE_PASSWORD"
                  order: 7
                  title: "Password"
                  type: "string"
              required:
              - "password"
              title: "Credentials"
              type: "object"
            database:
              description: "Enter the name of the database that you want to sync data\
                \ into"
              examples:
              - "AIRBYTE_DATABASE"
              order: 4
              title: "Database"
              type: "string"
            default_schema:
              default: "public"
              description: "Enter the name of the default schema"
              examples:
              - "AIRBYTE_SCHEMA"
              order: 5
              title: "Default Schema"
              type: "string"
            host:
              description: "Enter the account name you want to use to access the database."
              examples:
              - "AIRBYTE_ACCOUNT"
              order: 1
              title: "Host"
              type: "string"
            port:
              default: 5432
              description: "Enter the port you want to use to access the database"
              examples:
              - "5432"
              order: 2
              title: "Port"
              type: "integer"
            username:
              description: "Enter the name of the user you want to use to access the\
                \ database"
              examples:
              - "AIRBYTE_USER"
              order: 6
              title: "Username"
              type: "string"
          required:
          - "host"
          - "database"
          - "username"
          - "credentials"
          title: "Postgres Connection"
          type: "object"
        omit_raw_text:
          default: false
          description: "Do not store the text that gets embedded along with the vector\
            \ and the metadata in the destination. If set to true, only the vector\
            \ and the metadata will be stored - in this case raw text for LLM use\
            \ cases needs to be retrieved from another source."
          group: "advanced"
          title: "Do not store raw text"
          type: "boolean"
        processing:
          group: "processing"
          properties:
            chunk_overlap:
              default: 0
              description: "Size of overlap between chunks in tokens to store in vector\
                \ store to better capture relevant context"
              title: "Chunk overlap"
              type: "integer"
            chunk_size:
              description: "Size of chunks in tokens to store in vector store (make\
                \ sure it is not too big for the context if your LLM)"
              maximum: 8191
              minimum: 1
              title: "Chunk size"
              type: "integer"
            field_name_mappings:
              default: []
              description: "List of fields to rename. Not applicable for nested fields,\
                \ but can be used to rename fields already flattened via dot notation."
              items:
                properties:
                  from_field:
                    description: "The field name in the source"
                    title: "From field name"
                    type: "string"
                  to_field:
                    description: "The field name to use in the destination"
                    title: "To field name"
                    type: "string"
                required:
                - "from_field"
                - "to_field"
                title: "FieldNameMappingConfigModel"
                type: "object"
              title: "Field name mappings"
              type: "array"
            metadata_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be stored as\
                \ metadata. The field list is applied to all streams in the same way\
                \ and non-existing fields are ignored. If none are defined, all fields\
                \ are considered metadata fields. When specifying text fields, you\
                \ can access nested fields in the record by using dot notation, e.g.\
                \ `user.name` will access the `name` field in the `user` object. It's\
                \ also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array. When specifying nested paths, all matching\
                \ values are flattened into an array set to a field named by the path."
              examples:
              - "age"
              - "user"
              - "user.name"
              items:
                type: "string"
              title: "Fields to store as metadata"
              type: "array"
            text_fields:
              always_show: true
              default: []
              description: "List of fields in the record that should be used to calculate\
                \ the embedding. The field list is applied to all streams in the same\
                \ way and non-existing fields are ignored. If none are defined, all\
                \ fields are considered text fields. When specifying text fields,\
                \ you can access nested fields in the record by using dot notation,\
                \ e.g. `user.name` will access the `name` field in the `user` object.\
                \ It's also possible to use wildcards to access all fields in an object,\
                \ e.g. `users.*.name` will access all `names` fields in all entries\
                \ of the `users` array."
              examples:
              - "text"
              - "user.name"
              - "users.*.name"
              items:
                type: "string"
              title: "Text fields to embed"
              type: "array"
            text_splitter:
              description: "Split text fields into chunks based on the specified method."
              oneOf:
              - description: "Split the text by the list of separators until the chunk\
                  \ size is reached, using the earlier mentioned separators where\
                  \ possible. This is useful for splitting text fields by paragraphs,\
                  \ sentences, words, etc."
                properties:
                  keep_separator:
                    default: false
                    description: "Whether to keep the separator in the resulting chunks"
                    title: "Keep separator"
                    type: "boolean"
                  mode:
                    const: "separator"
                    default: "separator"
                    enum:
                    - "separator"
                    title: "Mode"
                    type: "string"
                  separators:
                    default:
                    - "\"\\n\\n\""
                    - "\"\\n\""
                    - "\" \""
                    - "\"\""
                    description: "List of separator strings to split text fields by.\
                      \ The separator itself needs to be wrapped in double quotes,\
                      \ e.g. to split by the dot character, use \".\". To split by\
                      \ a newline, use \"\\n\"."
                    items:
                      type: "string"
                    title: "Separators"
                    type: "array"
                required:
                - "mode"
                title: "By Separator"
                type: "object"
              - description: "Split the text by Markdown headers down to the specified\
                  \ header level. If the chunk size fits multiple sections, they will\
                  \ be combined into a single chunk."
                properties:
                  mode:
                    const: "markdown"
                    default: "markdown"
                    enum:
                    - "markdown"
                    title: "Mode"
                    type: "string"
                  split_level:
                    default: 1
                    description: "Level of markdown headers to split text fields by.\
                      \ Headings down to the specified level will be used as split\
                      \ points"
                    maximum: 6
                    minimum: 1
                    title: "Split level"
                    type: "integer"
                required:
                - "mode"
                title: "By Markdown header"
                type: "object"
              - description: "Split the text by suitable delimiters based on the programming\
                  \ language. This is useful for splitting code into chunks."
                properties:
                  language:
                    description: "Split code in suitable places based on the programming\
                      \ language"
                    enum:
                    - "cpp"
                    - "go"
                    - "java"
                    - "js"
                    - "php"
                    - "proto"
                    - "python"
                    - "rst"
                    - "ruby"
                    - "rust"
                    - "scala"
                    - "swift"
                    - "markdown"
                    - "latex"
                    - "html"
                    - "sol"
                    title: "Language"
                    type: "string"
                  mode:
                    const: "code"
                    default: "code"
                    enum:
                    - "code"
                    title: "Mode"
                    type: "string"
                required:
                - "language"
                - "mode"
                title: "By Programming Language"
                type: "object"
              title: "Text splitter"
              type: "object"
          required:
          - "chunk_size"
          title: "ProcessingConfigModel"
          type: "object"
      required:
      - "embedding"
      - "processing"
      - "indexing"
      title: "Destination Config"
      type: "object"

    DestinationConfiguration:
      description: The values required to configure the destination.
      example: { user: "charles" }
    
      oneOf:
        - title: destination-google-sheets
          $ref: "#/components/schemas/destination-google-sheets"
        - title: destination-astra
          $ref: "#/components/schemas/destination-astra"
        - title: destination-aws-datalake
          $ref: "#/components/schemas/destination-aws-datalake"
        - title: destination-azure-blob-storage
          $ref: "#/components/schemas/destination-azure-blob-storage"
        - title: destination-bigquery
          $ref: "#/components/schemas/destination-bigquery"
        - title: destination-clickhouse
          $ref: "#/components/schemas/destination-clickhouse"
        - title: destination-cobra
          $ref: "#/components/schemas/destination-cobra"
        - title: destination-convex
          $ref: "#/components/schemas/destination-convex"
        - title: destination-databricks
          $ref: "#/components/schemas/destination-databricks"
        - title: destination-deepset
          $ref: "#/components/schemas/destination-deepset"
        - title: destination-dev-null
          $ref: "#/components/schemas/destination-dev-null"
        - title: destination-duckdb
          $ref: "#/components/schemas/destination-duckdb"
        - title: destination-dynamodb
          $ref: "#/components/schemas/destination-dynamodb"
        - title: destination-elasticsearch
          $ref: "#/components/schemas/destination-elasticsearch"
        - title: destination-firebolt
          $ref: "#/components/schemas/destination-firebolt"
        - title: destination-firestore
          $ref: "#/components/schemas/destination-firestore"
        - title: destination-gcs
          $ref: "#/components/schemas/destination-gcs"
        - title: destination-milvus
          $ref: "#/components/schemas/destination-milvus"
        - title: destination-mongodb
          $ref: "#/components/schemas/destination-mongodb"
        - title: destination-motherduck
          $ref: "#/components/schemas/destination-motherduck"
        - title: destination-mssql
          $ref: "#/components/schemas/destination-mssql"
        - title: destination-mssql-v2
          $ref: "#/components/schemas/destination-mssql-v2"
        - title: destination-mysql
          $ref: "#/components/schemas/destination-mysql"
        - title: destination-oracle
          $ref: "#/components/schemas/destination-oracle"
        - title: destination-pgvector
          $ref: "#/components/schemas/destination-pgvector"
        - title: destination-pinecone
          $ref: "#/components/schemas/destination-pinecone"
        - title: destination-postgres
          $ref: "#/components/schemas/destination-postgres"
        - title: destination-pubsub
          $ref: "#/components/schemas/destination-pubsub"
        - title: destination-qdrant
          $ref: "#/components/schemas/destination-qdrant"
        - title: destination-redis
          $ref: "#/components/schemas/destination-redis"
        - title: destination-redshift
          $ref: "#/components/schemas/destination-redshift"
        - title: destination-s3
          $ref: "#/components/schemas/destination-s3"
        - title: destination-s3-data-lake
          $ref: "#/components/schemas/destination-s3-data-lake"
        - title: destination-sftp-json
          $ref: "#/components/schemas/destination-sftp-json"
        - title: destination-snowflake
          $ref: "#/components/schemas/destination-snowflake"
        - title: destination-snowflake-cortex
          $ref: "#/components/schemas/destination-snowflake-cortex"
        - title: destination-teradata
          $ref: "#/components/schemas/destination-teradata"
        - title: destination-timeplus
          $ref: "#/components/schemas/destination-timeplus"
        - title: destination-typesense
          $ref: "#/components/schemas/destination-typesense"
        - title: destination-vectara
          $ref: "#/components/schemas/destination-vectara"
        - title: destination-weaviate
          $ref: "#/components/schemas/destination-weaviate"
        - title: destination-yellowbrick
          $ref: "#/components/schemas/destination-yellowbrick"

    SourceConfiguration:
      description: The values required to configure the source.
      example: { user: "charles" }
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
